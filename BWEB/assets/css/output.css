/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-orange-100: oklch(95.4% 0.038 75.164);
    --color-orange-200: oklch(90.1% 0.076 70.697);
    --color-orange-300: oklch(83.7% 0.128 66.29);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-700: oklch(55.3% 0.195 38.402);
    --color-orange-800: oklch(47% 0.157 37.304);
    --color-orange-900: oklch(40.8% 0.123 38.172);
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-amber-300: oklch(87.9% 0.169 91.605);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-amber-700: oklch(55.5% 0.163 48.998);
    --color-amber-800: oklch(47.3% 0.137 46.201);
    --color-amber-900: oklch(41.4% 0.112 45.904);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-yellow-700: oklch(55.4% 0.135 66.442);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-yellow-900: oklch(42.1% 0.095 57.708);
    --color-lime-100: oklch(96.7% 0.067 122.328);
    --color-lime-200: oklch(93.8% 0.127 124.321);
    --color-lime-300: oklch(89.7% 0.196 126.665);
    --color-lime-400: oklch(84.1% 0.238 128.85);
    --color-lime-500: oklch(76.8% 0.233 130.85);
    --color-lime-600: oklch(64.8% 0.2 131.684);
    --color-lime-700: oklch(53.2% 0.157 131.589);
    --color-lime-800: oklch(45.3% 0.124 130.933);
    --color-lime-900: oklch(40.5% 0.101 131.063);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-300: oklch(87.1% 0.15 154.449);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-emerald-100: oklch(95% 0.052 163.051);
    --color-emerald-200: oklch(90.5% 0.093 164.15);
    --color-emerald-300: oklch(84.5% 0.143 164.978);
    --color-emerald-400: oklch(76.5% 0.177 163.223);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-emerald-600: oklch(59.6% 0.145 163.225);
    --color-emerald-700: oklch(50.8% 0.118 165.612);
    --color-emerald-800: oklch(43.2% 0.095 166.913);
    --color-emerald-900: oklch(37.8% 0.077 168.94);
    --color-teal-100: oklch(95.3% 0.051 180.801);
    --color-teal-200: oklch(91% 0.096 180.426);
    --color-teal-300: oklch(85.5% 0.138 181.071);
    --color-teal-400: oklch(77.7% 0.152 181.912);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-teal-700: oklch(51.1% 0.096 186.391);
    --color-teal-800: oklch(43.7% 0.078 188.216);
    --color-teal-900: oklch(38.6% 0.063 188.416);
    --color-cyan-100: oklch(95.6% 0.045 203.388);
    --color-cyan-200: oklch(91.7% 0.08 205.041);
    --color-cyan-300: oklch(86.5% 0.127 207.078);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-cyan-700: oklch(52% 0.105 223.128);
    --color-cyan-800: oklch(45% 0.085 224.283);
    --color-cyan-900: oklch(39.8% 0.07 227.392);
    --color-sky-100: oklch(95.1% 0.026 236.824);
    --color-sky-200: oklch(90.1% 0.058 230.902);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-600: oklch(58.8% 0.158 241.966);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-sky-800: oklch(44.3% 0.11 240.79);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-indigo-100: oklch(93% 0.034 272.788);
    --color-indigo-200: oklch(87% 0.065 274.039);
    --color-indigo-300: oklch(78.5% 0.115 274.713);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-800: oklch(39.8% 0.195 277.366);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-violet-100: oklch(94.3% 0.029 294.588);
    --color-violet-200: oklch(89.4% 0.057 293.283);
    --color-violet-300: oklch(81.1% 0.111 293.571);
    --color-violet-400: oklch(70.2% 0.183 293.541);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-violet-600: oklch(54.1% 0.281 293.009);
    --color-violet-700: oklch(49.1% 0.27 292.581);
    --color-violet-800: oklch(43.2% 0.232 292.759);
    --color-violet-900: oklch(38% 0.189 293.745);
    --color-purple-100: oklch(94.6% 0.033 307.174);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-purple-800: oklch(43.8% 0.218 303.724);
    --color-purple-900: oklch(38.1% 0.176 304.987);
    --color-fuchsia-100: oklch(95.2% 0.037 318.852);
    --color-fuchsia-200: oklch(90.3% 0.076 319.62);
    --color-fuchsia-300: oklch(83.3% 0.145 321.434);
    --color-fuchsia-400: oklch(74% 0.238 322.16);
    --color-fuchsia-500: oklch(66.7% 0.295 322.15);
    --color-fuchsia-600: oklch(59.1% 0.293 322.896);
    --color-fuchsia-700: oklch(51.8% 0.253 323.949);
    --color-fuchsia-800: oklch(45.2% 0.211 324.591);
    --color-fuchsia-900: oklch(40.1% 0.17 325.612);
    --color-pink-100: oklch(94.8% 0.028 342.258);
    --color-pink-200: oklch(89.9% 0.061 343.231);
    --color-pink-300: oklch(82.3% 0.12 346.018);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-pink-800: oklch(45.9% 0.187 3.815);
    --color-pink-900: oklch(40.8% 0.153 2.432);
    --color-rose-100: oklch(94.1% 0.03 12.58);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-300: oklch(81% 0.117 11.638);
    --color-rose-400: oklch(71.2% 0.194 13.428);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-rose-600: oklch(58.6% 0.253 17.585);
    --color-rose-700: oklch(51.4% 0.222 16.935);
    --color-rose-800: oklch(45.5% 0.188 13.697);
    --color-rose-900: oklch(41% 0.159 10.272);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-stone-100: oklch(97% 0.001 106.424);
    --color-stone-200: oklch(92.3% 0.003 48.717);
    --color-stone-300: oklch(86.9% 0.005 56.366);
    --color-stone-400: oklch(70.9% 0.01 56.259);
    --color-stone-500: oklch(55.3% 0.013 58.071);
    --color-stone-600: oklch(44.4% 0.011 73.639);
    --color-stone-700: oklch(37.4% 0.01 67.558);
    --color-stone-800: oklch(26.8% 0.007 34.298);
    --color-stone-900: oklch(21.6% 0.006 56.043);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-md: 48rem;
    --breakpoint-lg: 64rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --animate-spin: spin 1s linear infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .diff {
    position: relative;
    display: grid;
    width: 100%;
    overflow: hidden;
    webkit-user-select: none;
    user-select: none;
    direction: ltr;
    container-type: inline-size;
    grid-template-columns: auto 1fr;
    &:focus-visible, &:has(.diff-item-1:focus-visible) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      outline-color: var(--color-base-content);
    }
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      outline-color: var(--color-base-content);
      .diff-resizer {
        min-width: 90cqi;
        max-width: 90cqi;
      }
    }
    &:has(.diff-item-2:focus-visible) {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 1px;
      .diff-resizer {
        min-width: 10cqi;
        max-width: 10cqi;
      }
    }
    @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
      &:focus {
        .diff-resizer {
          min-width: 10cqi;
          max-width: 10cqi;
        }
      }
      &:has(.diff-item-1:focus) {
        .diff-resizer {
          min-width: 90cqi;
          max-width: 90cqi;
        }
      }
    }
  }
  .\@container {
    container-type: inline-size;
  }
  .modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset: calc(0.25rem * 0);
    margin: calc(0.25rem * 0);
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    align-items: center;
    justify-items: center;
    background-color: transparent;
    padding: calc(0.25rem * 0);
    color: inherit;
    overflow-x: hidden;
    transition: translate 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
    overflow-y: hidden;
    overscroll-behavior: contain;
    z-index: 999;
    &::backdrop {
      display: none;
    }
    &.modal-open, &[open], &:target {
      pointer-events: auto;
      visibility: visible;
      opacity: 100%;
      background-color: oklch(0% 0 0/ 0.4);
      .modal-box {
        translate: 0 0;
        scale: 1;
        opacity: 1;
      }
    }
    @starting-style {
      &.modal-open, &[open], &:target {
        visibility: hidden;
        opacity: 0%;
      }
    }
  }
  .tooltip {
    position: relative;
    display: inline-block;
    --tt-bg: var(--color-neutral);
    --tt-off: calc(100% + 0.5rem);
    --tt-tail: calc(100% + 1px + 0.25rem);
    > :where(.tooltip-content), &:where([data-tip]):before {
      position: absolute;
      max-width: 20rem;
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 1);
      text-align: center;
      white-space: normal;
      color: var(--color-neutral-content);
      opacity: 0%;
      font-size: 0.875rem;
      line-height: 1.25;
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      background-color: var(--tt-bg);
      width: max-content;
      pointer-events: none;
      z-index: 2;
      --tw-content: attr(data-tip);
      content: var(--tw-content);
    }
    &:after {
      position: absolute;
      position: absolute;
      opacity: 0%;
      background-color: var(--tt-bg);
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      content: "";
      pointer-events: none;
      width: 0.625rem;
      height: 0.25rem;
      display: block;
      mask-repeat: no-repeat;
      mask-position: -1px 0;
      --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
      mask-image: var(--mask-tooltip);
    }
    &.tooltip-open, &[data-tip]:not([data-tip=""]):hover, &:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover, &:has(:focus-visible) {
      > .tooltip-content, &[data-tip]:before, &:after {
        opacity: 100%;
        --tt-pos: 0rem;
        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      }
    }
    > .tooltip-content, &[data-tip]:before {
      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
      inset: auto auto var(--tt-off) 50%;
    }
    &:after {
      transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
      inset: auto auto var(--tt-tail) 50%;
    }
  }
  .tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-300);
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-order: 0;
    --tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--tab-order);
    height: var(--tab-height);
    font-size: 0.875rem;
    padding-inline-start: var(--tab-p);
    padding-inline-end: var(--tab-p);
    &:is(input[type="radio"]) {
      min-width: fit-content;
      &:after {
        content: attr(aria-label);
      }
    }
    &:is(label) {
      position: relative;
      input {
        position: absolute;
        inset: calc(0.25rem * 0);
        cursor: pointer;
        appearance: none;
        opacity: 0%;
      }
    }
    &:checked, &:is(label:has(:checked)), &:is(.tab-active, [aria-selected="true"]) {
      & + .tab-content {
        display: block;
        height: calc(100% - var(--tab-height) + var(--border));
      }
    }
    &:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
      }
    }
    &:not(input):empty {
      flex-grow: 1;
      cursor: default;
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible, &:is(label:has(:checked:focus-visible)) {
      outline: 2px solid currentColor;
      outline-offset: -5px;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
  }
  .tab\! {
    position: relative !important;
    display: inline-flex !important;
    cursor: pointer !important;
    appearance: none !important;
    flex-wrap: wrap !important;
    align-items: center !important;
    justify-content: center !important;
    text-align: center !important;
    webkit-user-select: none !important;
    user-select: none !important;
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content) !important;
      }
    }
    --tab-p: 1rem !important;
    --tab-bg: var(--color-base-100) !important;
    --tab-border-color: var(--color-base-300) !important;
    --tab-radius-ss: 0 !important;
    --tab-radius-se: 0 !important;
    --tab-radius-es: 0 !important;
    --tab-radius-ee: 0 !important;
    --tab-order: 0 !important;
    --tab-radius-min: calc(0.75rem - var(--border)) !important;
    border-color: #0000 !important;
    order: var(--tab-order) !important;
    height: var(--tab-height) !important;
    font-size: 0.875rem !important;
    padding-inline-start: var(--tab-p) !important;
    padding-inline-end: var(--tab-p) !important;
    &:is(input[type="radio"]) {
      min-width: fit-content !important;
      &:after {
        content: attr(aria-label) !important;
      }
    }
    &:is(label) {
      position: relative !important;
      input {
        position: absolute !important;
        inset: calc(0.25rem * 0) !important;
        cursor: pointer !important;
        appearance: none !important;
        opacity: 0% !important;
      }
    }
    &:checked, &:is(label:has(:checked)), &:is(.tab-active, [aria-selected="true"]) {
      & + .tab-content {
        display: block !important;
        height: calc(100% - var(--tab-height) + var(--border)) !important;
      }
    }
    &:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
      color: var(--color-base-content) !important;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent) !important;
      }
    }
    &:not(input):empty {
      flex-grow: 1 !important;
      cursor: default !important;
    }
    &:focus {
      --tw-outline-style: none !important;
      outline-style: none !important;
      @media (forced-colors: active) {
        outline: 2px solid transparent !important;
        outline-offset: 2px !important;
      }
    }
    &:focus-visible, &:is(label:has(:checked:focus-visible)) {
      outline: 2px solid currentColor !important;
      outline-offset: -5px !important;
    }
    &[disabled] {
      pointer-events: none !important;
      opacity: 40% !important;
    }
  }
  .menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
    :where(li ul) {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      white-space: nowrap;
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 3);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
      display: none;
    }
    :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      text-align: start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      user-select: none;
    }
    :where(li > details > summary) {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    :where(li > details > summary), :where(li > .menu-dropdown-toggle) {
      &:after {
        justify-self: flex-end;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        rotate: -135deg;
        translate: 0 -1px;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        content: "";
        transform-origin: 50% 50%;
        box-shadow: 2px 2px inset;
        pointer-events: none;
      }
    }
    :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
      rotate: 45deg;
      translate: 0 1px;
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {
      &.menu-focus, &:focus-visible {
        cursor: pointer;
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
      cursor: pointer;
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
    }
    :where(li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .badge {
        justify-self: flex-end;
      }
      & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--menu-active-fg);
        background-color: var(--menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        &:not(&:active) {
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
        }
      }
      &.menu-disabled {
        pointer-events: none;
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    .dropdown:focus-within {
      .menu-dropdown-toggle:after {
        rotate: 45deg;
        translate: 0 1px;
      }
    }
    .dropdown-content {
      margin-top: calc(0.25rem * 2);
      padding: calc(0.25rem * 2);
      &:before {
        display: none;
      }
    }
  }
  .floating-label {
    position: relative;
    display: block;
    input {
      display: block;
      &::placeholder {
        transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
      }
    }
    textarea {
      &::placeholder {
        transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
      }
    }
    > span {
      position: absolute;
      inset-inline-start: calc(0.25rem * 3);
      z-index: 1;
      background-color: var(--color-base-100);
      padding-inline: calc(0.25rem * 1);
      opacity: 0%;
      font-size: 0.875rem;
      top: calc(var(--size-field, 0.25rem) * 10 / 2);
      line-height: 1;
      border-radius: 2px;
      pointer-events: none;
      translate: 0 -50%;
      transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
    }
    &:focus-within, &:not(:has(input:placeholder-shown, textarea:placeholder-shown)) {
      ::placeholder {
        opacity: 0%;
        top: 0;
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
        pointer-events: auto;
      }
      > span {
        opacity: 100%;
        top: 0;
        translate: -12.5% calc(-50% - 0.125em);
        scale: 0.75;
        pointer-events: auto;
        z-index: 2;
      }
    }
    &:has(:disabled, [disabled]) {
      > span {
        opacity: 0%;
      }
    }
    &:has(.input-xs, .select-xs, .textarea-xs) span {
      font-size: 0.6875rem;
      top: calc(var(--size-field, 0.25rem) * 6 / 2);
    }
    &:has(.input-sm, .select-sm, .textarea-sm) span {
      font-size: 0.75rem;
      top: calc(var(--size-field, 0.25rem) * 8 / 2);
    }
    &:has(.input-md, .select-md, .textarea-md) span {
      font-size: 0.875rem;
      top: calc(var(--size-field, 0.25rem) * 10 / 2);
    }
    &:has(.input-lg, .select-lg, .textarea-lg) span {
      font-size: 1.125rem;
      top: calc(var(--size-field, 0.25rem) * 12 / 2);
    }
    &:has(.input-xl, .select-xl, .textarea-xl) span {
      font-size: 1.375rem;
      top: calc(var(--size-field, 0.25rem) * 14 / 2);
    }
  }
  .collapse-arrow {
    > .collapse-title:after {
      position: absolute;
      display: block;
      height: 0.5rem;
      width: 0.5rem;
      transform: translateY(-100%) rotate(45deg);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 0.2s;
      top: 1.9rem;
      inset-inline-end: 1.4rem;
      content: "";
      transform-origin: 75% 75%;
      box-shadow: 2px 2px;
      pointer-events: none;
    }
  }
  .collapse-plus {
    > .collapse-title:after {
      position: absolute;
      display: block;
      height: 0.5rem;
      width: 0.5rem;
      transition-property: all;
      transition-duration: 300ms;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      top: 0.9rem;
      inset-inline-end: 1.4rem;
      content: "+";
      pointer-events: none;
    }
  }
  .dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
    & > *:not(summary):focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    .dropdown-content {
      position: absolute;
    }
    &:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) {
      .dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
    &[popover], .dropdown-content {
      z-index: 999;
      animation: dropdown 0.2s;
      transition-property: opacity, scale, display;
      transition-behavior: allow-discrete;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    @starting-style {
      &[popover], .dropdown-content {
        scale: 95%;
        opacity: 0;
      }
    }
    &.dropdown-open, &:not(.dropdown-hover):focus, &:focus-within {
      > [tabindex]:first-child {
        pointer-events: none;
      }
      .dropdown-content {
        opacity: 100%;
      }
    }
    &.dropdown-hover:hover {
      .dropdown-content {
        opacity: 100%;
        scale: 100%;
      }
    }
    &:is(details) {
      summary {
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &.dropdown-open, &:focus, &:focus-within {
      .dropdown-content {
        scale: 100%;
      }
    }
    &:where([popover]) {
      background: #0000;
    }
    &[popover] {
      position: fixed;
      color: inherit;
      @supports not (position-area: bottom) {
        margin: auto;
        &.dropdown-open:not(:popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
        &::backdrop {
          background-color: color-mix(in oklab, #000 30%, #0000);
        }
      }
      &:not(.dropdown-open, :popover-open) {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
  }
  .btn {
    :where(&) {
      width: unset;
    }
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    }
    --btn-shadow: 0 3px 2px -2px var(--btn-bg),
    0 4px 3px -2px var(--btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    }
    --btn-noise: var(--fx-noise);
    .prose & {
      text-decoration-line: none;
    }
    @media (hover: hover) {
      &:hover {
        --btn-bg: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
      }
    }
    &:focus-visible {
      outline-width: 2px;
      outline-style: solid;
      isolation: isolate;
    }
    &:active:not(.btn-active) {
      translate: 0 0.5px;
      --btn-bg: var(--btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
      }
      --btn-border: var(--btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
      }
      --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    &:is(:disabled, [disabled], .btn-disabled) {
      &:not(.btn-link, .btn-ghost) {
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        box-shadow: none;
      }
      pointer-events: none;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: var(--color-neutral);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          }
          --btn-border: #0000;
          --btn-fg: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
    }
    &:where(input:checked:not(.filter .btn)) {
      --btn-color: var(--color-primary);
      --btn-fg: var(--color-primary-content);
      isolation: isolate;
    }
  }
  .loading {
    pointer-events: none;
    display: inline-block;
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    vertical-align: middle;
    width: calc(var(--size-selector, 0.25rem) * 6);
    mask-size: 100%;
    mask-repeat: no-repeat;
    mask-position: center;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  }
  .pointer-events-auto {
    pointer-events: auto;
  }
  .collapse {
    &:not(td, tr, colgroup) {
      visibility: visible;
    }
    position: relative;
    display: grid;
    overflow: hidden;
    border-radius: var(--radius-box, 1rem);
    width: 100%;
    grid-template-rows: max-content 0fr;
    transition: grid-template-rows 0.2s;
    isolation: isolate;
    > input:is([type="checkbox"], [type="radio"]) {
      grid-column-start: 1;
      grid-row-start: 1;
      appearance: none;
      opacity: 0;
      z-index: 1;
      width: 100%;
      padding: 1rem;
      padding-inline-end: 3rem;
      min-height: 1lh;
      transition: background-color 0.2s ease-out;
    }
    &:is([open], :focus:not(.collapse-close)), &:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
      grid-template-rows: max-content 1fr;
    }
    &:is([open], :focus:not(.collapse-close)) > .collapse-content, &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
      visibility: visible;
      min-height: fit-content;
    }
    &:focus-visible, &:has(> input:is([type="checkbox"], [type="radio"]):focus-visible) {
      outline-color: var(--color-base-content);
      outline-style: solid;
      outline-width: 2px;
      outline-offset: 2px;
    }
    &:not(.collapse-close) {
      > input[type="checkbox"], > input[type="radio"]:not(:checked), > .collapse-title {
        cursor: pointer;
      }
    }
    &:focus:not(.collapse-close, .collapse[open]) > .collapse-title {
      cursor: unset;
    }
    &:is([open], :focus:not(.collapse-close)) > :where(.collapse-content), &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
      padding-bottom: 1rem;
      transition: padding 0.2s ease-out, background-color 0.2s ease-out;
    }
    &:is([open]) {
      &.collapse-arrow {
        > .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
    }
    &.collapse-open {
      &.collapse-arrow {
        > .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &.collapse-plus {
        > .collapse-title:after {
          content: "−";
        }
      }
    }
    &.collapse-arrow:focus:not(.collapse-close) {
      > .collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &.collapse-arrow:not(.collapse-close) {
      > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &[open] {
      &.collapse-plus {
        > .collapse-title:after {
          content: "−";
        }
      }
    }
    &.collapse-plus:focus:not(.collapse-close) {
      > .collapse-title:after {
        content: "−";
      }
    }
    &.collapse-plus:not(.collapse-close) {
      > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
        content: "−";
      }
    }
    &:is(details) {
      width: 100%;
      & summary {
        position: relative;
        display: block;
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &:is(details) summary {
      outline: none;
    }
  }
  .collapse-content {
    grid-column-start: 1;
    grid-row-start: 1;
    visibility: hidden;
    grid-column-start: 1;
    grid-row-start: 2;
    min-height: 0;
    padding-left: 1rem;
    padding-right: 1rem;
    cursor: unset;
    transition: visibility 0.2s, padding 0.2s ease-out, background-color 0.2s ease-out;
  }
  .collapse {
    visibility: collapse;
  }
  .visible {
    visibility: visible;
  }
  .tabs-lift {
    --tabs-height: auto;
    --tabs-direction: row;
    > .tab {
      --tab-border: 0 0 var(--border) 0;
      --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
      --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
      --tab-radius-es: 0;
      --tab-radius-ee: 0;
      --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
      --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
      --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
      --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
      --tab-corner-position: top left, top right;
      border-width: var(--tab-border);
      border-start-start-radius: var(--tab-radius-ss);
      border-start-end-radius: var(--tab-radius-se);
      border-end-start-radius: var(--tab-radius-es);
      border-end-end-radius: var(--tab-radius-ee);
      padding: var(--tab-paddings);
      border-color: var(--tab-border-colors);
      &:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), &:is(input:checked, label:has(:checked)) {
        --tab-border: var(--border) var(--border) 0 var(--border);
        --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
        var(--tab-border-color);
        --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
        calc(var(--tab-p) - var(--border));
        --tab-inset: auto auto 0 auto;
        --tab-grad: calc(69% - var(--border));
        --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
        --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
        background-color: var(--tab-bg);
        &:before {
          z-index: 1;
          content: "";
          display: block;
          position: absolute;
          width: var(--tab-corner-width);
          height: var(--tab-corner-height);
          background-position: var(--tab-corner-position);
          background-image: var(--radius-start), var(--radius-end);
          background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
          background-repeat: no-repeat;
          inset: var(--tab-inset);
        }
        &:first-child:before {
          --radius-start: none;
        }
        [dir="rtl"] &:first-child:before {
          transform: rotateY(180deg);
        }
        &:last-child:before {
          --radius-end: none;
        }
        [dir="rtl"] &:last-child:before {
          transform: rotateY(180deg);
        }
      }
    }
    &:has(.tab-content) {
      > .tab:first-child {
        &:not(.tab-active, [aria-selected="true"]) {
          --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
        }
      }
    }
    .tab-content {
      --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
      --tabcontent-radius-ss: 0;
      --tabcontent-radius-se: var(--radius-box);
      --tabcontent-radius-es: var(--radius-box);
      --tabcontent-radius-ee: var(--radius-box);
    }
    :checked, label:has(:checked), :is(.tab-active, [aria-selected="true"]) {
      & + .tab-content {
        &:nth-child(1), &:nth-child(n + 3) {
          --tabcontent-radius-ss: var(--radius-box);
        }
      }
    }
  }
  .list {
    display: flex;
    flex-direction: column;
    font-size: 0.875rem;
    :where(.list-row) {
      --list-grid-cols: minmax(0, auto) 1fr;
      position: relative;
      display: grid;
      grid-auto-flow: column;
      gap: calc(0.25rem * 4);
      border-radius: var(--radius-box);
      padding: calc(0.25rem * 4);
      word-break: break-word;
      grid-template-columns: var(--list-grid-cols);
      &:has(.list-col-grow:nth-child(1)) {
        --list-grid-cols: 1fr;
      }
      &:has(.list-col-grow:nth-child(2)) {
        --list-grid-cols: minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(3)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(4)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(5)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
      }
      &:has(.list-col-grow:nth-child(6)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
      }
      :not(.list-col-wrap) {
        grid-row-start: 1;
      }
    }
    & > :not(:last-child) {
      &.list-row, .list-row {
        &:after {
          content: "";
          border-bottom: var(--border) solid;
          inset-inline: var(--radius-box);
          position: absolute;
          bottom: calc(0.25rem * 0);
          border-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
          }
        }
      }
    }
  }
  .toast {
    position: fixed;
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 4);
    top: auto;
    bottom: calc(0.25rem * 4);
    display: flex;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    background-color: transparent;
    translate: var(--toast-x, 0) var(--toast-y, 0);
    width: max-content;
    max-width: calc(100vw - 2rem);
    & > * {
      animation: toast 0.25s ease-out;
    }
    &:where(.toast-start) {
      inset-inline-start: calc(0.25rem * 4);
      inset-inline-end: auto;
      --toast-x: 0;
    }
    &:where(.toast-center) {
      inset-inline-start: calc(1/2 * 100%);
      inset-inline-end: calc(1/2 * 100%);
      --toast-x: -50%;
    }
    &:where(.toast-end) {
      inset-inline-start: auto;
      inset-inline-end: calc(0.25rem * 4);
      --toast-x: 0;
    }
    &:where(.toast-bottom) {
      top: auto;
      bottom: calc(0.25rem * 4);
      --toast-y: 0;
    }
    &:where(.toast-middle) {
      top: calc(1/2 * 100%);
      bottom: auto;
      --toast-y: -50%;
    }
    &:where(.toast-top) {
      top: calc(0.25rem * 4);
      bottom: auto;
      --toast-y: 0;
    }
  }
  .toggle {
    border: var(--border) solid currentColor;
    color: var(--input-color);
    position: relative;
    display: inline-grid;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    grid-template-columns: 0fr 1fr 1fr;
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
    padding: var(--toggle-p);
    box-shadow: 0 1px currentColor inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    }
    transition: color 0.3s, grid-template-columns 0.2s;
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
    }
    --toggle-p: calc(var(--size) * 0.125);
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
    height: var(--size);
    > * {
      z-index: 1;
      grid-column: span 1 / span 1;
      grid-column-start: 2;
      grid-row-start: 1;
      height: 100%;
      cursor: pointer;
      appearance: none;
      background-color: transparent;
      padding: calc(0.25rem * 0.5);
      transition: opacity 0.2s, rotate 0.4s;
      border: none;
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:nth-child(2) {
        color: var(--color-base-100);
        rotate: 0deg;
      }
      &:nth-child(3) {
        color: var(--color-base-100);
        opacity: 0%;
        rotate: -15deg;
      }
    }
    &:has(:checked) {
      > :nth-child(2) {
        opacity: 0%;
        rotate: 15deg;
      }
      > :nth-child(3) {
        opacity: 100%;
        rotate: 0deg;
      }
    }
    &:before {
      position: relative;
      inset-inline-start: calc(0.25rem * 0);
      grid-column-start: 2;
      grid-row-start: 1;
      aspect-ratio: 1 / 1;
      height: 100%;
      border-radius: var(--radius-selector);
      background-color: currentColor;
      translate: 0;
      --tw-content: "";
      content: var(--tw-content);
      transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
      }
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    @media (forced-colors: active) {
      &:before {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
        outline-offset: calc(1px * -1);
      }
    }
    @media print {
      &:before {
        outline: 0.25rem solid;
        outline-offset: -1rem;
      }
    }
    &:focus-visible, &:has(:focus-visible) {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"], &:has(> input:checked) {
      grid-template-columns: 1fr 1fr 0fr;
      background-color: var(--color-base-100);
      --input-color: var(--color-base-content);
      &:before {
        background-color: currentColor;
      }
      @starting-style {
        &:before {
          opacity: 0;
        }
      }
    }
    &:indeterminate {
      grid-template-columns: 0.5fr 1fr 0.5fr;
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
      &:before {
        background-color: transparent;
        border: var(--border) solid currentColor;
      }
    }
  }
  .input {
    cursor: text;
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    &:where(input) {
      display: inline-flex;
    }
    :where(input) {
      display: inline-flex;
      height: 100%;
      width: 100%;
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where(input[type="url"]), :where(input[type="email"]) {
      direction: ltr;
    }
    :where(input[type="date"]) {
      display: inline-block;
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      }
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
      z-index: 1;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
    }
    &:has(> input[disabled]) > input[disabled] {
      cursor: not-allowed;
    }
    &::-webkit-date-and-time-value {
      text-align: inherit;
    }
    &[type="number"] {
      &::-webkit-inner-spin-button {
        margin-block: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -3);
      }
    }
    &::-webkit-calendar-picker-indicator {
      position: absolute;
      inset-inline-end: 0.75em;
    }
  }
  .indicator {
    position: relative;
    display: inline-flex;
    width: max-content;
    :where(.indicator-item) {
      z-index: 1;
      position: absolute;
      white-space: nowrap;
      top: var(--indicator-t, 0);
      bottom: var(--indicator-b, auto);
      left: var(--indicator-s, auto);
      right: var(--indicator-e, 0);
      translate: var(--indicator-x, 50%) var(--indicator-y, -50%);
    }
  }
  .table {
    font-size: 0.875rem;
    position: relative;
    width: 100%;
    border-radius: var(--radius-box);
    text-align: left;
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right;
    }
    tr.row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200);
          }
        }
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 3);
      vertical-align: middle;
    }
    :where(thead, tfoot) {
      white-space: nowrap;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
      font-size: 0.875rem;
      font-weight: 600;
    }
    :where(tfoot) {
      border-top: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
      }
    }
    :where(.table-pin-rows thead tr) {
      position: sticky;
      top: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-rows tfoot tr) {
      position: sticky;
      bottom: calc(0.25rem * 0);
      z-index: 1;
      background-color: var(--color-base-100);
    }
    :where(.table-pin-cols tr th) {
      position: sticky;
      right: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      background-color: var(--color-base-100);
    }
    :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
      }
    }
  }
  .table\! {
    font-size: 0.875rem !important;
    position: relative !important;
    width: 100% !important;
    border-radius: var(--radius-box) !important;
    text-align: left !important;
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      text-align: right !important;
    }
    tr.row-hover {
      &, &:nth-child(even) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-base-200) !important;
          }
        }
      }
    }
    :where(th, td) {
      padding-inline: calc(0.25rem * 4) !important;
      padding-block: calc(0.25rem * 3) !important;
      vertical-align: middle !important;
    }
    :where(thead, tfoot) {
      white-space: nowrap !important;
      color: var(--color-base-content) !important;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent) !important;
      }
      font-size: 0.875rem !important;
      font-weight: 600 !important;
    }
    :where(tfoot) {
      border-top: var(--border) solid var(--color-base-content) !important;
      @supports (color: color-mix(in lab, red, red)) {
        border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000) !important;
      }
    }
    :where(.table-pin-rows thead tr) {
      position: sticky !important;
      top: calc(0.25rem * 0) !important;
      z-index: 1 !important;
      background-color: var(--color-base-100) !important;
    }
    :where(.table-pin-rows tfoot tr) {
      position: sticky !important;
      bottom: calc(0.25rem * 0) !important;
      z-index: 1 !important;
      background-color: var(--color-base-100) !important;
    }
    :where(.table-pin-cols tr th) {
      position: sticky !important;
      right: calc(0.25rem * 0) !important;
      left: calc(0.25rem * 0) !important;
      background-color: var(--color-base-100) !important;
    }
    :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid var(--color-base-content) !important;
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000) !important;
      }
    }
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: 0.25rem;
    --range-bg: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      --range-bg: color-mix(in oklab, currentColor 10%, #0000);
    }
    cursor: pointer;
    overflow: hidden;
    background-color: transparent;
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
    border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
    border: none;
    height: var(--range-thumb-size);
    [dir="rtl"] & {
      --range-dir: -1;
    }
    &:focus {
      outline: none;
    }
    &:focus-visible {
      outline: 2px solid;
      outline-offset: 2px;
    }
    &::-webkit-slider-runnable-track {
      width: 100%;
      background-color: var(--range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--range-thumb-size) * 0.5);
    }
    @media (forced-colors: active) {
      &::-webkit-slider-runnable-track {
        border: 1px solid;
      }
    }
    @media (forced-colors: active) {
      &::-moz-range-track {
        border: 1px solid;
      }
    }
    &::-webkit-slider-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      border: var(--range-p) solid;
      appearance: none;
      webkit-appearance: none;
      top: 50%;
      color: var(--range-progress);
      transform: translateY(-50%);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
      }
    }
    &::-moz-range-track {
      width: 100%;
      background-color: var(--range-bg);
      border-radius: var(--radius-selector);
      height: calc(var(--range-thumb-size) * 0.5);
    }
    &::-moz-range-thumb {
      position: relative;
      box-sizing: border-box;
      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
      background-color: currentColor;
      height: var(--range-thumb-size);
      width: var(--range-thumb-size);
      border: var(--range-p) solid;
      top: 50%;
      color: var(--range-progress);
      box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 30%;
    }
  }
  .select {
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    background-color: var(--color-base-100);
    padding-inline-start: calc(0.25rem * 4);
    padding-inline-end: calc(0.25rem * 7);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    touch-action: manipulation;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-size: 4px 4px, 4px 4px;
    background-repeat: no-repeat;
    text-overflow: ellipsis;
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    --size: calc(var(--size-field, 0.25rem) * 10);
    [dir="rtl"] & {
      background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
    }
    select {
      margin-inline-start: calc(0.25rem * -4);
      margin-inline-end: calc(0.25rem * -7);
      width: calc(100% + 2.75rem);
      appearance: none;
      padding-inline-start: calc(0.25rem * 4);
      padding-inline-end: calc(0.25rem * 7);
      height: calc(100% - 2px);
      background: inherit;
      border-radius: inherit;
      border-style: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * -5.5);
        background-image: none;
      }
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      }
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
      z-index: 1;
    }
    &:has(> select[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    &:has(> select[disabled]) > select[disabled] {
      cursor: not-allowed;
    }
  }
  .card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline-color: currentColor;
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.card-border) {
      border: var(--border) solid var(--color-base-200);
    }
    &:where(.card-dash) {
      border: var(--border) dashed var(--color-base-200);
    }
    &.image-full {
      display: grid;
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        object-fit: cover;
        filter: brightness(28%);
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
  }
  .swap {
    position: relative;
    display: inline-grid;
    cursor: pointer;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    input {
      appearance: none;
      border: none;
    }
    > * {
      grid-column-start: 1;
      grid-row-start: 1;
      transition-property: transform, rotate, opacity;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
    .swap-on, .swap-indeterminate, input:indeterminate ~ .swap-on {
      opacity: 0%;
    }
    input:is(:checked, :indeterminate) {
      & ~ .swap-off {
        opacity: 0%;
      }
    }
    input:checked ~ .swap-on, input:indeterminate ~ .swap-indeterminate {
      opacity: 100%;
      backface-visibility: visible;
    }
  }
  .collapse-title {
    grid-column-start: 1;
    grid-row-start: 1;
    position: relative;
    width: 100%;
    padding: 1rem;
    padding-inline-end: 3rem;
    min-height: 1lh;
    transition: background-color 0.2s ease-out;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .menu-horizontal {
    display: inline-flex;
    flex-direction: row;
    & > li:not(.menu-title) > details > ul {
      position: absolute;
      margin-inline-start: calc(0.25rem * 0);
      margin-top: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2);
      padding-inline-end: calc(0.25rem * 2);
    }
    & > li > details > ul {
      &:before {
        content: none;
      }
    }
    :where(& > li:not(.menu-title) > details > ul) {
      border-radius: var(--radius-box);
      background-color: var(--color-base-100);
      box-shadow: 0 1px 3px 0 oklch(0% 0 0/0.1), 0 1px 2px -1px oklch(0% 0 0/0.1);
    }
  }
  .menu-vertical {
    display: inline-flex;
    flex-direction: column;
    & > li:not(.menu-title) > details > ul {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      margin-top: calc(0.25rem * 0);
      padding-block: calc(0.25rem * 0);
      padding-inline-end: calc(0.25rem * 0);
    }
  }
  .checkbox {
    border: var(--border) solid var(--input-color, var(--color-base-content));
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    }
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
    transition: background-color 0.2s, box-shadow 0.2s;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    &:before {
      --tw-content: "";
      content: var(--tw-content);
      display: block;
      width: 100%;
      height: 100%;
      rotate: 45deg;
      background-color: currentColor;
      opacity: 0%;
      transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
      transition-delay: 0.1s;
      clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
      box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      font-size: 1rem;
      line-height: 0.75;
    }
    &:focus-visible {
      outline: 2px solid var(--input-color, currentColor);
      outline-offset: 2px;
    }
    &:checked, &[aria-checked="true"] {
      background-color: var(--input-color, #0000);
      box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      &:before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 100%;
      }
      @media (forced-colors: active) {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
      @media print {
        &:before {
          rotate: 0deg;
          background-color: transparent;
          --tw-content: "✔︎";
          clip-path: none;
        }
      }
    }
    &:indeterminate {
      &:before {
        rotate: 0deg;
        opacity: 100%;
        translate: 0 -35%;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .radio {
    position: relative;
    display: inline-block;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--input-color, currentColor);
    @supports (color: color-mix(in lab, red, red)) {
      border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
    }
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, currentColor);
    &:before {
      display: block;
      width: 100%;
      height: 100%;
      border-radius: calc(infinity * 1px);
      --tw-content: "";
      content: var(--tw-content);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
    }
    &:focus-visible {
      outline: 2px solid currentColor;
    }
    &:checked, &[aria-checked="true"] {
      animation: radio 0.2s ease-out;
      border-color: currentColor;
      background-color: var(--color-base-100);
      &:before {
        background-color: currentColor;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
      }
      @media (forced-colors: active) {
        &:before {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
      @media print {
        &:before {
          outline: 0.25rem solid;
          outline-offset: -1rem;
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      opacity: 20%;
    }
  }
  .progress {
    position: relative;
    height: calc(0.25rem * 2);
    width: 100%;
    appearance: none;
    overflow: hidden;
    border-radius: var(--radius-box);
    background-color: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, currentColor 20%, transparent);
    }
    color: var(--color-base-content);
    &:indeterminate {
      background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
      background-size: 200%;
      background-position-x: 15%;
      animation: progress 5s ease-in-out infinite;
      @supports (-moz-appearance: none) {
        &::-moz-progress-bar {
          background-color: transparent;
          background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
          background-size: 200%;
          background-position-x: 15%;
          animation: progress 5s ease-in-out infinite;
        }
      }
    }
    @supports (-moz-appearance: none) {
      &::-moz-progress-bar {
        border-radius: var(--radius-box);
        background-color: currentColor;
      }
    }
    @supports (-webkit-appearance: none) {
      &::-webkit-progress-bar {
        border-radius: var(--radius-box);
        background-color: transparent;
      }
      &::-webkit-progress-value {
        border-radius: var(--radius-box);
        background-color: currentColor;
      }
    }
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .tooltip-left {
    > .tooltip-content, &[data-tip]:before {
      transform: translateX(calc(var(--tt-pos, 0.25rem) - 0.25rem)) translateY(-50%);
      inset: 50% var(--tt-off) auto auto;
    }
    &:after {
      transform: translateX(var(--tt-pos, 0.25rem)) translateY(-50%) rotate(-90deg);
      inset: 50% calc(var(--tt-tail) + 1px) auto auto;
    }
  }
  .tooltip-right {
    > .tooltip-content, &[data-tip]:before {
      transform: translateX(calc(var(--tt-pos, -0.25rem) + 0.25rem)) translateY(-50%);
      inset: 50% auto auto var(--tt-off);
    }
    &:after {
      transform: translateX(var(--tt-pos, -0.25rem)) translateY(-50%) rotate(90deg);
      inset: 50% auto auto calc(var(--tt-tail) + 1px);
    }
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .end-0 {
    inset-inline-end: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-\[0px\] {
    top: 0px;
  }
  .top-\[35px\] {
    top: 35px;
  }
  .top-\[66px\] {
    top: 66px;
  }
  .top-\[100px\] {
    top: 100px;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-\[0px\] {
    right: 0px;
  }
  .right-\[5px\] {
    right: 5px;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-\[0px\] {
    left: 0px;
  }
  .left-\[55\%\] {
    left: 55%;
  }
  .file-input {
    cursor: pointer;
    cursor: pointer;
    border: var(--border) solid #0000;
    display: inline-flex;
    appearance: none;
    align-items: center;
    background-color: var(--color-base-100);
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    line-height: 2;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    &::file-selector-button {
      margin-inline-end: calc(0.25rem * 4);
      cursor: pointer;
      padding-inline: calc(0.25rem * 4);
      webkit-user-select: none;
      user-select: none;
      height: calc(100% + var(--border) * 2);
      margin-block: calc(var(--border) * -1);
      margin-inline-start: calc(var(--border) * -1);
      font-size: 0.875rem;
      color: var(--btn-fg);
      border-width: var(--border);
      border-style: solid;
      border-color: var(--btn-border);
      border-start-start-radius: calc(var(--join-ss, var(--radius-field) - var(--border)));
      border-end-start-radius: calc(var(--join-es, var(--radius-field) - var(--border)));
      font-weight: 600;
      background-color: var(--btn-bg);
      background-size: calc(var(--noise) * 100%);
      background-image: var(--btn-noise);
      text-shadow: 0 0.5px oklch(1 0 0 / calc(var(--depth) * 0.15));
      box-shadow: 0 0.5px 0 0.5px white inset, var(--btn-shadow);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 0.5px 0 0.5px color-mix( in oklab, color-mix(in oklab, white 30%, var(--btn-bg)) calc(var(--depth) * 20%), #0000 ) inset, var(--btn-shadow);
      }
      --size: calc(var(--size-field, 0.25rem) * 10);
      --btn-bg: var(--btn-color, var(--color-base-200));
      --btn-fg: var(--color-base-content);
      --btn-border: var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--btn-bg), #000 5%);
      }
      --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000);
      }
      --btn-noise: var(--fx-noise);
    }
    &:focus {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) 10%, #0000);
      }
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> input[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      &::file-selector-button {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
      }
    }
  }
  .textarea {
    border: var(--border) solid #0000;
    min-height: calc(0.25rem * 20);
    flex-shrink: 1;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    padding-block: calc(0.25rem * 2);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    padding-inline-start: 0.75rem;
    padding-inline-end: 0.75rem;
    font-size: 0.875rem;
    touch-action: manipulation;
    border-color: var(--input-color);
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    }
    --input-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    }
    textarea {
      appearance: none;
      background-color: transparent;
      border: none;
      &:focus, &:focus-within {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    &:focus, &:focus-within {
      --input-color: var(--color-base-content);
      box-shadow: 0 1px var(--input-color);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
      }
      outline: 2px solid var(--input-color);
      outline-offset: 2px;
      isolation: isolate;
    }
    &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
      cursor: not-allowed;
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      &::placeholder {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
      box-shadow: none;
    }
    &:has(> textarea[disabled]) > textarea[disabled] {
      cursor: not-allowed;
    }
  }
  .isolate {
    isolation: isolate;
  }
  .stack {
    display: inline-grid;
    grid-template-columns: 3px 4px 1fr 4px 3px;
    grid-template-rows: 3px 4px 1fr 4px 3px;
    & > * {
      height: 100%;
      width: 100%;
      &:nth-child(n + 2) {
        width: 100%;
        opacity: 70%;
      }
      &:nth-child(2) {
        z-index: 2;
        opacity: 90%;
      }
      &:nth-child(1) {
        z-index: 3;
        width: 100%;
      }
    }
    &, &.stack-bottom {
      > * {
        grid-column: 3 / 4;
        grid-row: 3 / 6;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 6;
          grid-row: 1 / 4;
        }
      }
    }
    &.stack-top {
      > * {
        grid-column: 3 / 4;
        grid-row: 1 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 6;
          grid-row: 3 / 6;
        }
      }
    }
    &.stack-start {
      > * {
        grid-column: 1 / 4;
        grid-row: 3 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 3 / 6;
          grid-row: 1 / 6;
        }
      }
    }
    &.stack-end {
      > * {
        grid-column: 3 / 6;
        grid-row: 3 / 4;
        &:nth-child(2) {
          grid-column: 2 / 5;
          grid-row: 2 / 5;
        }
        &:nth-child(1) {
          grid-column: 1 / 4;
          grid-row: 1 / 6;
        }
      }
    }
  }
  .modal-backdrop {
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    align-self: stretch;
    justify-self: stretch;
    color: transparent;
    z-index: -1;
    button {
      cursor: pointer;
    }
  }
  .-z-0 {
    z-index: calc(0 * -1);
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .z-100 {
    z-index: 100;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[9\] {
    z-index: 9;
  }
  .z-\[10\] {
    z-index: 10;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .modal-box {
    grid-column-start: 1;
    grid-row-start: 1;
    max-height: 100vh;
    width: calc(11/12 * 100%);
    max-width: 32rem;
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 6);
    transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
    border-top-left-radius: var(--modal-tl, var(--radius-box));
    border-top-right-radius: var(--modal-tr, var(--radius-box));
    border-bottom-left-radius: var(--modal-bl, var(--radius-box));
    border-bottom-right-radius: var(--modal-br, var(--radius-box));
    scale: 95%;
    opacity: 0;
    box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain;
  }
  .drawer-content {
    grid-column-start: 2;
    grid-row-start: 1;
    min-width: calc(0.25rem * 0);
  }
  .container {
    width: 100%;
    @media (width >= 475px) {
      max-width: 475px;
    }
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .divider {
    display: flex;
    height: calc(0.25rem * 4);
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    white-space: nowrap;
    margin: var(--divider-m, 1rem 0);
    --divider-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      --divider-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
    &:before, &:after {
      content: "";
      height: calc(0.25rem * 0.5);
      width: 100%;
      flex-grow: 1;
      background-color: var(--divider-color);
    }
    @media print {
      &:before, &:after {
        border: 0.5px solid;
      }
    }
    &:not(:empty) {
      gap: calc(0.25rem * 4);
    }
  }
  .\!m-0 {
    margin: calc(var(--spacing) * 0) !important;
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-auto {
    margin: auto;
  }
  .filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.filter-reset))) {
      .filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.filter-reset)) {
      input:not(:checked, .filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-5 {
    margin-inline: calc(var(--spacing) * 5);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .label {
    display: inline-flex;
    align-items: center;
    gap: calc(0.25rem * 1.5);
    white-space: nowrap;
    color: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, currentColor 60%, transparent);
    }
    &:has(input) {
      cursor: pointer;
    }
    &:is(.input > *, .select > *) {
      display: flex;
      height: calc(100% - 0.5rem);
      align-items: center;
      padding-inline: calc(0.25rem * 3);
      white-space: nowrap;
      font-size: inherit;
      &:first-child {
        margin-inline-start: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * 3);
        border-inline-end: var(--border) solid currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
      }
      &:last-child {
        margin-inline-start: calc(0.25rem * 3);
        margin-inline-end: calc(0.25rem * -3);
        border-inline-start: var(--border) solid currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
      }
    }
  }
  .join-vertical {
    flex-direction: column;
    > .join-item:first-child {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      .join-item {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: 0;
      }
    }
    > .join-item:last-child {
      --join-ss: 0;
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      .join-item {
        --join-ss: 0;
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:only-child {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :only-child {
      .join-item {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    .join-item {
      &:where(*:not(:first-child)) {
        margin-inline-start: 0;
        margin-block-start: calc(var(--border, 1px) * -1);
      }
    }
  }
  .join-item {
    &:where(*:not(:first-child, :disabled, [disabled], .btn-disabled)) {
      margin-inline-start: calc(var(--border, 1px) * -1);
      margin-block-start: 0;
    }
    &:where(*:is(:disabled, [disabled], .btn-disabled)) {
      border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
    }
  }
  .\!ms-2 {
    margin-inline-start: calc(var(--spacing) * 2) !important;
  }
  .me-\[8px\] {
    margin-inline-end: 8px;
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-lead);
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline;
      font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 900;
      color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 800;
      color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: block;
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-family: inherit;
      color: var(--tw-prose-kbd);
      box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-weight: 600;
      font-size: 0.875em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% 0.034 264.665);
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .modal-action {
    margin-top: calc(0.25rem * 6);
    display: flex;
    justify-content: flex-end;
    gap: calc(0.25rem * 2);
  }
  .-mt-2 {
    margin-top: calc(var(--spacing) * -2);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-\[0px\] {
    margin-top: 0px;
  }
  .mt-\[8px\] {
    margin-top: 8px;
  }
  .mt-\[35px\] {
    margin-top: 35px;
  }
  .mt-\[50px\] {
    margin-top: 50px;
  }
  .mt-auto {
    margin-top: auto;
  }
  .breadcrumbs {
    max-width: 100%;
    overflow-x: auto;
    padding-block: calc(0.25rem * 2);
    > menu, > ul, > ol {
      display: flex;
      min-height: min-content;
      align-items: center;
      white-space: nowrap;
      > li {
        display: flex;
        align-items: center;
        > * {
          display: flex;
          cursor: pointer;
          align-items: center;
          gap: calc(0.25rem * 2);
          &:hover {
            @media (hover: hover) {
              text-decoration-line: underline;
            }
          }
          &:focus {
            --tw-outline-style: none;
            outline-style: none;
            @media (forced-colors: active) {
              outline: 2px solid transparent;
              outline-offset: 2px;
            }
          }
          &:focus-visible {
            outline: 2px solid currentColor;
            outline-offset: 2px;
          }
        }
        & + *:before {
          content: "";
          margin-right: calc(0.25rem * 3);
          margin-left: calc(0.25rem * 2);
          display: block;
          height: calc(0.25rem * 1.5);
          width: calc(0.25rem * 1.5);
          opacity: 40%;
          rotate: 45deg;
          border-top: 1px solid;
          border-right: 1px solid;
          background-color: #0000;
        }
        [dir="rtl"] & + *:before {
          rotate: -135deg;
        }
      }
    }
  }
  .-mr-2 {
    margin-right: calc(var(--spacing) * -2);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-\[8px\] {
    margin-right: 8px;
  }
  .mr-\[50px\] {
    margin-right: 50px;
  }
  .-mb-\[1px\] {
    margin-bottom: calc(1px * -1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-\[0px\] {
    margin-bottom: 0px;
  }
  .mb-\[8px\] {
    margin-bottom: 8px;
  }
  .mb-\[16px\] {
    margin-bottom: 16px;
  }
  .mb-\[50px\] {
    margin-bottom: 50px;
  }
  .mb-auto {
    margin-bottom: auto;
  }
  .ml-\[8px\] {
    margin-left: 8px;
  }
  .ml-\[16px\] {
    margin-left: 16px;
  }
  .ml-\[50px\] {
    margin-left: 50px;
  }
  .ml-auto {
    margin-left: auto;
  }
  .status {
    display: inline-block;
    aspect-ratio: 1 / 1;
    width: calc(0.25rem * 2);
    height: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    background-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
    background-position: center;
    background-repeat: no-repeat;
    vertical-align: middle;
    color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in srgb, #000 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
    }
    background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
    box-shadow: 0 2px 3px -1px currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
    }
  }
  .tabs {
    display: flex;
    flex-wrap: wrap;
    --tabs-height: auto;
    --tabs-direction: row;
    --tab-height: calc(var(--size-field, 0.25rem) * 10);
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: 0.5rem;
    min-height: 4rem;
  }
  .footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    column-gap: calc(0.25rem * 4);
    row-gap: calc(0.25rem * 10);
    font-size: 0.875rem;
    line-height: 1.25rem;
    & > * {
      display: grid;
      place-items: start;
      gap: calc(0.25rem * 2);
    }
    &.footer-center {
      grid-auto-flow: column dense;
      place-items: center;
      text-align: center;
      & > * {
        place-items: center;
      }
    }
  }
  .card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--card-p, 1.5rem);
    font-size: var(--card-fs, 0.875rem);
    :where(p) {
      flex-grow: 1;
    }
  }
  .alert {
    display: grid;
    align-items: center;
    gap: calc(0.25rem * 4);
    border-radius: var(--radius-box);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 3);
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    justify-content: start;
    justify-items: start;
    grid-auto-flow: column;
    grid-template-columns: auto;
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    font-size: 0.875rem;
    line-height: 1.25rem;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    @supports (color: color-mix(in lab, red, red)) {
      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    }
    &:has(:nth-child(2)) {
      grid-template-columns: auto minmax(auto, 1fr);
    }
    &.alert-outline {
      background-color: transparent;
      color: var(--alert-color);
      box-shadow: none;
      background-image: none;
    }
    &.alert-dash {
      background-color: transparent;
      color: var(--alert-color);
      border-style: dashed;
      box-shadow: none;
      background-image: none;
    }
    &.alert-soft {
      color: var(--alert-color, var(--color-base-content));
      background: var(--alert-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
      }
      border-color: var(--alert-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
      }
      box-shadow: none;
      background-image: none;
    }
  }
  .fieldset {
    display: grid;
    gap: calc(0.25rem * 1.5);
    padding-block: calc(0.25rem * 1);
    font-size: 0.75rem;
    grid-template-columns: 1fr;
    grid-auto-rows: max-content;
  }
  .join {
    display: inline-flex;
    align-items: stretch;
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    :where(.join-item) {
      border-start-start-radius: var(--join-ss, 0);
      border-start-end-radius: var(--join-se, 0);
      border-end-start-radius: var(--join-es, 0);
      border-end-end-radius: var(--join-ee, 0);
      * {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:first-child) {
      --join-ss: var(--radius-field);
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: 0;
      }
    }
    > .join-item:where(:last-child) {
      --join-ss: 0;
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      :where(.join-item) {
        --join-ss: 0;
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:only-child) {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :only-child {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
  }
  .prose {
    :root & {
      --tw-prose-body: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      --tw-prose-headings: var(--color-base-content);
      --tw-prose-lead: var(--color-base-content);
      --tw-prose-links: var(--color-base-content);
      --tw-prose-bold: var(--color-base-content);
      --tw-prose-counters: var(--color-base-content);
      --tw-prose-bullets: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-hr: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-quotes: var(--color-base-content);
      --tw-prose-quote-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-captions: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-code: var(--color-base-content);
      --tw-prose-pre-code: var(--color-neutral-content);
      --tw-prose-pre-bg: var(--color-neutral);
      --tw-prose-th-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-td-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-kbd: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      :where(code):not(pre > code) {
        background-color: var(--color-base-200);
        border-radius: var(--radius-selector);
        border: var(--border) solid var(--color-base-300);
        padding-inline: 0.5em;
        font-weight: inherit;
        &:before, &:after {
          display: none;
        }
      }
    }
  }
  .\!flex {
    display: flex !important;
  }
  .\!hidden {
    display: none !important;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .hidden\! {
    display: none !important;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .table\! {
    display: table !important;
  }
  .table-row {
    display: table-row;
  }
  .divider-horizontal {
    --divider-m: 0 1rem;
    &.divider {
      height: auto;
      width: calc(0.25rem * 4);
      flex-direction: column;
      &:before {
        height: 100%;
        width: calc(0.25rem * 0.5);
      }
      &:after {
        height: 100%;
        width: calc(0.25rem * 0.5);
      }
    }
  }
  .btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .btn-square {
    padding-inline: calc(0.25rem * 0);
    width: var(--size);
    height: var(--size);
  }
  .\!h-auto {
    height: auto !important;
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-\[30px\] {
    height: 30px;
  }
  .h-\[50px\] {
    height: 50px;
  }
  .h-\[80px\] {
    height: 80px;
  }
  .h-\[80vh\] {
    height: 80vh;
  }
  .h-\[100px\] {
    height: 100px;
  }
  .h-\[100vh\] {
    height: 100vh;
  }
  .h-\[200px\] {
    height: 200px;
  }
  .h-\[400px\] {
    height: 400px;
  }
  .h-\[calc\(100vh-66px\)\] {
    height: calc(100vh - 66px);
  }
  .h-\[calc\(100vh-450px-107px\)\] {
    height: calc(100vh - 450px - 107px);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-\[65vh\] {
    max-height: 65vh;
  }
  .max-h-\[260px\] {
    max-height: 260px;
  }
  .max-h-\[300px\] {
    max-height: 300px;
  }
  .max-h-\[calc\(100vh-8em\)\] {
    max-height: calc(100vh - 8em);
  }
  .max-h-\[calc\(100vh-10em\)\] {
    max-height: calc(100vh - 10em);
  }
  .max-h-\[calc\(100vh-108px\)\] {
    max-height: calc(100vh - 108px);
  }
  .\!min-h-0 {
    min-height: calc(var(--spacing) * 0) !important;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .min-h-\[20px\] {
    min-height: 20px;
  }
  .min-h-\[500px\] {
    min-height: 500px;
  }
  .min-h-full {
    min-height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .\!w-auto {
    width: auto !important;
  }
  .loading-xs {
    width: calc(var(--size-selector, 0.25rem) * 4);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-52 {
    width: calc(var(--spacing) * 52);
  }
  .w-\[26px\] {
    width: 26px;
  }
  .w-\[30px\] {
    width: 30px;
  }
  .w-\[50\%\] {
    width: 50%;
  }
  .w-\[60\%\] {
    width: 60%;
  }
  .w-\[70\%\] {
    width: 70%;
  }
  .w-\[70px\] {
    width: 70px;
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[80px\]\! {
    width: 80px !important;
  }
  .w-\[90px\] {
    width: 90px;
  }
  .w-\[100\%\] {
    width: 100%;
  }
  .w-\[100px\]\! {
    width: 100px !important;
  }
  .w-\[190px\] {
    width: 190px;
  }
  .w-\[200px\] {
    width: 200px;
  }
  .w-\[220px\] {
    width: 220px;
  }
  .w-\[250px\] {
    width: 250px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-\[calc\(100\%-100px\)\] {
    width: calc(100% - 100px);
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-\[70px\] {
    max-width: 70px;
  }
  .max-w-\[100vw\] {
    max-width: 100vw;
  }
  .max-w-\[150px\] {
    max-width: 150px;
  }
  .max-w-\[200px\] {
    max-width: 200px;
  }
  .max-w-\[430px\] {
    max-width: 430px;
  }
  .max-w-\[500px\] {
    max-width: 500px;
  }
  .max-w-\[550px\] {
    max-width: 550px;
  }
  .max-w-\[1024px\] {
    max-width: 1024px;
  }
  .max-w-\[1200px\] {
    max-width: 1200px;
  }
  .max-w-\[calc\(100vw-8em\)\] {
    max-width: calc(100vw - 8em);
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-max {
    max-width: max-content;
  }
  .max-w-screen-lg {
    max-width: var(--breakpoint-lg);
  }
  .max-w-screen-md {
    max-width: var(--breakpoint-md);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-\[20\%\] {
    min-width: 20%;
  }
  .min-w-\[20px\] {
    min-width: 20px;
  }
  .min-w-\[90vw\] {
    min-width: 90vw;
  }
  .min-w-\[100\%\] {
    min-width: 100%;
  }
  .min-w-\[200px\] {
    min-width: 200px;
  }
  .min-w-\[205px\] {
    min-width: 205px;
  }
  .min-w-\[320px\] {
    min-width: 320px;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-none {
    flex: none;
  }
  .shrink-1 {
    flex-shrink: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .flex-grow-1 {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .link {
    cursor: pointer;
    text-decoration-line: underline;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .resize-y {
    resize: vertical;
  }
  .grid-flow-row {
    grid-auto-flow: row;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }
  .grid-cols-\[minmax\(150px\,1fr\)_minmax\(550px\,2fr\)_minmax\(150px\,1fr\)\]\! {
    grid-template-columns: minmax(150px,1fr) minmax(550px,2fr) minmax(150px,1fr) !important;
  }
  .grid-cols-\[minmax\(200px\,1fr\)_minmax\(200px\,2fr\)_minmax\(200px\,1fr\)\]\! {
    grid-template-columns: minmax(200px,1fr) minmax(200px,2fr) minmax(200px,1fr) !important;
  }
  .grid-cols-\[repeat\(2\,minmax\(0\,1fr\)\)\] {
    grid-template-columns: repeat(2,minmax(0,1fr));
  }
  .grid-cols-\[repeat\(3\,minmax\(0\,1fr\)\)\] {
    grid-template-columns: repeat(3,minmax(0,1fr));
  }
  .grid-cols-\[repeat\(4\,minmax\(0\,1fr\)\)\] {
    grid-template-columns: repeat(4,minmax(0,1fr));
  }
  .grid-cols-spacing {
    grid-template-columns: .3fr 1fr .3fr;
  }
  .grid-rows-\[repeat\(0\,minmax\(0\,1fr\)\)\] {
    grid-template-rows: repeat(0,minmax(0,1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-\[0px\] {
    gap: 0px;
  }
  .gap-\[4px\] {
    gap: 4px;
  }
  .gap-\[8px\] {
    gap: 8px;
  }
  .gap-\[16px\] {
    gap: 16px;
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-neutral-600 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-neutral-600);
    }
  }
  .place-self-start {
    place-self: start;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-scroll {
    overflow-y: scroll;
  }
  .tabs-box {
    background-color: var(--color-base-200);
    padding: calc(0.25rem * 1);
    --tabs-box-radius: calc(var(--radius-field) + var(--radius-field) + var(--radius-field));
    border-radius: calc(var(--radius-field) + min(0.25rem, var(--tabs-box-radius)));
    box-shadow: 0 -0.5px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0.5px oklch(0% 0 0 / calc(var(--depth) * 0.05)) inset;
    .tab {
      border-radius: var(--radius-field);
      border-style: none;
      &:focus-visible, &:is(label:has(:checked:focus-visible)) {
        outline-offset: 2px;
      }
    }
    > :is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), > :is(input:checked), > :is(label:has(:checked)) {
      background-color: var(--tab-bg, var(--color-base-100));
      box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px var(--color-neutral), 0 1px 6px -4px var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 50%), #0000), 0 1px 6px -4px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 100%), #0000);
      }
      @media (forced-colors: active) {
        border: 1px solid;
      }
    }
  }
  .menu-sm {
    :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 2.5);
      padding-block: calc(0.25rem * 1);
      font-size: 0.75rem;
    }
    .menu-title {
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 2);
    }
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-\[5px\] {
    border-radius: 5px;
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-e-md {
    border-start-end-radius: var(--radius-md);
    border-end-end-radius: var(--radius-md);
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-t-md {
    border-top-left-radius: var(--radius-md);
    border-top-right-radius: var(--radius-md);
  }
  .rounded-l-lg {
    border-top-left-radius: var(--radius-lg);
    border-bottom-left-radius: var(--radius-lg);
  }
  .rounded-tl-\[0px\] {
    border-top-left-radius: 0px;
  }
  .rounded-tl-\[2px\] {
    border-top-left-radius: 2px;
  }
  .rounded-tl-\[5px\] {
    border-top-left-radius: 5px;
  }
  .rounded-tl-\[8px\] {
    border-top-left-radius: 8px;
  }
  .rounded-tl-\[10px\] {
    border-top-left-radius: 10px;
  }
  .rounded-r-lg {
    border-top-right-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
  }
  .rounded-tr-\[0px\] {
    border-top-right-radius: 0px;
  }
  .rounded-tr-\[2px\] {
    border-top-right-radius: 2px;
  }
  .rounded-tr-\[5px\] {
    border-top-right-radius: 5px;
  }
  .rounded-tr-\[8px\] {
    border-top-right-radius: 8px;
  }
  .rounded-tr-\[10px\] {
    border-top-right-radius: 10px;
  }
  .rounded-br-\[0px\] {
    border-bottom-right-radius: 0px;
  }
  .rounded-br-\[2px\] {
    border-bottom-right-radius: 2px;
  }
  .rounded-br-\[5px\] {
    border-bottom-right-radius: 5px;
  }
  .rounded-br-\[8px\] {
    border-bottom-right-radius: 8px;
  }
  .rounded-br-\[10px\] {
    border-bottom-right-radius: 10px;
  }
  .rounded-bl-\[0px\] {
    border-bottom-left-radius: 0px;
  }
  .rounded-bl-\[2px\] {
    border-bottom-left-radius: 2px;
  }
  .rounded-bl-\[5px\] {
    border-bottom-left-radius: 5px;
  }
  .rounded-bl-\[8px\] {
    border-bottom-left-radius: 8px;
  }
  .rounded-bl-\[10px\] {
    border-bottom-left-radius: 10px;
  }
  .\!border {
    border-style: var(--tw-border-style) !important;
    border-width: 1px !important;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-y-2 {
    border-block-style: var(--tw-border-style);
    border-block-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-\[1px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-\[10px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 10px;
  }
  .border-r-\[1px\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-r-\[10px\] {
    border-right-style: var(--tw-border-style);
    border-right-width: 10px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-b-\[1px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-\[10px\] {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 10px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-l-\[1px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-l-\[10px\] {
    border-left-style: var(--tw-border-style);
    border-left-width: 10px;
  }
  .\!border-none {
    --tw-border-style: none !important;
    border-style: none !important;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .alert-error {
    border-color: var(--color-error);
    color: var(--color-error-content);
    --alert-color: var(--color-error);
  }
  .alert-info {
    border-color: var(--color-info);
    color: var(--color-info-content);
    --alert-color: var(--color-info);
  }
  .alert-success {
    border-color: var(--color-success);
    color: var(--color-success-content);
    --alert-color: var(--color-success);
  }
  .alert-warning {
    border-color: var(--color-warning);
    color: var(--color-warning-content);
    --alert-color: var(--color-warning);
  }
  .\!border-white {
    border-color: var(--color-white) !important;
  }
  .border-\[\#555\] {
    border-color: #555;
  }
  .border-\[\#363636\] {
    border-color: #363636;
  }
  .border-\[\#686868\] {
    border-color: #686868;
  }
  .border-\[var\(--navBarLighterBG\)\] {
    border-color: var(--navBarLighterBG);
  }
  .border-base-300 {
    border-color: var(--color-base-300);
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-blue-400 {
    border-color: var(--color-blue-400);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-cyan-300 {
    border-color: var(--color-cyan-300);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-lime-600 {
    border-color: var(--color-lime-600);
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-neutral-300 {
    border-color: var(--color-neutral-300);
  }
  .border-neutral-600 {
    border-color: var(--color-neutral-600);
  }
  .border-red-500 {
    border-color: var(--color-red-500);
  }
  .border-red-700 {
    border-color: var(--color-red-700);
  }
  .border-slate-300 {
    border-color: var(--color-slate-300);
  }
  .border-stone-400 {
    border-color: var(--color-stone-400);
  }
  .border-stone-500 {
    border-color: var(--color-stone-500);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .\!bg-indigo-700 {
    background-color: var(--color-indigo-700) !important;
  }
  .\!bg-transparent {
    background-color: transparent !important;
  }
  .bg-\[\#000000\]\/20 {
    background-color: color-mix(in oklab, #000000 20%, transparent);
  }
  .bg-\[\#1e1e1e\] {
    background-color: #1e1e1e;
  }
  .bg-\[\#555\] {
    background-color: #555;
  }
  .bg-\[\#363636\] {
    background-color: #363636;
  }
  .bg-\[\#e1f7f7\] {
    background-color: #e1f7f7;
  }
  .bg-\[\#eeffff\] {
    background-color: #eeffff;
  }
  .bg-\[var\(--navBarDarkBG\)\] {
    background-color: var(--navBarDarkBG);
  }
  .bg-\[var\(--navBarLightBG\)\] {
    background-color: var(--navBarLightBG);
  }
  .bg-amber-100 {
    background-color: var(--color-amber-100);
  }
  .bg-amber-100\! {
    background-color: var(--color-amber-100) !important;
  }
  .bg-amber-200 {
    background-color: var(--color-amber-200);
  }
  .bg-amber-200\! {
    background-color: var(--color-amber-200) !important;
  }
  .bg-amber-300 {
    background-color: var(--color-amber-300);
  }
  .bg-amber-300\! {
    background-color: var(--color-amber-300) !important;
  }
  .bg-amber-400 {
    background-color: var(--color-amber-400);
  }
  .bg-amber-400\! {
    background-color: var(--color-amber-400) !important;
  }
  .bg-amber-500 {
    background-color: var(--color-amber-500);
  }
  .bg-amber-500\! {
    background-color: var(--color-amber-500) !important;
  }
  .bg-amber-600 {
    background-color: var(--color-amber-600);
  }
  .bg-amber-600\! {
    background-color: var(--color-amber-600) !important;
  }
  .bg-amber-700 {
    background-color: var(--color-amber-700);
  }
  .bg-amber-700\! {
    background-color: var(--color-amber-700) !important;
  }
  .bg-amber-800 {
    background-color: var(--color-amber-800);
  }
  .bg-amber-800\! {
    background-color: var(--color-amber-800) !important;
  }
  .bg-amber-900 {
    background-color: var(--color-amber-900);
  }
  .bg-amber-900\! {
    background-color: var(--color-amber-900) !important;
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-200 {
    background-color: var(--color-base-200);
  }
  .bg-base-300 {
    background-color: var(--color-base-300);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\! {
    background-color: var(--color-black) !important;
  }
  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-100\! {
    background-color: var(--color-blue-100) !important;
  }
  .bg-blue-200 {
    background-color: var(--color-blue-200);
  }
  .bg-blue-200\! {
    background-color: var(--color-blue-200) !important;
  }
  .bg-blue-300 {
    background-color: var(--color-blue-300);
  }
  .bg-blue-300\! {
    background-color: var(--color-blue-300) !important;
  }
  .bg-blue-400 {
    background-color: var(--color-blue-400);
  }
  .bg-blue-400\! {
    background-color: var(--color-blue-400) !important;
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\! {
    background-color: var(--color-blue-500) !important;
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-600\! {
    background-color: var(--color-blue-600) !important;
  }
  .bg-blue-600\/25 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 25%, transparent);
    }
  }
  .bg-blue-700 {
    background-color: var(--color-blue-700);
  }
  .bg-blue-700\! {
    background-color: var(--color-blue-700) !important;
  }
  .bg-blue-800 {
    background-color: var(--color-blue-800);
  }
  .bg-blue-800\! {
    background-color: var(--color-blue-800) !important;
  }
  .bg-blue-900 {
    background-color: var(--color-blue-900);
  }
  .bg-blue-900\! {
    background-color: var(--color-blue-900) !important;
  }
  .bg-cyan-100 {
    background-color: var(--color-cyan-100);
  }
  .bg-cyan-100\! {
    background-color: var(--color-cyan-100) !important;
  }
  .bg-cyan-200 {
    background-color: var(--color-cyan-200);
  }
  .bg-cyan-200\! {
    background-color: var(--color-cyan-200) !important;
  }
  .bg-cyan-300 {
    background-color: var(--color-cyan-300);
  }
  .bg-cyan-300\! {
    background-color: var(--color-cyan-300) !important;
  }
  .bg-cyan-400 {
    background-color: var(--color-cyan-400);
  }
  .bg-cyan-400\! {
    background-color: var(--color-cyan-400) !important;
  }
  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }
  .bg-cyan-500\! {
    background-color: var(--color-cyan-500) !important;
  }
  .bg-cyan-600 {
    background-color: var(--color-cyan-600);
  }
  .bg-cyan-600\! {
    background-color: var(--color-cyan-600) !important;
  }
  .bg-cyan-700 {
    background-color: var(--color-cyan-700);
  }
  .bg-cyan-700\! {
    background-color: var(--color-cyan-700) !important;
  }
  .bg-cyan-800 {
    background-color: var(--color-cyan-800);
  }
  .bg-cyan-800\! {
    background-color: var(--color-cyan-800) !important;
  }
  .bg-cyan-900 {
    background-color: var(--color-cyan-900);
  }
  .bg-cyan-900\! {
    background-color: var(--color-cyan-900) !important;
  }
  .bg-dev-remove {
    background-color: var(--dev-color-remove);
  }
  .bg-emerald-100 {
    background-color: var(--color-emerald-100);
  }
  .bg-emerald-100\! {
    background-color: var(--color-emerald-100) !important;
  }
  .bg-emerald-200 {
    background-color: var(--color-emerald-200);
  }
  .bg-emerald-200\! {
    background-color: var(--color-emerald-200) !important;
  }
  .bg-emerald-300 {
    background-color: var(--color-emerald-300);
  }
  .bg-emerald-300\! {
    background-color: var(--color-emerald-300) !important;
  }
  .bg-emerald-400 {
    background-color: var(--color-emerald-400);
  }
  .bg-emerald-400\! {
    background-color: var(--color-emerald-400) !important;
  }
  .bg-emerald-500 {
    background-color: var(--color-emerald-500);
  }
  .bg-emerald-500\! {
    background-color: var(--color-emerald-500) !important;
  }
  .bg-emerald-600 {
    background-color: var(--color-emerald-600);
  }
  .bg-emerald-600\! {
    background-color: var(--color-emerald-600) !important;
  }
  .bg-emerald-700 {
    background-color: var(--color-emerald-700);
  }
  .bg-emerald-700\! {
    background-color: var(--color-emerald-700) !important;
  }
  .bg-emerald-800 {
    background-color: var(--color-emerald-800);
  }
  .bg-emerald-800\! {
    background-color: var(--color-emerald-800) !important;
  }
  .bg-emerald-900 {
    background-color: var(--color-emerald-900);
  }
  .bg-emerald-900\! {
    background-color: var(--color-emerald-900) !important;
  }
  .bg-fuchsia-100 {
    background-color: var(--color-fuchsia-100);
  }
  .bg-fuchsia-100\! {
    background-color: var(--color-fuchsia-100) !important;
  }
  .bg-fuchsia-200 {
    background-color: var(--color-fuchsia-200);
  }
  .bg-fuchsia-200\! {
    background-color: var(--color-fuchsia-200) !important;
  }
  .bg-fuchsia-300 {
    background-color: var(--color-fuchsia-300);
  }
  .bg-fuchsia-300\! {
    background-color: var(--color-fuchsia-300) !important;
  }
  .bg-fuchsia-400 {
    background-color: var(--color-fuchsia-400);
  }
  .bg-fuchsia-400\! {
    background-color: var(--color-fuchsia-400) !important;
  }
  .bg-fuchsia-500 {
    background-color: var(--color-fuchsia-500);
  }
  .bg-fuchsia-500\! {
    background-color: var(--color-fuchsia-500) !important;
  }
  .bg-fuchsia-600 {
    background-color: var(--color-fuchsia-600);
  }
  .bg-fuchsia-600\! {
    background-color: var(--color-fuchsia-600) !important;
  }
  .bg-fuchsia-700 {
    background-color: var(--color-fuchsia-700);
  }
  .bg-fuchsia-700\! {
    background-color: var(--color-fuchsia-700) !important;
  }
  .bg-fuchsia-800 {
    background-color: var(--color-fuchsia-800);
  }
  .bg-fuchsia-800\! {
    background-color: var(--color-fuchsia-800) !important;
  }
  .bg-fuchsia-900 {
    background-color: var(--color-fuchsia-900);
  }
  .bg-fuchsia-900\! {
    background-color: var(--color-fuchsia-900) !important;
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-100\! {
    background-color: var(--color-gray-100) !important;
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-200\! {
    background-color: var(--color-gray-200) !important;
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-300\! {
    background-color: var(--color-gray-300) !important;
  }
  .bg-gray-400 {
    background-color: var(--color-gray-400);
  }
  .bg-gray-400\! {
    background-color: var(--color-gray-400) !important;
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-gray-500\! {
    background-color: var(--color-gray-500) !important;
  }
  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }
  .bg-gray-600\! {
    background-color: var(--color-gray-600) !important;
  }
  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }
  .bg-gray-700\! {
    background-color: var(--color-gray-700) !important;
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-gray-800\! {
    background-color: var(--color-gray-800) !important;
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-gray-900\! {
    background-color: var(--color-gray-900) !important;
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-100\! {
    background-color: var(--color-green-100) !important;
  }
  .bg-green-200 {
    background-color: var(--color-green-200);
  }
  .bg-green-200\! {
    background-color: var(--color-green-200) !important;
  }
  .bg-green-300 {
    background-color: var(--color-green-300);
  }
  .bg-green-300\! {
    background-color: var(--color-green-300) !important;
  }
  .bg-green-400 {
    background-color: var(--color-green-400);
  }
  .bg-green-400\! {
    background-color: var(--color-green-400) !important;
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-500\! {
    background-color: var(--color-green-500) !important;
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-green-600\! {
    background-color: var(--color-green-600) !important;
  }
  .bg-green-700 {
    background-color: var(--color-green-700);
  }
  .bg-green-700\! {
    background-color: var(--color-green-700) !important;
  }
  .bg-green-800 {
    background-color: var(--color-green-800);
  }
  .bg-green-800\! {
    background-color: var(--color-green-800) !important;
  }
  .bg-green-900 {
    background-color: var(--color-green-900);
  }
  .bg-green-900\! {
    background-color: var(--color-green-900) !important;
  }
  .bg-indigo-100 {
    background-color: var(--color-indigo-100);
  }
  .bg-indigo-100\! {
    background-color: var(--color-indigo-100) !important;
  }
  .bg-indigo-200 {
    background-color: var(--color-indigo-200);
  }
  .bg-indigo-200\! {
    background-color: var(--color-indigo-200) !important;
  }
  .bg-indigo-300 {
    background-color: var(--color-indigo-300);
  }
  .bg-indigo-300\! {
    background-color: var(--color-indigo-300) !important;
  }
  .bg-indigo-400 {
    background-color: var(--color-indigo-400);
  }
  .bg-indigo-400\! {
    background-color: var(--color-indigo-400) !important;
  }
  .bg-indigo-500 {
    background-color: var(--color-indigo-500);
  }
  .bg-indigo-500\! {
    background-color: var(--color-indigo-500) !important;
  }
  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }
  .bg-indigo-600\! {
    background-color: var(--color-indigo-600) !important;
  }
  .bg-indigo-700 {
    background-color: var(--color-indigo-700);
  }
  .bg-indigo-700\! {
    background-color: var(--color-indigo-700) !important;
  }
  .bg-indigo-800 {
    background-color: var(--color-indigo-800);
  }
  .bg-indigo-800\! {
    background-color: var(--color-indigo-800) !important;
  }
  .bg-indigo-900 {
    background-color: var(--color-indigo-900);
  }
  .bg-indigo-900\! {
    background-color: var(--color-indigo-900) !important;
  }
  .bg-lime-100 {
    background-color: var(--color-lime-100);
  }
  .bg-lime-100\! {
    background-color: var(--color-lime-100) !important;
  }
  .bg-lime-200 {
    background-color: var(--color-lime-200);
  }
  .bg-lime-200\! {
    background-color: var(--color-lime-200) !important;
  }
  .bg-lime-300 {
    background-color: var(--color-lime-300);
  }
  .bg-lime-300\! {
    background-color: var(--color-lime-300) !important;
  }
  .bg-lime-400 {
    background-color: var(--color-lime-400);
  }
  .bg-lime-400\! {
    background-color: var(--color-lime-400) !important;
  }
  .bg-lime-500 {
    background-color: var(--color-lime-500);
  }
  .bg-lime-500\! {
    background-color: var(--color-lime-500) !important;
  }
  .bg-lime-600 {
    background-color: var(--color-lime-600);
  }
  .bg-lime-600\! {
    background-color: var(--color-lime-600) !important;
  }
  .bg-lime-700 {
    background-color: var(--color-lime-700);
  }
  .bg-lime-700\! {
    background-color: var(--color-lime-700) !important;
  }
  .bg-lime-800 {
    background-color: var(--color-lime-800);
  }
  .bg-lime-800\! {
    background-color: var(--color-lime-800) !important;
  }
  .bg-lime-900 {
    background-color: var(--color-lime-900);
  }
  .bg-lime-900\! {
    background-color: var(--color-lime-900) !important;
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-neutral-100\! {
    background-color: var(--color-neutral-100) !important;
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-neutral-200\! {
    background-color: var(--color-neutral-200) !important;
  }
  .bg-neutral-300 {
    background-color: var(--color-neutral-300);
  }
  .bg-neutral-300\! {
    background-color: var(--color-neutral-300) !important;
  }
  .bg-neutral-400 {
    background-color: var(--color-neutral-400);
  }
  .bg-neutral-400\! {
    background-color: var(--color-neutral-400) !important;
  }
  .bg-neutral-500 {
    background-color: var(--color-neutral-500);
  }
  .bg-neutral-500\! {
    background-color: var(--color-neutral-500) !important;
  }
  .bg-neutral-600 {
    background-color: var(--color-neutral-600);
  }
  .bg-neutral-600\! {
    background-color: var(--color-neutral-600) !important;
  }
  .bg-neutral-700 {
    background-color: var(--color-neutral-700);
  }
  .bg-neutral-700\! {
    background-color: var(--color-neutral-700) !important;
  }
  .bg-neutral-800 {
    background-color: var(--color-neutral-800);
  }
  .bg-neutral-800\! {
    background-color: var(--color-neutral-800) !important;
  }
  .bg-neutral-900 {
    background-color: var(--color-neutral-900);
  }
  .bg-neutral-900\! {
    background-color: var(--color-neutral-900) !important;
  }
  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }
  .bg-orange-100\! {
    background-color: var(--color-orange-100) !important;
  }
  .bg-orange-200 {
    background-color: var(--color-orange-200);
  }
  .bg-orange-200\! {
    background-color: var(--color-orange-200) !important;
  }
  .bg-orange-300 {
    background-color: var(--color-orange-300);
  }
  .bg-orange-300\! {
    background-color: var(--color-orange-300) !important;
  }
  .bg-orange-400 {
    background-color: var(--color-orange-400);
  }
  .bg-orange-400\! {
    background-color: var(--color-orange-400) !important;
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-orange-500\! {
    background-color: var(--color-orange-500) !important;
  }
  .bg-orange-600 {
    background-color: var(--color-orange-600);
  }
  .bg-orange-600\! {
    background-color: var(--color-orange-600) !important;
  }
  .bg-orange-700 {
    background-color: var(--color-orange-700);
  }
  .bg-orange-700\! {
    background-color: var(--color-orange-700) !important;
  }
  .bg-orange-800 {
    background-color: var(--color-orange-800);
  }
  .bg-orange-800\! {
    background-color: var(--color-orange-800) !important;
  }
  .bg-orange-900 {
    background-color: var(--color-orange-900);
  }
  .bg-orange-900\! {
    background-color: var(--color-orange-900) !important;
  }
  .bg-pink-100 {
    background-color: var(--color-pink-100);
  }
  .bg-pink-100\! {
    background-color: var(--color-pink-100) !important;
  }
  .bg-pink-200 {
    background-color: var(--color-pink-200);
  }
  .bg-pink-200\! {
    background-color: var(--color-pink-200) !important;
  }
  .bg-pink-300 {
    background-color: var(--color-pink-300);
  }
  .bg-pink-300\! {
    background-color: var(--color-pink-300) !important;
  }
  .bg-pink-400 {
    background-color: var(--color-pink-400);
  }
  .bg-pink-400\! {
    background-color: var(--color-pink-400) !important;
  }
  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }
  .bg-pink-500\! {
    background-color: var(--color-pink-500) !important;
  }
  .bg-pink-600 {
    background-color: var(--color-pink-600);
  }
  .bg-pink-600\! {
    background-color: var(--color-pink-600) !important;
  }
  .bg-pink-700 {
    background-color: var(--color-pink-700);
  }
  .bg-pink-700\! {
    background-color: var(--color-pink-700) !important;
  }
  .bg-pink-800 {
    background-color: var(--color-pink-800);
  }
  .bg-pink-800\! {
    background-color: var(--color-pink-800) !important;
  }
  .bg-pink-900 {
    background-color: var(--color-pink-900);
  }
  .bg-pink-900\! {
    background-color: var(--color-pink-900) !important;
  }
  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }
  .bg-purple-100\! {
    background-color: var(--color-purple-100) !important;
  }
  .bg-purple-200 {
    background-color: var(--color-purple-200);
  }
  .bg-purple-200\! {
    background-color: var(--color-purple-200) !important;
  }
  .bg-purple-300 {
    background-color: var(--color-purple-300);
  }
  .bg-purple-300\! {
    background-color: var(--color-purple-300) !important;
  }
  .bg-purple-400 {
    background-color: var(--color-purple-400);
  }
  .bg-purple-400\! {
    background-color: var(--color-purple-400) !important;
  }
  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }
  .bg-purple-500\! {
    background-color: var(--color-purple-500) !important;
  }
  .bg-purple-600 {
    background-color: var(--color-purple-600);
  }
  .bg-purple-600\! {
    background-color: var(--color-purple-600) !important;
  }
  .bg-purple-700 {
    background-color: var(--color-purple-700);
  }
  .bg-purple-700\! {
    background-color: var(--color-purple-700) !important;
  }
  .bg-purple-800 {
    background-color: var(--color-purple-800);
  }
  .bg-purple-800\! {
    background-color: var(--color-purple-800) !important;
  }
  .bg-purple-900 {
    background-color: var(--color-purple-900);
  }
  .bg-purple-900\! {
    background-color: var(--color-purple-900) !important;
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-100\! {
    background-color: var(--color-red-100) !important;
  }
  .bg-red-200 {
    background-color: var(--color-red-200);
  }
  .bg-red-200\! {
    background-color: var(--color-red-200) !important;
  }
  .bg-red-300 {
    background-color: var(--color-red-300);
  }
  .bg-red-300\! {
    background-color: var(--color-red-300) !important;
  }
  .bg-red-400 {
    background-color: var(--color-red-400);
  }
  .bg-red-400\! {
    background-color: var(--color-red-400) !important;
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\! {
    background-color: var(--color-red-500) !important;
  }
  .bg-red-600 {
    background-color: var(--color-red-600);
  }
  .bg-red-600\! {
    background-color: var(--color-red-600) !important;
  }
  .bg-red-700 {
    background-color: var(--color-red-700);
  }
  .bg-red-700\! {
    background-color: var(--color-red-700) !important;
  }
  .bg-red-800 {
    background-color: var(--color-red-800);
  }
  .bg-red-800\! {
    background-color: var(--color-red-800) !important;
  }
  .bg-red-900 {
    background-color: var(--color-red-900);
  }
  .bg-red-900\! {
    background-color: var(--color-red-900) !important;
  }
  .bg-rose-100 {
    background-color: var(--color-rose-100);
  }
  .bg-rose-100\! {
    background-color: var(--color-rose-100) !important;
  }
  .bg-rose-200 {
    background-color: var(--color-rose-200);
  }
  .bg-rose-200\! {
    background-color: var(--color-rose-200) !important;
  }
  .bg-rose-300 {
    background-color: var(--color-rose-300);
  }
  .bg-rose-300\! {
    background-color: var(--color-rose-300) !important;
  }
  .bg-rose-400 {
    background-color: var(--color-rose-400);
  }
  .bg-rose-400\! {
    background-color: var(--color-rose-400) !important;
  }
  .bg-rose-500 {
    background-color: var(--color-rose-500);
  }
  .bg-rose-500\! {
    background-color: var(--color-rose-500) !important;
  }
  .bg-rose-600 {
    background-color: var(--color-rose-600);
  }
  .bg-rose-600\! {
    background-color: var(--color-rose-600) !important;
  }
  .bg-rose-700 {
    background-color: var(--color-rose-700);
  }
  .bg-rose-700\! {
    background-color: var(--color-rose-700) !important;
  }
  .bg-rose-800 {
    background-color: var(--color-rose-800);
  }
  .bg-rose-800\! {
    background-color: var(--color-rose-800) !important;
  }
  .bg-rose-900 {
    background-color: var(--color-rose-900);
  }
  .bg-rose-900\! {
    background-color: var(--color-rose-900) !important;
  }
  .bg-sky-100 {
    background-color: var(--color-sky-100);
  }
  .bg-sky-100\! {
    background-color: var(--color-sky-100) !important;
  }
  .bg-sky-200 {
    background-color: var(--color-sky-200);
  }
  .bg-sky-200\! {
    background-color: var(--color-sky-200) !important;
  }
  .bg-sky-300 {
    background-color: var(--color-sky-300);
  }
  .bg-sky-300\! {
    background-color: var(--color-sky-300) !important;
  }
  .bg-sky-400 {
    background-color: var(--color-sky-400);
  }
  .bg-sky-400\! {
    background-color: var(--color-sky-400) !important;
  }
  .bg-sky-500 {
    background-color: var(--color-sky-500);
  }
  .bg-sky-500\! {
    background-color: var(--color-sky-500) !important;
  }
  .bg-sky-600 {
    background-color: var(--color-sky-600);
  }
  .bg-sky-600\! {
    background-color: var(--color-sky-600) !important;
  }
  .bg-sky-700 {
    background-color: var(--color-sky-700);
  }
  .bg-sky-700\! {
    background-color: var(--color-sky-700) !important;
  }
  .bg-sky-800 {
    background-color: var(--color-sky-800);
  }
  .bg-sky-800\! {
    background-color: var(--color-sky-800) !important;
  }
  .bg-sky-900 {
    background-color: var(--color-sky-900);
  }
  .bg-sky-900\! {
    background-color: var(--color-sky-900) !important;
  }
  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }
  .bg-slate-100\! {
    background-color: var(--color-slate-100) !important;
  }
  .bg-slate-200 {
    background-color: var(--color-slate-200);
  }
  .bg-slate-200\! {
    background-color: var(--color-slate-200) !important;
  }
  .bg-slate-300 {
    background-color: var(--color-slate-300);
  }
  .bg-slate-300\! {
    background-color: var(--color-slate-300) !important;
  }
  .bg-slate-400 {
    background-color: var(--color-slate-400);
  }
  .bg-slate-400\! {
    background-color: var(--color-slate-400) !important;
  }
  .bg-slate-500 {
    background-color: var(--color-slate-500);
  }
  .bg-slate-500\! {
    background-color: var(--color-slate-500) !important;
  }
  .bg-slate-600 {
    background-color: var(--color-slate-600);
  }
  .bg-slate-600\! {
    background-color: var(--color-slate-600) !important;
  }
  .bg-slate-700 {
    background-color: var(--color-slate-700);
  }
  .bg-slate-700\! {
    background-color: var(--color-slate-700) !important;
  }
  .bg-slate-800 {
    background-color: var(--color-slate-800);
  }
  .bg-slate-800\! {
    background-color: var(--color-slate-800) !important;
  }
  .bg-slate-900 {
    background-color: var(--color-slate-900);
  }
  .bg-slate-900\! {
    background-color: var(--color-slate-900) !important;
  }
  .bg-stone-100 {
    background-color: var(--color-stone-100);
  }
  .bg-stone-100\! {
    background-color: var(--color-stone-100) !important;
  }
  .bg-stone-200 {
    background-color: var(--color-stone-200);
  }
  .bg-stone-200\! {
    background-color: var(--color-stone-200) !important;
  }
  .bg-stone-300 {
    background-color: var(--color-stone-300);
  }
  .bg-stone-300\! {
    background-color: var(--color-stone-300) !important;
  }
  .bg-stone-400 {
    background-color: var(--color-stone-400);
  }
  .bg-stone-400\! {
    background-color: var(--color-stone-400) !important;
  }
  .bg-stone-500 {
    background-color: var(--color-stone-500);
  }
  .bg-stone-500\! {
    background-color: var(--color-stone-500) !important;
  }
  .bg-stone-600 {
    background-color: var(--color-stone-600);
  }
  .bg-stone-600\! {
    background-color: var(--color-stone-600) !important;
  }
  .bg-stone-700 {
    background-color: var(--color-stone-700);
  }
  .bg-stone-700\! {
    background-color: var(--color-stone-700) !important;
  }
  .bg-stone-800 {
    background-color: var(--color-stone-800);
  }
  .bg-stone-800\! {
    background-color: var(--color-stone-800) !important;
  }
  .bg-stone-900 {
    background-color: var(--color-stone-900);
  }
  .bg-stone-900\! {
    background-color: var(--color-stone-900) !important;
  }
  .bg-teal-100 {
    background-color: var(--color-teal-100);
  }
  .bg-teal-100\! {
    background-color: var(--color-teal-100) !important;
  }
  .bg-teal-200 {
    background-color: var(--color-teal-200);
  }
  .bg-teal-200\! {
    background-color: var(--color-teal-200) !important;
  }
  .bg-teal-300 {
    background-color: var(--color-teal-300);
  }
  .bg-teal-300\! {
    background-color: var(--color-teal-300) !important;
  }
  .bg-teal-400 {
    background-color: var(--color-teal-400);
  }
  .bg-teal-400\! {
    background-color: var(--color-teal-400) !important;
  }
  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }
  .bg-teal-500\! {
    background-color: var(--color-teal-500) !important;
  }
  .bg-teal-600 {
    background-color: var(--color-teal-600);
  }
  .bg-teal-600\! {
    background-color: var(--color-teal-600) !important;
  }
  .bg-teal-700 {
    background-color: var(--color-teal-700);
  }
  .bg-teal-700\! {
    background-color: var(--color-teal-700) !important;
  }
  .bg-teal-800 {
    background-color: var(--color-teal-800);
  }
  .bg-teal-800\! {
    background-color: var(--color-teal-800) !important;
  }
  .bg-teal-900 {
    background-color: var(--color-teal-900);
  }
  .bg-teal-900\! {
    background-color: var(--color-teal-900) !important;
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-violet-100 {
    background-color: var(--color-violet-100);
  }
  .bg-violet-100\! {
    background-color: var(--color-violet-100) !important;
  }
  .bg-violet-200 {
    background-color: var(--color-violet-200);
  }
  .bg-violet-200\! {
    background-color: var(--color-violet-200) !important;
  }
  .bg-violet-300 {
    background-color: var(--color-violet-300);
  }
  .bg-violet-300\! {
    background-color: var(--color-violet-300) !important;
  }
  .bg-violet-400 {
    background-color: var(--color-violet-400);
  }
  .bg-violet-400\! {
    background-color: var(--color-violet-400) !important;
  }
  .bg-violet-500 {
    background-color: var(--color-violet-500);
  }
  .bg-violet-500\! {
    background-color: var(--color-violet-500) !important;
  }
  .bg-violet-600 {
    background-color: var(--color-violet-600);
  }
  .bg-violet-600\! {
    background-color: var(--color-violet-600) !important;
  }
  .bg-violet-700 {
    background-color: var(--color-violet-700);
  }
  .bg-violet-700\! {
    background-color: var(--color-violet-700) !important;
  }
  .bg-violet-800 {
    background-color: var(--color-violet-800);
  }
  .bg-violet-800\! {
    background-color: var(--color-violet-800) !important;
  }
  .bg-violet-900 {
    background-color: var(--color-violet-900);
  }
  .bg-violet-900\! {
    background-color: var(--color-violet-900) !important;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\! {
    background-color: var(--color-white) !important;
  }
  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }
  .bg-yellow-100\! {
    background-color: var(--color-yellow-100) !important;
  }
  .bg-yellow-200 {
    background-color: var(--color-yellow-200);
  }
  .bg-yellow-200\! {
    background-color: var(--color-yellow-200) !important;
  }
  .bg-yellow-300 {
    background-color: var(--color-yellow-300);
  }
  .bg-yellow-300\! {
    background-color: var(--color-yellow-300) !important;
  }
  .bg-yellow-400 {
    background-color: var(--color-yellow-400);
  }
  .bg-yellow-400\! {
    background-color: var(--color-yellow-400) !important;
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-yellow-500\! {
    background-color: var(--color-yellow-500) !important;
  }
  .bg-yellow-600 {
    background-color: var(--color-yellow-600);
  }
  .bg-yellow-600\! {
    background-color: var(--color-yellow-600) !important;
  }
  .bg-yellow-700 {
    background-color: var(--color-yellow-700);
  }
  .bg-yellow-700\! {
    background-color: var(--color-yellow-700) !important;
  }
  .bg-yellow-800 {
    background-color: var(--color-yellow-800);
  }
  .bg-yellow-800\! {
    background-color: var(--color-yellow-800) !important;
  }
  .bg-yellow-900 {
    background-color: var(--color-yellow-900);
  }
  .bg-yellow-900\! {
    background-color: var(--color-yellow-900) !important;
  }
  .bg-zinc-100 {
    background-color: var(--color-zinc-100);
  }
  .bg-zinc-100\! {
    background-color: var(--color-zinc-100) !important;
  }
  .bg-zinc-200 {
    background-color: var(--color-zinc-200);
  }
  .bg-zinc-200\! {
    background-color: var(--color-zinc-200) !important;
  }
  .bg-zinc-300 {
    background-color: var(--color-zinc-300);
  }
  .bg-zinc-300\! {
    background-color: var(--color-zinc-300) !important;
  }
  .bg-zinc-400 {
    background-color: var(--color-zinc-400);
  }
  .bg-zinc-400\! {
    background-color: var(--color-zinc-400) !important;
  }
  .bg-zinc-500 {
    background-color: var(--color-zinc-500);
  }
  .bg-zinc-500\! {
    background-color: var(--color-zinc-500) !important;
  }
  .bg-zinc-600 {
    background-color: var(--color-zinc-600);
  }
  .bg-zinc-600\! {
    background-color: var(--color-zinc-600) !important;
  }
  .bg-zinc-700 {
    background-color: var(--color-zinc-700);
  }
  .bg-zinc-700\! {
    background-color: var(--color-zinc-700) !important;
  }
  .bg-zinc-800 {
    background-color: var(--color-zinc-800);
  }
  .bg-zinc-800\! {
    background-color: var(--color-zinc-800) !important;
  }
  .bg-zinc-900 {
    background-color: var(--color-zinc-900);
  }
  .bg-zinc-900\! {
    background-color: var(--color-zinc-900) !important;
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-\[url\(\/images\/default_bspk_background_5B39A4706C332944A7C41518DADCEE2B\.jpg\)\] {
    background-image: url(/images/default_bspk_background_5B39A4706C332944A7C41518DADCEE2B.jpg);
  }
  .bg-\[url\(\/images\/default_bspk_background_8C1FADFF56A5414AB3E78BBB298ECC2C\.jpg\)\] {
    background-image: url(/images/default_bspk_background_8C1FADFF56A5414AB3E78BBB298ECC2C.jpg);
  }
  .from-yellow-200 {
    --tw-gradient-from: var(--color-yellow-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-20\% {
    --tw-gradient-from-position: 20%;
  }
  .via-amber-400 {
    --tw-gradient-via: var(--color-amber-400);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-60\% {
    --tw-gradient-via-position: 60%;
  }
  .to-orange-600 {
    --tw-gradient-to: var(--color-orange-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-100\% {
    --tw-gradient-to-position: 100%;
  }
  .loading-dots {
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
  }
  .bg-cover {
    background-size: cover;
  }
  .object-cover {
    object-fit: cover;
  }
  .\!p-0 {
    padding: calc(var(--spacing) * 0) !important;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .p-\[3px\] {
    padding: 3px;
  }
  .p-\[10px\] {
    padding: 10px;
  }
  .p-\[16px\] {
    padding: 16px;
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-\[1px\] {
    padding-inline: 1px;
  }
  .px-\[2px\] {
    padding-inline: 2px;
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-\[16px\] {
    padding-block: 16px;
  }
  .ps-\[16px\] {
    padding-inline-start: 16px;
  }
  .pe-\[16px\] {
    padding-inline-end: 16px;
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-\[0px\] {
    padding-top: 0px;
  }
  .pt-\[3px\] {
    padding-top: 3px;
  }
  .pt-\[5px\] {
    padding-top: 5px;
  }
  .pt-\[8px\] {
    padding-top: 8px;
  }
  .pt-\[10px\] {
    padding-top: 10px;
  }
  .pt-\[16px\] {
    padding-top: 16px;
  }
  .pt-\[32px\] {
    padding-top: 32px;
  }
  .\!pr-10 {
    padding-right: calc(var(--spacing) * 10) !important;
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-\[0px\] {
    padding-right: 0px;
  }
  .pr-\[5px\] {
    padding-right: 5px;
  }
  .pr-\[8px\] {
    padding-right: 8px;
  }
  .pr-\[10px\] {
    padding-right: 10px;
  }
  .pr-\[16px\] {
    padding-right: 16px;
  }
  .pr-\[40px\] {
    padding-right: 40px;
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-\[0px\] {
    padding-bottom: 0px;
  }
  .pb-\[3px\] {
    padding-bottom: 3px;
  }
  .pb-\[5px\] {
    padding-bottom: 5px;
  }
  .pb-\[8px\] {
    padding-bottom: 8px;
  }
  .pb-\[10px\] {
    padding-bottom: 10px;
  }
  .pb-\[16px\] {
    padding-bottom: 16px;
  }
  .pb-\[20px\] {
    padding-bottom: 20px;
  }
  .pb-\[32px\] {
    padding-bottom: 32px;
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-5 {
    padding-left: calc(var(--spacing) * 5);
  }
  .pl-\[0px\] {
    padding-left: 0px;
  }
  .pl-\[5px\] {
    padding-left: 5px;
  }
  .pl-\[8px\] {
    padding-left: 8px;
  }
  .pl-\[16px\] {
    padding-left: 16px;
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-start {
    text-align: start;
  }
  .align-middle {
    vertical-align: middle;
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .select-sm {
    --size: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.75rem;
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .text-\[12px\] {
    font-size: 12px;
  }
  .text-\[20px\] {
    font-size: 20px;
  }
  .text-\[22px\] {
    font-size: 22px;
  }
  .text-\[70px\] {
    font-size: 70px;
  }
  .font-\[400\] {
    --tw-font-weight: 400;
    font-weight: 400;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .break-all {
    word-break: break-all;
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .\!text-\[\#fff\] {
    color: #fff !important;
  }
  .\!text-white {
    color: var(--color-white) !important;
  }
  .text-\[\#999999\] {
    color: #999999;
  }
  .text-\[\#F00\] {
    color: #F00;
  }
  .text-\[\#fff\] {
    color: #fff;
  }
  .text-\[px\] {
    color: px;
  }
  .text-amber-100 {
    color: var(--color-amber-100);
  }
  .text-amber-100\! {
    color: var(--color-amber-100) !important;
  }
  .text-amber-200 {
    color: var(--color-amber-200);
  }
  .text-amber-200\! {
    color: var(--color-amber-200) !important;
  }
  .text-amber-300 {
    color: var(--color-amber-300);
  }
  .text-amber-300\! {
    color: var(--color-amber-300) !important;
  }
  .text-amber-400 {
    color: var(--color-amber-400);
  }
  .text-amber-400\! {
    color: var(--color-amber-400) !important;
  }
  .text-amber-500 {
    color: var(--color-amber-500);
  }
  .text-amber-500\! {
    color: var(--color-amber-500) !important;
  }
  .text-amber-600 {
    color: var(--color-amber-600);
  }
  .text-amber-600\! {
    color: var(--color-amber-600) !important;
  }
  .text-amber-700 {
    color: var(--color-amber-700);
  }
  .text-amber-700\! {
    color: var(--color-amber-700) !important;
  }
  .text-amber-800 {
    color: var(--color-amber-800);
  }
  .text-amber-800\! {
    color: var(--color-amber-800) !important;
  }
  .text-amber-900 {
    color: var(--color-amber-900);
  }
  .text-amber-900\! {
    color: var(--color-amber-900) !important;
  }
  .text-base-content {
    color: var(--color-base-content);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black\! {
    color: var(--color-black) !important;
  }
  .text-blue-100 {
    color: var(--color-blue-100);
  }
  .text-blue-100\! {
    color: var(--color-blue-100) !important;
  }
  .text-blue-200 {
    color: var(--color-blue-200);
  }
  .text-blue-200\! {
    color: var(--color-blue-200) !important;
  }
  .text-blue-300 {
    color: var(--color-blue-300);
  }
  .text-blue-300\! {
    color: var(--color-blue-300) !important;
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-blue-400\! {
    color: var(--color-blue-400) !important;
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-500\! {
    color: var(--color-blue-500) !important;
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-600\! {
    color: var(--color-blue-600) !important;
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-blue-700\! {
    color: var(--color-blue-700) !important;
  }
  .text-blue-800 {
    color: var(--color-blue-800);
  }
  .text-blue-800\! {
    color: var(--color-blue-800) !important;
  }
  .text-blue-900 {
    color: var(--color-blue-900);
  }
  .text-blue-900\! {
    color: var(--color-blue-900) !important;
  }
  .text-cyan-100 {
    color: var(--color-cyan-100);
  }
  .text-cyan-100\! {
    color: var(--color-cyan-100) !important;
  }
  .text-cyan-200 {
    color: var(--color-cyan-200);
  }
  .text-cyan-200\! {
    color: var(--color-cyan-200) !important;
  }
  .text-cyan-300 {
    color: var(--color-cyan-300);
  }
  .text-cyan-300\! {
    color: var(--color-cyan-300) !important;
  }
  .text-cyan-400 {
    color: var(--color-cyan-400);
  }
  .text-cyan-400\! {
    color: var(--color-cyan-400) !important;
  }
  .text-cyan-500 {
    color: var(--color-cyan-500);
  }
  .text-cyan-500\! {
    color: var(--color-cyan-500) !important;
  }
  .text-cyan-600 {
    color: var(--color-cyan-600);
  }
  .text-cyan-600\! {
    color: var(--color-cyan-600) !important;
  }
  .text-cyan-700 {
    color: var(--color-cyan-700);
  }
  .text-cyan-700\! {
    color: var(--color-cyan-700) !important;
  }
  .text-cyan-800 {
    color: var(--color-cyan-800);
  }
  .text-cyan-800\! {
    color: var(--color-cyan-800) !important;
  }
  .text-cyan-900 {
    color: var(--color-cyan-900);
  }
  .text-cyan-900\! {
    color: var(--color-cyan-900) !important;
  }
  .text-emerald-100 {
    color: var(--color-emerald-100);
  }
  .text-emerald-100\! {
    color: var(--color-emerald-100) !important;
  }
  .text-emerald-200 {
    color: var(--color-emerald-200);
  }
  .text-emerald-200\! {
    color: var(--color-emerald-200) !important;
  }
  .text-emerald-300 {
    color: var(--color-emerald-300);
  }
  .text-emerald-300\! {
    color: var(--color-emerald-300) !important;
  }
  .text-emerald-400 {
    color: var(--color-emerald-400);
  }
  .text-emerald-400\! {
    color: var(--color-emerald-400) !important;
  }
  .text-emerald-500 {
    color: var(--color-emerald-500);
  }
  .text-emerald-500\! {
    color: var(--color-emerald-500) !important;
  }
  .text-emerald-600 {
    color: var(--color-emerald-600);
  }
  .text-emerald-600\! {
    color: var(--color-emerald-600) !important;
  }
  .text-emerald-700 {
    color: var(--color-emerald-700);
  }
  .text-emerald-700\! {
    color: var(--color-emerald-700) !important;
  }
  .text-emerald-800 {
    color: var(--color-emerald-800);
  }
  .text-emerald-800\! {
    color: var(--color-emerald-800) !important;
  }
  .text-emerald-900 {
    color: var(--color-emerald-900);
  }
  .text-emerald-900\! {
    color: var(--color-emerald-900) !important;
  }
  .text-error {
    color: var(--color-error);
  }
  .text-fuchsia-100 {
    color: var(--color-fuchsia-100);
  }
  .text-fuchsia-100\! {
    color: var(--color-fuchsia-100) !important;
  }
  .text-fuchsia-200 {
    color: var(--color-fuchsia-200);
  }
  .text-fuchsia-200\! {
    color: var(--color-fuchsia-200) !important;
  }
  .text-fuchsia-300 {
    color: var(--color-fuchsia-300);
  }
  .text-fuchsia-300\! {
    color: var(--color-fuchsia-300) !important;
  }
  .text-fuchsia-400 {
    color: var(--color-fuchsia-400);
  }
  .text-fuchsia-400\! {
    color: var(--color-fuchsia-400) !important;
  }
  .text-fuchsia-500 {
    color: var(--color-fuchsia-500);
  }
  .text-fuchsia-500\! {
    color: var(--color-fuchsia-500) !important;
  }
  .text-fuchsia-600 {
    color: var(--color-fuchsia-600);
  }
  .text-fuchsia-600\! {
    color: var(--color-fuchsia-600) !important;
  }
  .text-fuchsia-700 {
    color: var(--color-fuchsia-700);
  }
  .text-fuchsia-700\! {
    color: var(--color-fuchsia-700) !important;
  }
  .text-fuchsia-800 {
    color: var(--color-fuchsia-800);
  }
  .text-fuchsia-800\! {
    color: var(--color-fuchsia-800) !important;
  }
  .text-fuchsia-900 {
    color: var(--color-fuchsia-900);
  }
  .text-fuchsia-900\! {
    color: var(--color-fuchsia-900) !important;
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-100\! {
    color: var(--color-gray-100) !important;
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-200\! {
    color: var(--color-gray-200) !important;
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-300\! {
    color: var(--color-gray-300) !important;
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-400\! {
    color: var(--color-gray-400) !important;
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-500\! {
    color: var(--color-gray-500) !important;
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-600\! {
    color: var(--color-gray-600) !important;
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-700\! {
    color: var(--color-gray-700) !important;
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-800\! {
    color: var(--color-gray-800) !important;
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-gray-900\! {
    color: var(--color-gray-900) !important;
  }
  .text-green-100 {
    color: var(--color-green-100);
  }
  .text-green-100\! {
    color: var(--color-green-100) !important;
  }
  .text-green-200 {
    color: var(--color-green-200);
  }
  .text-green-200\! {
    color: var(--color-green-200) !important;
  }
  .text-green-300 {
    color: var(--color-green-300);
  }
  .text-green-300\! {
    color: var(--color-green-300) !important;
  }
  .text-green-400 {
    color: var(--color-green-400);
  }
  .text-green-400\! {
    color: var(--color-green-400) !important;
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-green-500\! {
    color: var(--color-green-500) !important;
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-green-600\! {
    color: var(--color-green-600) !important;
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-green-700\! {
    color: var(--color-green-700) !important;
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-green-800\! {
    color: var(--color-green-800) !important;
  }
  .text-green-900 {
    color: var(--color-green-900);
  }
  .text-green-900\! {
    color: var(--color-green-900) !important;
  }
  .text-indigo-100 {
    color: var(--color-indigo-100);
  }
  .text-indigo-100\! {
    color: var(--color-indigo-100) !important;
  }
  .text-indigo-200 {
    color: var(--color-indigo-200);
  }
  .text-indigo-200\! {
    color: var(--color-indigo-200) !important;
  }
  .text-indigo-300 {
    color: var(--color-indigo-300);
  }
  .text-indigo-300\! {
    color: var(--color-indigo-300) !important;
  }
  .text-indigo-400 {
    color: var(--color-indigo-400);
  }
  .text-indigo-400\! {
    color: var(--color-indigo-400) !important;
  }
  .text-indigo-500 {
    color: var(--color-indigo-500);
  }
  .text-indigo-500\! {
    color: var(--color-indigo-500) !important;
  }
  .text-indigo-600 {
    color: var(--color-indigo-600);
  }
  .text-indigo-600\! {
    color: var(--color-indigo-600) !important;
  }
  .text-indigo-700 {
    color: var(--color-indigo-700);
  }
  .text-indigo-700\! {
    color: var(--color-indigo-700) !important;
  }
  .text-indigo-800 {
    color: var(--color-indigo-800);
  }
  .text-indigo-800\! {
    color: var(--color-indigo-800) !important;
  }
  .text-indigo-900 {
    color: var(--color-indigo-900);
  }
  .text-indigo-900\! {
    color: var(--color-indigo-900) !important;
  }
  .text-lime-100 {
    color: var(--color-lime-100);
  }
  .text-lime-100\! {
    color: var(--color-lime-100) !important;
  }
  .text-lime-200 {
    color: var(--color-lime-200);
  }
  .text-lime-200\! {
    color: var(--color-lime-200) !important;
  }
  .text-lime-300 {
    color: var(--color-lime-300);
  }
  .text-lime-300\! {
    color: var(--color-lime-300) !important;
  }
  .text-lime-400 {
    color: var(--color-lime-400);
  }
  .text-lime-400\! {
    color: var(--color-lime-400) !important;
  }
  .text-lime-500 {
    color: var(--color-lime-500);
  }
  .text-lime-500\! {
    color: var(--color-lime-500) !important;
  }
  .text-lime-600 {
    color: var(--color-lime-600);
  }
  .text-lime-600\! {
    color: var(--color-lime-600) !important;
  }
  .text-lime-700 {
    color: var(--color-lime-700);
  }
  .text-lime-700\! {
    color: var(--color-lime-700) !important;
  }
  .text-lime-800 {
    color: var(--color-lime-800);
  }
  .text-lime-800\! {
    color: var(--color-lime-800) !important;
  }
  .text-lime-900 {
    color: var(--color-lime-900);
  }
  .text-lime-900\! {
    color: var(--color-lime-900) !important;
  }
  .text-neutral-100 {
    color: var(--color-neutral-100);
  }
  .text-neutral-100\! {
    color: var(--color-neutral-100) !important;
  }
  .text-neutral-200 {
    color: var(--color-neutral-200);
  }
  .text-neutral-200\! {
    color: var(--color-neutral-200) !important;
  }
  .text-neutral-300 {
    color: var(--color-neutral-300);
  }
  .text-neutral-300\! {
    color: var(--color-neutral-300) !important;
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-400\! {
    color: var(--color-neutral-400) !important;
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-500\! {
    color: var(--color-neutral-500) !important;
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-600\! {
    color: var(--color-neutral-600) !important;
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-700\! {
    color: var(--color-neutral-700) !important;
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-neutral-800\! {
    color: var(--color-neutral-800) !important;
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-neutral-900\! {
    color: var(--color-neutral-900) !important;
  }
  .text-orange-100 {
    color: var(--color-orange-100);
  }
  .text-orange-100\! {
    color: var(--color-orange-100) !important;
  }
  .text-orange-200 {
    color: var(--color-orange-200);
  }
  .text-orange-200\! {
    color: var(--color-orange-200) !important;
  }
  .text-orange-300 {
    color: var(--color-orange-300);
  }
  .text-orange-300\! {
    color: var(--color-orange-300) !important;
  }
  .text-orange-400 {
    color: var(--color-orange-400);
  }
  .text-orange-400\! {
    color: var(--color-orange-400) !important;
  }
  .text-orange-500 {
    color: var(--color-orange-500);
  }
  .text-orange-500\! {
    color: var(--color-orange-500) !important;
  }
  .text-orange-600 {
    color: var(--color-orange-600);
  }
  .text-orange-600\! {
    color: var(--color-orange-600) !important;
  }
  .text-orange-700 {
    color: var(--color-orange-700);
  }
  .text-orange-700\! {
    color: var(--color-orange-700) !important;
  }
  .text-orange-800 {
    color: var(--color-orange-800);
  }
  .text-orange-800\! {
    color: var(--color-orange-800) !important;
  }
  .text-orange-900 {
    color: var(--color-orange-900);
  }
  .text-orange-900\! {
    color: var(--color-orange-900) !important;
  }
  .text-pink-100 {
    color: var(--color-pink-100);
  }
  .text-pink-100\! {
    color: var(--color-pink-100) !important;
  }
  .text-pink-200 {
    color: var(--color-pink-200);
  }
  .text-pink-200\! {
    color: var(--color-pink-200) !important;
  }
  .text-pink-300 {
    color: var(--color-pink-300);
  }
  .text-pink-300\! {
    color: var(--color-pink-300) !important;
  }
  .text-pink-400 {
    color: var(--color-pink-400);
  }
  .text-pink-400\! {
    color: var(--color-pink-400) !important;
  }
  .text-pink-500 {
    color: var(--color-pink-500);
  }
  .text-pink-500\! {
    color: var(--color-pink-500) !important;
  }
  .text-pink-600 {
    color: var(--color-pink-600);
  }
  .text-pink-600\! {
    color: var(--color-pink-600) !important;
  }
  .text-pink-700 {
    color: var(--color-pink-700);
  }
  .text-pink-700\! {
    color: var(--color-pink-700) !important;
  }
  .text-pink-800 {
    color: var(--color-pink-800);
  }
  .text-pink-800\! {
    color: var(--color-pink-800) !important;
  }
  .text-pink-900 {
    color: var(--color-pink-900);
  }
  .text-pink-900\! {
    color: var(--color-pink-900) !important;
  }
  .text-purple-100 {
    color: var(--color-purple-100);
  }
  .text-purple-100\! {
    color: var(--color-purple-100) !important;
  }
  .text-purple-200 {
    color: var(--color-purple-200);
  }
  .text-purple-200\! {
    color: var(--color-purple-200) !important;
  }
  .text-purple-300 {
    color: var(--color-purple-300);
  }
  .text-purple-300\! {
    color: var(--color-purple-300) !important;
  }
  .text-purple-400 {
    color: var(--color-purple-400);
  }
  .text-purple-400\! {
    color: var(--color-purple-400) !important;
  }
  .text-purple-500 {
    color: var(--color-purple-500);
  }
  .text-purple-500\! {
    color: var(--color-purple-500) !important;
  }
  .text-purple-600 {
    color: var(--color-purple-600);
  }
  .text-purple-600\! {
    color: var(--color-purple-600) !important;
  }
  .text-purple-700 {
    color: var(--color-purple-700);
  }
  .text-purple-700\! {
    color: var(--color-purple-700) !important;
  }
  .text-purple-800 {
    color: var(--color-purple-800);
  }
  .text-purple-800\! {
    color: var(--color-purple-800) !important;
  }
  .text-purple-900 {
    color: var(--color-purple-900);
  }
  .text-purple-900\! {
    color: var(--color-purple-900) !important;
  }
  .text-red-100 {
    color: var(--color-red-100);
  }
  .text-red-100\! {
    color: var(--color-red-100) !important;
  }
  .text-red-200 {
    color: var(--color-red-200);
  }
  .text-red-200\! {
    color: var(--color-red-200) !important;
  }
  .text-red-300 {
    color: var(--color-red-300);
  }
  .text-red-300\! {
    color: var(--color-red-300) !important;
  }
  .text-red-400 {
    color: var(--color-red-400);
  }
  .text-red-400\! {
    color: var(--color-red-400) !important;
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-500\! {
    color: var(--color-red-500) !important;
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-600\! {
    color: var(--color-red-600) !important;
  }
  .text-red-700 {
    color: var(--color-red-700);
  }
  .text-red-700\! {
    color: var(--color-red-700) !important;
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-red-800\! {
    color: var(--color-red-800) !important;
  }
  .text-red-900 {
    color: var(--color-red-900);
  }
  .text-red-900\! {
    color: var(--color-red-900) !important;
  }
  .text-rose-100 {
    color: var(--color-rose-100);
  }
  .text-rose-100\! {
    color: var(--color-rose-100) !important;
  }
  .text-rose-200 {
    color: var(--color-rose-200);
  }
  .text-rose-200\! {
    color: var(--color-rose-200) !important;
  }
  .text-rose-300 {
    color: var(--color-rose-300);
  }
  .text-rose-300\! {
    color: var(--color-rose-300) !important;
  }
  .text-rose-400 {
    color: var(--color-rose-400);
  }
  .text-rose-400\! {
    color: var(--color-rose-400) !important;
  }
  .text-rose-500 {
    color: var(--color-rose-500);
  }
  .text-rose-500\! {
    color: var(--color-rose-500) !important;
  }
  .text-rose-600 {
    color: var(--color-rose-600);
  }
  .text-rose-600\! {
    color: var(--color-rose-600) !important;
  }
  .text-rose-700 {
    color: var(--color-rose-700);
  }
  .text-rose-700\! {
    color: var(--color-rose-700) !important;
  }
  .text-rose-800 {
    color: var(--color-rose-800);
  }
  .text-rose-800\! {
    color: var(--color-rose-800) !important;
  }
  .text-rose-900 {
    color: var(--color-rose-900);
  }
  .text-rose-900\! {
    color: var(--color-rose-900) !important;
  }
  .text-sky-100 {
    color: var(--color-sky-100);
  }
  .text-sky-100\! {
    color: var(--color-sky-100) !important;
  }
  .text-sky-200 {
    color: var(--color-sky-200);
  }
  .text-sky-200\! {
    color: var(--color-sky-200) !important;
  }
  .text-sky-300 {
    color: var(--color-sky-300);
  }
  .text-sky-300\! {
    color: var(--color-sky-300) !important;
  }
  .text-sky-400 {
    color: var(--color-sky-400);
  }
  .text-sky-400\! {
    color: var(--color-sky-400) !important;
  }
  .text-sky-500 {
    color: var(--color-sky-500);
  }
  .text-sky-500\! {
    color: var(--color-sky-500) !important;
  }
  .text-sky-600 {
    color: var(--color-sky-600);
  }
  .text-sky-600\! {
    color: var(--color-sky-600) !important;
  }
  .text-sky-700 {
    color: var(--color-sky-700);
  }
  .text-sky-700\! {
    color: var(--color-sky-700) !important;
  }
  .text-sky-800 {
    color: var(--color-sky-800);
  }
  .text-sky-800\! {
    color: var(--color-sky-800) !important;
  }
  .text-sky-900 {
    color: var(--color-sky-900);
  }
  .text-sky-900\! {
    color: var(--color-sky-900) !important;
  }
  .text-slate-100 {
    color: var(--color-slate-100);
  }
  .text-slate-100\! {
    color: var(--color-slate-100) !important;
  }
  .text-slate-200 {
    color: var(--color-slate-200);
  }
  .text-slate-200\! {
    color: var(--color-slate-200) !important;
  }
  .text-slate-300 {
    color: var(--color-slate-300);
  }
  .text-slate-300\! {
    color: var(--color-slate-300) !important;
  }
  .text-slate-400 {
    color: var(--color-slate-400);
  }
  .text-slate-400\! {
    color: var(--color-slate-400) !important;
  }
  .text-slate-500 {
    color: var(--color-slate-500);
  }
  .text-slate-500\! {
    color: var(--color-slate-500) !important;
  }
  .text-slate-600 {
    color: var(--color-slate-600);
  }
  .text-slate-600\! {
    color: var(--color-slate-600) !important;
  }
  .text-slate-700 {
    color: var(--color-slate-700);
  }
  .text-slate-700\! {
    color: var(--color-slate-700) !important;
  }
  .text-slate-800 {
    color: var(--color-slate-800);
  }
  .text-slate-800\! {
    color: var(--color-slate-800) !important;
  }
  .text-slate-900 {
    color: var(--color-slate-900);
  }
  .text-slate-900\! {
    color: var(--color-slate-900) !important;
  }
  .text-stone-100 {
    color: var(--color-stone-100);
  }
  .text-stone-100\! {
    color: var(--color-stone-100) !important;
  }
  .text-stone-200 {
    color: var(--color-stone-200);
  }
  .text-stone-200\! {
    color: var(--color-stone-200) !important;
  }
  .text-stone-300 {
    color: var(--color-stone-300);
  }
  .text-stone-300\! {
    color: var(--color-stone-300) !important;
  }
  .text-stone-400 {
    color: var(--color-stone-400);
  }
  .text-stone-400\! {
    color: var(--color-stone-400) !important;
  }
  .text-stone-500 {
    color: var(--color-stone-500);
  }
  .text-stone-500\! {
    color: var(--color-stone-500) !important;
  }
  .text-stone-600 {
    color: var(--color-stone-600);
  }
  .text-stone-600\! {
    color: var(--color-stone-600) !important;
  }
  .text-stone-700 {
    color: var(--color-stone-700);
  }
  .text-stone-700\! {
    color: var(--color-stone-700) !important;
  }
  .text-stone-800 {
    color: var(--color-stone-800);
  }
  .text-stone-800\! {
    color: var(--color-stone-800) !important;
  }
  .text-stone-900 {
    color: var(--color-stone-900);
  }
  .text-stone-900\! {
    color: var(--color-stone-900) !important;
  }
  .text-teal-100 {
    color: var(--color-teal-100);
  }
  .text-teal-100\! {
    color: var(--color-teal-100) !important;
  }
  .text-teal-200 {
    color: var(--color-teal-200);
  }
  .text-teal-200\! {
    color: var(--color-teal-200) !important;
  }
  .text-teal-300 {
    color: var(--color-teal-300);
  }
  .text-teal-300\! {
    color: var(--color-teal-300) !important;
  }
  .text-teal-400 {
    color: var(--color-teal-400);
  }
  .text-teal-400\! {
    color: var(--color-teal-400) !important;
  }
  .text-teal-500 {
    color: var(--color-teal-500);
  }
  .text-teal-500\! {
    color: var(--color-teal-500) !important;
  }
  .text-teal-600 {
    color: var(--color-teal-600);
  }
  .text-teal-600\! {
    color: var(--color-teal-600) !important;
  }
  .text-teal-700 {
    color: var(--color-teal-700);
  }
  .text-teal-700\! {
    color: var(--color-teal-700) !important;
  }
  .text-teal-800 {
    color: var(--color-teal-800);
  }
  .text-teal-800\! {
    color: var(--color-teal-800) !important;
  }
  .text-teal-900 {
    color: var(--color-teal-900);
  }
  .text-teal-900\! {
    color: var(--color-teal-900) !important;
  }
  .text-violet-100 {
    color: var(--color-violet-100);
  }
  .text-violet-100\! {
    color: var(--color-violet-100) !important;
  }
  .text-violet-200 {
    color: var(--color-violet-200);
  }
  .text-violet-200\! {
    color: var(--color-violet-200) !important;
  }
  .text-violet-300 {
    color: var(--color-violet-300);
  }
  .text-violet-300\! {
    color: var(--color-violet-300) !important;
  }
  .text-violet-400 {
    color: var(--color-violet-400);
  }
  .text-violet-400\! {
    color: var(--color-violet-400) !important;
  }
  .text-violet-500 {
    color: var(--color-violet-500);
  }
  .text-violet-500\! {
    color: var(--color-violet-500) !important;
  }
  .text-violet-600 {
    color: var(--color-violet-600);
  }
  .text-violet-600\! {
    color: var(--color-violet-600) !important;
  }
  .text-violet-700 {
    color: var(--color-violet-700);
  }
  .text-violet-700\! {
    color: var(--color-violet-700) !important;
  }
  .text-violet-800 {
    color: var(--color-violet-800);
  }
  .text-violet-800\! {
    color: var(--color-violet-800) !important;
  }
  .text-violet-900 {
    color: var(--color-violet-900);
  }
  .text-violet-900\! {
    color: var(--color-violet-900) !important;
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\! {
    color: var(--color-white) !important;
  }
  .text-yellow-100 {
    color: var(--color-yellow-100);
  }
  .text-yellow-100\! {
    color: var(--color-yellow-100) !important;
  }
  .text-yellow-200 {
    color: var(--color-yellow-200);
  }
  .text-yellow-200\! {
    color: var(--color-yellow-200) !important;
  }
  .text-yellow-300 {
    color: var(--color-yellow-300);
  }
  .text-yellow-300\! {
    color: var(--color-yellow-300) !important;
  }
  .text-yellow-400 {
    color: var(--color-yellow-400);
  }
  .text-yellow-400\! {
    color: var(--color-yellow-400) !important;
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .text-yellow-500\! {
    color: var(--color-yellow-500) !important;
  }
  .text-yellow-600 {
    color: var(--color-yellow-600);
  }
  .text-yellow-600\! {
    color: var(--color-yellow-600) !important;
  }
  .text-yellow-700 {
    color: var(--color-yellow-700);
  }
  .text-yellow-700\! {
    color: var(--color-yellow-700) !important;
  }
  .text-yellow-800 {
    color: var(--color-yellow-800);
  }
  .text-yellow-800\! {
    color: var(--color-yellow-800) !important;
  }
  .text-yellow-900 {
    color: var(--color-yellow-900);
  }
  .text-yellow-900\! {
    color: var(--color-yellow-900) !important;
  }
  .text-zinc-100 {
    color: var(--color-zinc-100);
  }
  .text-zinc-100\! {
    color: var(--color-zinc-100) !important;
  }
  .text-zinc-200 {
    color: var(--color-zinc-200);
  }
  .text-zinc-200\! {
    color: var(--color-zinc-200) !important;
  }
  .text-zinc-300 {
    color: var(--color-zinc-300);
  }
  .text-zinc-300\! {
    color: var(--color-zinc-300) !important;
  }
  .text-zinc-400 {
    color: var(--color-zinc-400);
  }
  .text-zinc-400\! {
    color: var(--color-zinc-400) !important;
  }
  .text-zinc-500 {
    color: var(--color-zinc-500);
  }
  .text-zinc-500\! {
    color: var(--color-zinc-500) !important;
  }
  .text-zinc-600 {
    color: var(--color-zinc-600);
  }
  .text-zinc-600\! {
    color: var(--color-zinc-600) !important;
  }
  .text-zinc-700 {
    color: var(--color-zinc-700);
  }
  .text-zinc-700\! {
    color: var(--color-zinc-700) !important;
  }
  .text-zinc-800 {
    color: var(--color-zinc-800);
  }
  .text-zinc-800\! {
    color: var(--color-zinc-800) !important;
  }
  .text-zinc-900 {
    color: var(--color-zinc-900);
  }
  .text-zinc-900\! {
    color: var(--color-zinc-900) !important;
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .normal-case {
    text-transform: none;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .btn-link {
    text-decoration-line: underline;
    outline-color: currentColor;
    --btn-border: #0000;
    --btn-bg: #0000;
    --btn-fg: var(--color-primary);
    --btn-noise: none;
    --btn-shadow: "";
    &:is(.btn-active, :hover, :active:focus, :focus-visible) {
      text-decoration-line: underline;
      --btn-border: #0000;
      --btn-bg: #0000;
    }
    @media (hover: none) {
      &:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
        text-decoration-line: none;
      }
    }
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-25 {
    opacity: 25%;
  }
  .opacity-75 {
    opacity: 75%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-\[0\.5\] {
    opacity: 0.5;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0px_0px_10px_0px\] {
    --tw-shadow: 0px 0px 10px 0px var(--tw-shadow-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0px_0px_10px_0px_\] {
    --tw-shadow: 0px 0px 10px 0px var(--tw-shadow-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\(color\:--shadowColor\) {
    --tw-shadow-color: var(--shadowColor);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--shadowColor) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-gray-200 {
    --tw-shadow-color: oklch(92.8% 0.006 264.531);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-gray-200) var(--tw-shadow-alpha), transparent);
    }
  }
  .btn-ghost {
    &:not(.btn-active, :hover, :active:focus, :focus-visible) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-border: #0000;
      --btn-noise: none;
      &:not(:disabled, [disabled], .btn-disabled) {
        outline-color: currentColor;
        --btn-fg: currentColor;
      }
    }
    @media (hover: none) {
      &:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
        --btn-shadow: "";
        --btn-bg: #0000;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: currentColor;
      }
    }
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .btn-outline {
    &:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
    }
    @media (hover: none) {
      &:hover:not( .btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
        --btn-shadow: "";
        --btn-bg: #0000;
        --btn-fg: var(--btn-color);
        --btn-border: var(--btn-color);
        --btn-noise: none;
      }
    }
  }
  .btn-sm {
    --fontsize: 0.75rem;
    --btn-p: 0.75rem;
    --size: calc(var(--size-field, 0.25rem) * 8);
  }
  .btn-xs {
    --fontsize: 0.6875rem;
    --btn-p: 0.5rem;
    --size: calc(var(--size-field, 0.25rem) * 6);
  }
  .btn-accent {
    --btn-color: var(--color-accent);
    --btn-fg: var(--color-accent-content);
  }
  .btn-error {
    --btn-color: var(--color-error);
    --btn-fg: var(--color-error-content);
  }
  .btn-info {
    --btn-color: var(--color-info);
    --btn-fg: var(--color-info-content);
  }
  .btn-neutral {
    --btn-color: var(--color-neutral);
    --btn-fg: var(--color-neutral-content);
  }
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }
  .btn-secondary {
    --btn-color: var(--color-secondary);
    --btn-fg: var(--color-secondary-content);
  }
  .btn-success {
    --btn-color: var(--color-success);
    --btn-fg: var(--color-success-content);
  }
  .btn-warning {
    --btn-color: var(--color-warning);
    --btn-fg: var(--color-warning-content);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .backface-hidden {
    backface-visibility: hidden;
  }
  .input-error {
    &, &:focus, &:focus-within {
      --input-color: var(--color-error);
    }
  }
  .select-error {
    &, &:focus, &:focus-within {
      --input-color: var(--color-error);
    }
  }
  .textarea-error {
    &, &:focus, &:focus-within {
      --input-color: var(--color-error);
    }
  }
  .toggle-success {
    &:checked, &[aria-checked="true"] {
      --input-color: var(--color-success);
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .peer-hover\:w-1\/2 {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        width: calc(1/2 * 100%);
      }
    }
  }
  .peer-hover\:min-w-\[500px\] {
    &:is(:where(.peer):hover ~ *) {
      @media (hover: hover) {
        min-width: 500px;
      }
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .before\:content-none {
    &::before {
      content: var(--tw-content);
      --tw-content: none;
      content: none;
    }
  }
  .after\:bg-white {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .hover\:cursor-pointer {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .hover\:rounded-none {
    &:hover {
      @media (hover: hover) {
        border-radius: 0;
      }
    }
  }
  .hover\:\!border-red-700 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-700) !important;
      }
    }
  }
  .hover\:\!bg-red-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-700) !important;
      }
    }
  }
  .hover\:bg-amber-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-100);
      }
    }
  }
  .hover\:bg-amber-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-100) !important;
      }
    }
  }
  .hover\:bg-amber-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-200);
      }
    }
  }
  .hover\:bg-amber-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-200) !important;
      }
    }
  }
  .hover\:bg-amber-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-300);
      }
    }
  }
  .hover\:bg-amber-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-300) !important;
      }
    }
  }
  .hover\:bg-amber-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-400);
      }
    }
  }
  .hover\:bg-amber-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-400) !important;
      }
    }
  }
  .hover\:bg-amber-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-500);
      }
    }
  }
  .hover\:bg-amber-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-500) !important;
      }
    }
  }
  .hover\:bg-amber-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-600);
      }
    }
  }
  .hover\:bg-amber-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-600) !important;
      }
    }
  }
  .hover\:bg-amber-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-700);
      }
    }
  }
  .hover\:bg-amber-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-700) !important;
      }
    }
  }
  .hover\:bg-amber-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-800);
      }
    }
  }
  .hover\:bg-amber-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-800) !important;
      }
    }
  }
  .hover\:bg-amber-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-900);
      }
    }
  }
  .hover\:bg-amber-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-900) !important;
      }
    }
  }
  .hover\:bg-black {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-black);
      }
    }
  }
  .hover\:bg-black\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-black) !important;
      }
    }
  }
  .hover\:bg-blue-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-100);
      }
    }
  }
  .hover\:bg-blue-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-100) !important;
      }
    }
  }
  .hover\:bg-blue-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-200);
      }
    }
  }
  .hover\:bg-blue-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-200) !important;
      }
    }
  }
  .hover\:bg-blue-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-300);
      }
    }
  }
  .hover\:bg-blue-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-300) !important;
      }
    }
  }
  .hover\:bg-blue-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-400);
      }
    }
  }
  .hover\:bg-blue-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-400) !important;
      }
    }
  }
  .hover\:bg-blue-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-500);
      }
    }
  }
  .hover\:bg-blue-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-500) !important;
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-blue-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600) !important;
      }
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-blue-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700) !important;
      }
    }
  }
  .hover\:bg-blue-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-800);
      }
    }
  }
  .hover\:bg-blue-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-800) !important;
      }
    }
  }
  .hover\:bg-blue-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-900);
      }
    }
  }
  .hover\:bg-blue-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-900) !important;
      }
    }
  }
  .hover\:bg-cyan-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-100);
      }
    }
  }
  .hover\:bg-cyan-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-100) !important;
      }
    }
  }
  .hover\:bg-cyan-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-200);
      }
    }
  }
  .hover\:bg-cyan-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-200) !important;
      }
    }
  }
  .hover\:bg-cyan-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-300);
      }
    }
  }
  .hover\:bg-cyan-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-300) !important;
      }
    }
  }
  .hover\:bg-cyan-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-400);
      }
    }
  }
  .hover\:bg-cyan-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-400) !important;
      }
    }
  }
  .hover\:bg-cyan-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-500);
      }
    }
  }
  .hover\:bg-cyan-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-500) !important;
      }
    }
  }
  .hover\:bg-cyan-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-600);
      }
    }
  }
  .hover\:bg-cyan-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-600) !important;
      }
    }
  }
  .hover\:bg-cyan-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-700);
      }
    }
  }
  .hover\:bg-cyan-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-700) !important;
      }
    }
  }
  .hover\:bg-cyan-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-800);
      }
    }
  }
  .hover\:bg-cyan-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-800) !important;
      }
    }
  }
  .hover\:bg-cyan-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-900);
      }
    }
  }
  .hover\:bg-cyan-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-cyan-900) !important;
      }
    }
  }
  .hover\:bg-dev-remove {
    &:hover {
      @media (hover: hover) {
        background-color: var(--dev-color-remove);
      }
    }
  }
  .hover\:bg-emerald-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-100);
      }
    }
  }
  .hover\:bg-emerald-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-100) !important;
      }
    }
  }
  .hover\:bg-emerald-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-200);
      }
    }
  }
  .hover\:bg-emerald-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-200) !important;
      }
    }
  }
  .hover\:bg-emerald-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-300);
      }
    }
  }
  .hover\:bg-emerald-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-300) !important;
      }
    }
  }
  .hover\:bg-emerald-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-400);
      }
    }
  }
  .hover\:bg-emerald-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-400) !important;
      }
    }
  }
  .hover\:bg-emerald-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-500);
      }
    }
  }
  .hover\:bg-emerald-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-500) !important;
      }
    }
  }
  .hover\:bg-emerald-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-600);
      }
    }
  }
  .hover\:bg-emerald-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-600) !important;
      }
    }
  }
  .hover\:bg-emerald-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-700);
      }
    }
  }
  .hover\:bg-emerald-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-700) !important;
      }
    }
  }
  .hover\:bg-emerald-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-800);
      }
    }
  }
  .hover\:bg-emerald-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-800) !important;
      }
    }
  }
  .hover\:bg-emerald-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-900);
      }
    }
  }
  .hover\:bg-emerald-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-emerald-900) !important;
      }
    }
  }
  .hover\:bg-fuchsia-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-100);
      }
    }
  }
  .hover\:bg-fuchsia-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-100) !important;
      }
    }
  }
  .hover\:bg-fuchsia-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-200);
      }
    }
  }
  .hover\:bg-fuchsia-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-200) !important;
      }
    }
  }
  .hover\:bg-fuchsia-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-300);
      }
    }
  }
  .hover\:bg-fuchsia-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-300) !important;
      }
    }
  }
  .hover\:bg-fuchsia-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-400);
      }
    }
  }
  .hover\:bg-fuchsia-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-400) !important;
      }
    }
  }
  .hover\:bg-fuchsia-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-500);
      }
    }
  }
  .hover\:bg-fuchsia-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-500) !important;
      }
    }
  }
  .hover\:bg-fuchsia-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-600);
      }
    }
  }
  .hover\:bg-fuchsia-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-600) !important;
      }
    }
  }
  .hover\:bg-fuchsia-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-700);
      }
    }
  }
  .hover\:bg-fuchsia-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-700) !important;
      }
    }
  }
  .hover\:bg-fuchsia-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-800);
      }
    }
  }
  .hover\:bg-fuchsia-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-800) !important;
      }
    }
  }
  .hover\:bg-fuchsia-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-900);
      }
    }
  }
  .hover\:bg-fuchsia-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-fuchsia-900) !important;
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100) !important;
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-gray-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200) !important;
      }
    }
  }
  .hover\:bg-gray-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-300);
      }
    }
  }
  .hover\:bg-gray-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-300) !important;
      }
    }
  }
  .hover\:bg-gray-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-400);
      }
    }
  }
  .hover\:bg-gray-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-400) !important;
      }
    }
  }
  .hover\:bg-gray-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-500);
      }
    }
  }
  .hover\:bg-gray-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-500) !important;
      }
    }
  }
  .hover\:bg-gray-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-600);
      }
    }
  }
  .hover\:bg-gray-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-600) !important;
      }
    }
  }
  .hover\:bg-gray-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-700);
      }
    }
  }
  .hover\:bg-gray-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-700) !important;
      }
    }
  }
  .hover\:bg-gray-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-800);
      }
    }
  }
  .hover\:bg-gray-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-800) !important;
      }
    }
  }
  .hover\:bg-gray-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-900);
      }
    }
  }
  .hover\:bg-gray-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-900) !important;
      }
    }
  }
  .hover\:bg-green-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-100);
      }
    }
  }
  .hover\:bg-green-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-100) !important;
      }
    }
  }
  .hover\:bg-green-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-200);
      }
    }
  }
  .hover\:bg-green-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-200) !important;
      }
    }
  }
  .hover\:bg-green-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-300);
      }
    }
  }
  .hover\:bg-green-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-300) !important;
      }
    }
  }
  .hover\:bg-green-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-400);
      }
    }
  }
  .hover\:bg-green-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-400) !important;
      }
    }
  }
  .hover\:bg-green-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-500);
      }
    }
  }
  .hover\:bg-green-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-500) !important;
      }
    }
  }
  .hover\:bg-green-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-600);
      }
    }
  }
  .hover\:bg-green-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-600) !important;
      }
    }
  }
  .hover\:bg-green-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-700);
      }
    }
  }
  .hover\:bg-green-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-700) !important;
      }
    }
  }
  .hover\:bg-green-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-800);
      }
    }
  }
  .hover\:bg-green-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-800) !important;
      }
    }
  }
  .hover\:bg-green-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-900);
      }
    }
  }
  .hover\:bg-green-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-green-900) !important;
      }
    }
  }
  .hover\:bg-indigo-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-100);
      }
    }
  }
  .hover\:bg-indigo-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-100) !important;
      }
    }
  }
  .hover\:bg-indigo-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-200);
      }
    }
  }
  .hover\:bg-indigo-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-200) !important;
      }
    }
  }
  .hover\:bg-indigo-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-300);
      }
    }
  }
  .hover\:bg-indigo-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-300) !important;
      }
    }
  }
  .hover\:bg-indigo-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-400);
      }
    }
  }
  .hover\:bg-indigo-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-400) !important;
      }
    }
  }
  .hover\:bg-indigo-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-500);
      }
    }
  }
  .hover\:bg-indigo-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-500) !important;
      }
    }
  }
  .hover\:bg-indigo-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-600);
      }
    }
  }
  .hover\:bg-indigo-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-600) !important;
      }
    }
  }
  .hover\:bg-indigo-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-700);
      }
    }
  }
  .hover\:bg-indigo-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-700) !important;
      }
    }
  }
  .hover\:bg-indigo-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-800);
      }
    }
  }
  .hover\:bg-indigo-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-800) !important;
      }
    }
  }
  .hover\:bg-indigo-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-900);
      }
    }
  }
  .hover\:bg-indigo-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-900) !important;
      }
    }
  }
  .hover\:bg-lime-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-100);
      }
    }
  }
  .hover\:bg-lime-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-100) !important;
      }
    }
  }
  .hover\:bg-lime-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-200);
      }
    }
  }
  .hover\:bg-lime-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-200) !important;
      }
    }
  }
  .hover\:bg-lime-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-300);
      }
    }
  }
  .hover\:bg-lime-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-300) !important;
      }
    }
  }
  .hover\:bg-lime-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-400);
      }
    }
  }
  .hover\:bg-lime-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-400) !important;
      }
    }
  }
  .hover\:bg-lime-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-500);
      }
    }
  }
  .hover\:bg-lime-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-500) !important;
      }
    }
  }
  .hover\:bg-lime-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-600);
      }
    }
  }
  .hover\:bg-lime-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-600) !important;
      }
    }
  }
  .hover\:bg-lime-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-700);
      }
    }
  }
  .hover\:bg-lime-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-700) !important;
      }
    }
  }
  .hover\:bg-lime-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-800);
      }
    }
  }
  .hover\:bg-lime-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-800) !important;
      }
    }
  }
  .hover\:bg-lime-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-900);
      }
    }
  }
  .hover\:bg-lime-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-lime-900) !important;
      }
    }
  }
  .hover\:bg-neutral-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-100);
      }
    }
  }
  .hover\:bg-neutral-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-100) !important;
      }
    }
  }
  .hover\:bg-neutral-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-200);
      }
    }
  }
  .hover\:bg-neutral-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-200) !important;
      }
    }
  }
  .hover\:bg-neutral-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-300);
      }
    }
  }
  .hover\:bg-neutral-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-300) !important;
      }
    }
  }
  .hover\:bg-neutral-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-400);
      }
    }
  }
  .hover\:bg-neutral-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-400) !important;
      }
    }
  }
  .hover\:bg-neutral-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-500);
      }
    }
  }
  .hover\:bg-neutral-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-500) !important;
      }
    }
  }
  .hover\:bg-neutral-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-600);
      }
    }
  }
  .hover\:bg-neutral-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-600) !important;
      }
    }
  }
  .hover\:bg-neutral-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-700);
      }
    }
  }
  .hover\:bg-neutral-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-700) !important;
      }
    }
  }
  .hover\:bg-neutral-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .hover\:bg-neutral-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-800) !important;
      }
    }
  }
  .hover\:bg-neutral-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-900);
      }
    }
  }
  .hover\:bg-neutral-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-900) !important;
      }
    }
  }
  .hover\:bg-orange-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-100);
      }
    }
  }
  .hover\:bg-orange-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-100) !important;
      }
    }
  }
  .hover\:bg-orange-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-200);
      }
    }
  }
  .hover\:bg-orange-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-200) !important;
      }
    }
  }
  .hover\:bg-orange-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-300);
      }
    }
  }
  .hover\:bg-orange-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-300) !important;
      }
    }
  }
  .hover\:bg-orange-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-400);
      }
    }
  }
  .hover\:bg-orange-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-400) !important;
      }
    }
  }
  .hover\:bg-orange-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-500);
      }
    }
  }
  .hover\:bg-orange-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-500) !important;
      }
    }
  }
  .hover\:bg-orange-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-600);
      }
    }
  }
  .hover\:bg-orange-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-600) !important;
      }
    }
  }
  .hover\:bg-orange-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-700);
      }
    }
  }
  .hover\:bg-orange-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-700) !important;
      }
    }
  }
  .hover\:bg-orange-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-800);
      }
    }
  }
  .hover\:bg-orange-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-800) !important;
      }
    }
  }
  .hover\:bg-orange-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-900);
      }
    }
  }
  .hover\:bg-orange-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-orange-900) !important;
      }
    }
  }
  .hover\:bg-pink-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-100);
      }
    }
  }
  .hover\:bg-pink-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-100) !important;
      }
    }
  }
  .hover\:bg-pink-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-200);
      }
    }
  }
  .hover\:bg-pink-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-200) !important;
      }
    }
  }
  .hover\:bg-pink-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-300);
      }
    }
  }
  .hover\:bg-pink-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-300) !important;
      }
    }
  }
  .hover\:bg-pink-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-400);
      }
    }
  }
  .hover\:bg-pink-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-400) !important;
      }
    }
  }
  .hover\:bg-pink-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-500);
      }
    }
  }
  .hover\:bg-pink-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-500) !important;
      }
    }
  }
  .hover\:bg-pink-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-600);
      }
    }
  }
  .hover\:bg-pink-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-600) !important;
      }
    }
  }
  .hover\:bg-pink-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-700);
      }
    }
  }
  .hover\:bg-pink-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-700) !important;
      }
    }
  }
  .hover\:bg-pink-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-800);
      }
    }
  }
  .hover\:bg-pink-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-800) !important;
      }
    }
  }
  .hover\:bg-pink-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-900);
      }
    }
  }
  .hover\:bg-pink-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-pink-900) !important;
      }
    }
  }
  .hover\:bg-purple-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-100);
      }
    }
  }
  .hover\:bg-purple-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-100) !important;
      }
    }
  }
  .hover\:bg-purple-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-200);
      }
    }
  }
  .hover\:bg-purple-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-200) !important;
      }
    }
  }
  .hover\:bg-purple-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-300);
      }
    }
  }
  .hover\:bg-purple-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-300) !important;
      }
    }
  }
  .hover\:bg-purple-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-400);
      }
    }
  }
  .hover\:bg-purple-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-400) !important;
      }
    }
  }
  .hover\:bg-purple-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-500);
      }
    }
  }
  .hover\:bg-purple-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-500) !important;
      }
    }
  }
  .hover\:bg-purple-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-600);
      }
    }
  }
  .hover\:bg-purple-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-600) !important;
      }
    }
  }
  .hover\:bg-purple-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-700);
      }
    }
  }
  .hover\:bg-purple-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-700) !important;
      }
    }
  }
  .hover\:bg-purple-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-800);
      }
    }
  }
  .hover\:bg-purple-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-800) !important;
      }
    }
  }
  .hover\:bg-purple-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-900);
      }
    }
  }
  .hover\:bg-purple-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-purple-900) !important;
      }
    }
  }
  .hover\:bg-red-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-100);
      }
    }
  }
  .hover\:bg-red-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-100) !important;
      }
    }
  }
  .hover\:bg-red-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-200);
      }
    }
  }
  .hover\:bg-red-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-200) !important;
      }
    }
  }
  .hover\:bg-red-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-300);
      }
    }
  }
  .hover\:bg-red-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-300) !important;
      }
    }
  }
  .hover\:bg-red-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-400);
      }
    }
  }
  .hover\:bg-red-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-400) !important;
      }
    }
  }
  .hover\:bg-red-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-500);
      }
    }
  }
  .hover\:bg-red-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-500) !important;
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:bg-red-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600) !important;
      }
    }
  }
  .hover\:bg-red-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-700);
      }
    }
  }
  .hover\:bg-red-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-700) !important;
      }
    }
  }
  .hover\:bg-red-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-800);
      }
    }
  }
  .hover\:bg-red-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-800) !important;
      }
    }
  }
  .hover\:bg-red-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-900);
      }
    }
  }
  .hover\:bg-red-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-900) !important;
      }
    }
  }
  .hover\:bg-rose-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-100);
      }
    }
  }
  .hover\:bg-rose-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-100) !important;
      }
    }
  }
  .hover\:bg-rose-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-200);
      }
    }
  }
  .hover\:bg-rose-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-200) !important;
      }
    }
  }
  .hover\:bg-rose-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-300);
      }
    }
  }
  .hover\:bg-rose-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-300) !important;
      }
    }
  }
  .hover\:bg-rose-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-400);
      }
    }
  }
  .hover\:bg-rose-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-400) !important;
      }
    }
  }
  .hover\:bg-rose-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-500);
      }
    }
  }
  .hover\:bg-rose-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-500) !important;
      }
    }
  }
  .hover\:bg-rose-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-600);
      }
    }
  }
  .hover\:bg-rose-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-600) !important;
      }
    }
  }
  .hover\:bg-rose-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-700);
      }
    }
  }
  .hover\:bg-rose-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-700) !important;
      }
    }
  }
  .hover\:bg-rose-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-800);
      }
    }
  }
  .hover\:bg-rose-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-800) !important;
      }
    }
  }
  .hover\:bg-rose-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-900);
      }
    }
  }
  .hover\:bg-rose-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-rose-900) !important;
      }
    }
  }
  .hover\:bg-sky-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-100);
      }
    }
  }
  .hover\:bg-sky-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-100) !important;
      }
    }
  }
  .hover\:bg-sky-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-200);
      }
    }
  }
  .hover\:bg-sky-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-200) !important;
      }
    }
  }
  .hover\:bg-sky-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-300);
      }
    }
  }
  .hover\:bg-sky-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-300) !important;
      }
    }
  }
  .hover\:bg-sky-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-400);
      }
    }
  }
  .hover\:bg-sky-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-400) !important;
      }
    }
  }
  .hover\:bg-sky-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-500);
      }
    }
  }
  .hover\:bg-sky-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-500) !important;
      }
    }
  }
  .hover\:bg-sky-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-600);
      }
    }
  }
  .hover\:bg-sky-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-600) !important;
      }
    }
  }
  .hover\:bg-sky-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-700);
      }
    }
  }
  .hover\:bg-sky-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-700) !important;
      }
    }
  }
  .hover\:bg-sky-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-800);
      }
    }
  }
  .hover\:bg-sky-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-800) !important;
      }
    }
  }
  .hover\:bg-sky-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-900);
      }
    }
  }
  .hover\:bg-sky-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-900) !important;
      }
    }
  }
  .hover\:bg-slate-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-100);
      }
    }
  }
  .hover\:bg-slate-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-100) !important;
      }
    }
  }
  .hover\:bg-slate-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-200);
      }
    }
  }
  .hover\:bg-slate-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-200) !important;
      }
    }
  }
  .hover\:bg-slate-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-300);
      }
    }
  }
  .hover\:bg-slate-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-300) !important;
      }
    }
  }
  .hover\:bg-slate-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-400);
      }
    }
  }
  .hover\:bg-slate-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-400) !important;
      }
    }
  }
  .hover\:bg-slate-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-500);
      }
    }
  }
  .hover\:bg-slate-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-500) !important;
      }
    }
  }
  .hover\:bg-slate-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-600);
      }
    }
  }
  .hover\:bg-slate-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-600) !important;
      }
    }
  }
  .hover\:bg-slate-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-700);
      }
    }
  }
  .hover\:bg-slate-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-700) !important;
      }
    }
  }
  .hover\:bg-slate-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-800);
      }
    }
  }
  .hover\:bg-slate-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-800) !important;
      }
    }
  }
  .hover\:bg-slate-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-900);
      }
    }
  }
  .hover\:bg-slate-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-slate-900) !important;
      }
    }
  }
  .hover\:bg-stone-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-100);
      }
    }
  }
  .hover\:bg-stone-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-100) !important;
      }
    }
  }
  .hover\:bg-stone-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-200);
      }
    }
  }
  .hover\:bg-stone-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-200) !important;
      }
    }
  }
  .hover\:bg-stone-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-300);
      }
    }
  }
  .hover\:bg-stone-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-300) !important;
      }
    }
  }
  .hover\:bg-stone-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-400);
      }
    }
  }
  .hover\:bg-stone-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-400) !important;
      }
    }
  }
  .hover\:bg-stone-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-500);
      }
    }
  }
  .hover\:bg-stone-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-500) !important;
      }
    }
  }
  .hover\:bg-stone-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-600);
      }
    }
  }
  .hover\:bg-stone-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-600) !important;
      }
    }
  }
  .hover\:bg-stone-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-700);
      }
    }
  }
  .hover\:bg-stone-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-700) !important;
      }
    }
  }
  .hover\:bg-stone-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-800);
      }
    }
  }
  .hover\:bg-stone-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-800) !important;
      }
    }
  }
  .hover\:bg-stone-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-900);
      }
    }
  }
  .hover\:bg-stone-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-900) !important;
      }
    }
  }
  .hover\:bg-teal-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-100);
      }
    }
  }
  .hover\:bg-teal-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-100) !important;
      }
    }
  }
  .hover\:bg-teal-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-200);
      }
    }
  }
  .hover\:bg-teal-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-200) !important;
      }
    }
  }
  .hover\:bg-teal-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-300);
      }
    }
  }
  .hover\:bg-teal-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-300) !important;
      }
    }
  }
  .hover\:bg-teal-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-400);
      }
    }
  }
  .hover\:bg-teal-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-400) !important;
      }
    }
  }
  .hover\:bg-teal-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-500);
      }
    }
  }
  .hover\:bg-teal-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-500) !important;
      }
    }
  }
  .hover\:bg-teal-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-600);
      }
    }
  }
  .hover\:bg-teal-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-600) !important;
      }
    }
  }
  .hover\:bg-teal-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-700);
      }
    }
  }
  .hover\:bg-teal-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-700) !important;
      }
    }
  }
  .hover\:bg-teal-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-800);
      }
    }
  }
  .hover\:bg-teal-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-800) !important;
      }
    }
  }
  .hover\:bg-teal-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-900);
      }
    }
  }
  .hover\:bg-teal-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-teal-900) !important;
      }
    }
  }
  .hover\:bg-violet-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-100);
      }
    }
  }
  .hover\:bg-violet-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-100) !important;
      }
    }
  }
  .hover\:bg-violet-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-200);
      }
    }
  }
  .hover\:bg-violet-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-200) !important;
      }
    }
  }
  .hover\:bg-violet-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-300);
      }
    }
  }
  .hover\:bg-violet-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-300) !important;
      }
    }
  }
  .hover\:bg-violet-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-400);
      }
    }
  }
  .hover\:bg-violet-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-400) !important;
      }
    }
  }
  .hover\:bg-violet-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-500);
      }
    }
  }
  .hover\:bg-violet-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-500) !important;
      }
    }
  }
  .hover\:bg-violet-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-600);
      }
    }
  }
  .hover\:bg-violet-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-600) !important;
      }
    }
  }
  .hover\:bg-violet-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-700);
      }
    }
  }
  .hover\:bg-violet-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-700) !important;
      }
    }
  }
  .hover\:bg-violet-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-800);
      }
    }
  }
  .hover\:bg-violet-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-800) !important;
      }
    }
  }
  .hover\:bg-violet-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-900);
      }
    }
  }
  .hover\:bg-violet-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-violet-900) !important;
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:bg-white\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white) !important;
      }
    }
  }
  .hover\:bg-yellow-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-100);
      }
    }
  }
  .hover\:bg-yellow-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-100) !important;
      }
    }
  }
  .hover\:bg-yellow-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-200);
      }
    }
  }
  .hover\:bg-yellow-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-200) !important;
      }
    }
  }
  .hover\:bg-yellow-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-300);
      }
    }
  }
  .hover\:bg-yellow-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-300) !important;
      }
    }
  }
  .hover\:bg-yellow-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-400);
      }
    }
  }
  .hover\:bg-yellow-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-400) !important;
      }
    }
  }
  .hover\:bg-yellow-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-500);
      }
    }
  }
  .hover\:bg-yellow-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-500) !important;
      }
    }
  }
  .hover\:bg-yellow-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-600);
      }
    }
  }
  .hover\:bg-yellow-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-600) !important;
      }
    }
  }
  .hover\:bg-yellow-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-700);
      }
    }
  }
  .hover\:bg-yellow-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-700) !important;
      }
    }
  }
  .hover\:bg-yellow-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-800);
      }
    }
  }
  .hover\:bg-yellow-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-800) !important;
      }
    }
  }
  .hover\:bg-yellow-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-900);
      }
    }
  }
  .hover\:bg-yellow-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-yellow-900) !important;
      }
    }
  }
  .hover\:bg-zinc-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-100);
      }
    }
  }
  .hover\:bg-zinc-100\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-100) !important;
      }
    }
  }
  .hover\:bg-zinc-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-200);
      }
    }
  }
  .hover\:bg-zinc-200\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-200) !important;
      }
    }
  }
  .hover\:bg-zinc-300 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-300);
      }
    }
  }
  .hover\:bg-zinc-300\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-300) !important;
      }
    }
  }
  .hover\:bg-zinc-400 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-400);
      }
    }
  }
  .hover\:bg-zinc-400\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-400) !important;
      }
    }
  }
  .hover\:bg-zinc-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-500);
      }
    }
  }
  .hover\:bg-zinc-500\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-500) !important;
      }
    }
  }
  .hover\:bg-zinc-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-600);
      }
    }
  }
  .hover\:bg-zinc-600\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-600) !important;
      }
    }
  }
  .hover\:bg-zinc-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-700);
      }
    }
  }
  .hover\:bg-zinc-700\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-700) !important;
      }
    }
  }
  .hover\:bg-zinc-800 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-800);
      }
    }
  }
  .hover\:bg-zinc-800\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-800) !important;
      }
    }
  }
  .hover\:bg-zinc-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-900);
      }
    }
  }
  .hover\:bg-zinc-900\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-zinc-900) !important;
      }
    }
  }
  .hover\:text-\[\#eaeaea\] {
    &:hover {
      @media (hover: hover) {
        color: #eaeaea;
      }
    }
  }
  .hover\:text-amber-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-100);
      }
    }
  }
  .hover\:text-amber-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-100) !important;
      }
    }
  }
  .hover\:text-amber-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-200);
      }
    }
  }
  .hover\:text-amber-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-200) !important;
      }
    }
  }
  .hover\:text-amber-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-300);
      }
    }
  }
  .hover\:text-amber-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-300) !important;
      }
    }
  }
  .hover\:text-amber-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-400);
      }
    }
  }
  .hover\:text-amber-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-400) !important;
      }
    }
  }
  .hover\:text-amber-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-500);
      }
    }
  }
  .hover\:text-amber-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-500) !important;
      }
    }
  }
  .hover\:text-amber-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-600);
      }
    }
  }
  .hover\:text-amber-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-600) !important;
      }
    }
  }
  .hover\:text-amber-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-700);
      }
    }
  }
  .hover\:text-amber-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-700) !important;
      }
    }
  }
  .hover\:text-amber-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-800);
      }
    }
  }
  .hover\:text-amber-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-800) !important;
      }
    }
  }
  .hover\:text-amber-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-900);
      }
    }
  }
  .hover\:text-amber-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-amber-900) !important;
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .hover\:text-black\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black) !important;
      }
    }
  }
  .hover\:text-blue-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-100);
      }
    }
  }
  .hover\:text-blue-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-100) !important;
      }
    }
  }
  .hover\:text-blue-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-200);
      }
    }
  }
  .hover\:text-blue-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-200) !important;
      }
    }
  }
  .hover\:text-blue-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-300);
      }
    }
  }
  .hover\:text-blue-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-300) !important;
      }
    }
  }
  .hover\:text-blue-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-400);
      }
    }
  }
  .hover\:text-blue-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-400) !important;
      }
    }
  }
  .hover\:text-blue-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .hover\:text-blue-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500) !important;
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-blue-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600) !important;
      }
    }
  }
  .hover\:text-blue-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-700);
      }
    }
  }
  .hover\:text-blue-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-700) !important;
      }
    }
  }
  .hover\:text-blue-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-800);
      }
    }
  }
  .hover\:text-blue-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-800) !important;
      }
    }
  }
  .hover\:text-blue-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-900);
      }
    }
  }
  .hover\:text-blue-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-900) !important;
      }
    }
  }
  .hover\:text-cyan-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-100);
      }
    }
  }
  .hover\:text-cyan-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-100) !important;
      }
    }
  }
  .hover\:text-cyan-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-200);
      }
    }
  }
  .hover\:text-cyan-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-200) !important;
      }
    }
  }
  .hover\:text-cyan-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-300);
      }
    }
  }
  .hover\:text-cyan-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-300) !important;
      }
    }
  }
  .hover\:text-cyan-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-400);
      }
    }
  }
  .hover\:text-cyan-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-400) !important;
      }
    }
  }
  .hover\:text-cyan-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-500);
      }
    }
  }
  .hover\:text-cyan-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-500) !important;
      }
    }
  }
  .hover\:text-cyan-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-600);
      }
    }
  }
  .hover\:text-cyan-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-600) !important;
      }
    }
  }
  .hover\:text-cyan-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-700);
      }
    }
  }
  .hover\:text-cyan-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-700) !important;
      }
    }
  }
  .hover\:text-cyan-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-800);
      }
    }
  }
  .hover\:text-cyan-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-800) !important;
      }
    }
  }
  .hover\:text-cyan-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-900);
      }
    }
  }
  .hover\:text-cyan-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-900) !important;
      }
    }
  }
  .hover\:text-emerald-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-100);
      }
    }
  }
  .hover\:text-emerald-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-100) !important;
      }
    }
  }
  .hover\:text-emerald-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-200);
      }
    }
  }
  .hover\:text-emerald-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-200) !important;
      }
    }
  }
  .hover\:text-emerald-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-300);
      }
    }
  }
  .hover\:text-emerald-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-300) !important;
      }
    }
  }
  .hover\:text-emerald-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-400);
      }
    }
  }
  .hover\:text-emerald-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-400) !important;
      }
    }
  }
  .hover\:text-emerald-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-500);
      }
    }
  }
  .hover\:text-emerald-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-500) !important;
      }
    }
  }
  .hover\:text-emerald-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-600);
      }
    }
  }
  .hover\:text-emerald-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-600) !important;
      }
    }
  }
  .hover\:text-emerald-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-700);
      }
    }
  }
  .hover\:text-emerald-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-700) !important;
      }
    }
  }
  .hover\:text-emerald-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-800);
      }
    }
  }
  .hover\:text-emerald-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-800) !important;
      }
    }
  }
  .hover\:text-emerald-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-900);
      }
    }
  }
  .hover\:text-emerald-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-emerald-900) !important;
      }
    }
  }
  .hover\:text-fuchsia-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-100);
      }
    }
  }
  .hover\:text-fuchsia-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-100) !important;
      }
    }
  }
  .hover\:text-fuchsia-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-200);
      }
    }
  }
  .hover\:text-fuchsia-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-200) !important;
      }
    }
  }
  .hover\:text-fuchsia-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-300);
      }
    }
  }
  .hover\:text-fuchsia-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-300) !important;
      }
    }
  }
  .hover\:text-fuchsia-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-400);
      }
    }
  }
  .hover\:text-fuchsia-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-400) !important;
      }
    }
  }
  .hover\:text-fuchsia-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-500);
      }
    }
  }
  .hover\:text-fuchsia-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-500) !important;
      }
    }
  }
  .hover\:text-fuchsia-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-600);
      }
    }
  }
  .hover\:text-fuchsia-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-600) !important;
      }
    }
  }
  .hover\:text-fuchsia-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-700);
      }
    }
  }
  .hover\:text-fuchsia-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-700) !important;
      }
    }
  }
  .hover\:text-fuchsia-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-800);
      }
    }
  }
  .hover\:text-fuchsia-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-800) !important;
      }
    }
  }
  .hover\:text-fuchsia-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-900);
      }
    }
  }
  .hover\:text-fuchsia-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-fuchsia-900) !important;
      }
    }
  }
  .hover\:text-gray-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-100);
      }
    }
  }
  .hover\:text-gray-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-100) !important;
      }
    }
  }
  .hover\:text-gray-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-200);
      }
    }
  }
  .hover\:text-gray-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-200) !important;
      }
    }
  }
  .hover\:text-gray-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-300);
      }
    }
  }
  .hover\:text-gray-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-300) !important;
      }
    }
  }
  .hover\:text-gray-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-400);
      }
    }
  }
  .hover\:text-gray-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-400) !important;
      }
    }
  }
  .hover\:text-gray-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .hover\:text-gray-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-500) !important;
      }
    }
  }
  .hover\:text-gray-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-600);
      }
    }
  }
  .hover\:text-gray-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-600) !important;
      }
    }
  }
  .hover\:text-gray-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700);
      }
    }
  }
  .hover\:text-gray-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-700) !important;
      }
    }
  }
  .hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
  }
  .hover\:text-gray-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800) !important;
      }
    }
  }
  .hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .hover\:text-gray-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-900) !important;
      }
    }
  }
  .hover\:text-green-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-100);
      }
    }
  }
  .hover\:text-green-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-100) !important;
      }
    }
  }
  .hover\:text-green-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-200);
      }
    }
  }
  .hover\:text-green-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-200) !important;
      }
    }
  }
  .hover\:text-green-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-300);
      }
    }
  }
  .hover\:text-green-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-300) !important;
      }
    }
  }
  .hover\:text-green-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-400);
      }
    }
  }
  .hover\:text-green-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-400) !important;
      }
    }
  }
  .hover\:text-green-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-500);
      }
    }
  }
  .hover\:text-green-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-500) !important;
      }
    }
  }
  .hover\:text-green-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-600);
      }
    }
  }
  .hover\:text-green-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-600) !important;
      }
    }
  }
  .hover\:text-green-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-700);
      }
    }
  }
  .hover\:text-green-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-700) !important;
      }
    }
  }
  .hover\:text-green-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-800);
      }
    }
  }
  .hover\:text-green-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-800) !important;
      }
    }
  }
  .hover\:text-green-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-900);
      }
    }
  }
  .hover\:text-green-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-green-900) !important;
      }
    }
  }
  .hover\:text-indigo-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-100);
      }
    }
  }
  .hover\:text-indigo-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-100) !important;
      }
    }
  }
  .hover\:text-indigo-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-200);
      }
    }
  }
  .hover\:text-indigo-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-200) !important;
      }
    }
  }
  .hover\:text-indigo-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-300);
      }
    }
  }
  .hover\:text-indigo-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-300) !important;
      }
    }
  }
  .hover\:text-indigo-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-400);
      }
    }
  }
  .hover\:text-indigo-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-400) !important;
      }
    }
  }
  .hover\:text-indigo-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-500);
      }
    }
  }
  .hover\:text-indigo-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-500) !important;
      }
    }
  }
  .hover\:text-indigo-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-600);
      }
    }
  }
  .hover\:text-indigo-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-600) !important;
      }
    }
  }
  .hover\:text-indigo-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-700);
      }
    }
  }
  .hover\:text-indigo-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-700) !important;
      }
    }
  }
  .hover\:text-indigo-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-800);
      }
    }
  }
  .hover\:text-indigo-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-800) !important;
      }
    }
  }
  .hover\:text-indigo-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-900);
      }
    }
  }
  .hover\:text-indigo-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-900) !important;
      }
    }
  }
  .hover\:text-lime-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-100);
      }
    }
  }
  .hover\:text-lime-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-100) !important;
      }
    }
  }
  .hover\:text-lime-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-200);
      }
    }
  }
  .hover\:text-lime-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-200) !important;
      }
    }
  }
  .hover\:text-lime-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-300);
      }
    }
  }
  .hover\:text-lime-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-300) !important;
      }
    }
  }
  .hover\:text-lime-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-400);
      }
    }
  }
  .hover\:text-lime-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-400) !important;
      }
    }
  }
  .hover\:text-lime-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-500);
      }
    }
  }
  .hover\:text-lime-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-500) !important;
      }
    }
  }
  .hover\:text-lime-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-600);
      }
    }
  }
  .hover\:text-lime-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-600) !important;
      }
    }
  }
  .hover\:text-lime-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-700);
      }
    }
  }
  .hover\:text-lime-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-700) !important;
      }
    }
  }
  .hover\:text-lime-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-800);
      }
    }
  }
  .hover\:text-lime-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-800) !important;
      }
    }
  }
  .hover\:text-lime-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-900);
      }
    }
  }
  .hover\:text-lime-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-lime-900) !important;
      }
    }
  }
  .hover\:text-neutral-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-100);
      }
    }
  }
  .hover\:text-neutral-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-100) !important;
      }
    }
  }
  .hover\:text-neutral-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-200);
      }
    }
  }
  .hover\:text-neutral-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-200) !important;
      }
    }
  }
  .hover\:text-neutral-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-300);
      }
    }
  }
  .hover\:text-neutral-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-300) !important;
      }
    }
  }
  .hover\:text-neutral-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-400);
      }
    }
  }
  .hover\:text-neutral-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-400) !important;
      }
    }
  }
  .hover\:text-neutral-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-500);
      }
    }
  }
  .hover\:text-neutral-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-500) !important;
      }
    }
  }
  .hover\:text-neutral-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-600);
      }
    }
  }
  .hover\:text-neutral-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-600) !important;
      }
    }
  }
  .hover\:text-neutral-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-700);
      }
    }
  }
  .hover\:text-neutral-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-700) !important;
      }
    }
  }
  .hover\:text-neutral-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-800);
      }
    }
  }
  .hover\:text-neutral-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-800) !important;
      }
    }
  }
  .hover\:text-neutral-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-900);
      }
    }
  }
  .hover\:text-neutral-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-900) !important;
      }
    }
  }
  .hover\:text-orange-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-100);
      }
    }
  }
  .hover\:text-orange-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-100) !important;
      }
    }
  }
  .hover\:text-orange-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-200);
      }
    }
  }
  .hover\:text-orange-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-200) !important;
      }
    }
  }
  .hover\:text-orange-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-300);
      }
    }
  }
  .hover\:text-orange-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-300) !important;
      }
    }
  }
  .hover\:text-orange-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-400);
      }
    }
  }
  .hover\:text-orange-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-400) !important;
      }
    }
  }
  .hover\:text-orange-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-500);
      }
    }
  }
  .hover\:text-orange-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-500) !important;
      }
    }
  }
  .hover\:text-orange-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-600);
      }
    }
  }
  .hover\:text-orange-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-600) !important;
      }
    }
  }
  .hover\:text-orange-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-700);
      }
    }
  }
  .hover\:text-orange-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-700) !important;
      }
    }
  }
  .hover\:text-orange-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-800);
      }
    }
  }
  .hover\:text-orange-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-800) !important;
      }
    }
  }
  .hover\:text-orange-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-900);
      }
    }
  }
  .hover\:text-orange-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-orange-900) !important;
      }
    }
  }
  .hover\:text-pink-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-100);
      }
    }
  }
  .hover\:text-pink-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-100) !important;
      }
    }
  }
  .hover\:text-pink-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-200);
      }
    }
  }
  .hover\:text-pink-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-200) !important;
      }
    }
  }
  .hover\:text-pink-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-300);
      }
    }
  }
  .hover\:text-pink-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-300) !important;
      }
    }
  }
  .hover\:text-pink-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-400);
      }
    }
  }
  .hover\:text-pink-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-400) !important;
      }
    }
  }
  .hover\:text-pink-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-500);
      }
    }
  }
  .hover\:text-pink-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-500) !important;
      }
    }
  }
  .hover\:text-pink-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-600);
      }
    }
  }
  .hover\:text-pink-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-600) !important;
      }
    }
  }
  .hover\:text-pink-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-700);
      }
    }
  }
  .hover\:text-pink-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-700) !important;
      }
    }
  }
  .hover\:text-pink-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-800);
      }
    }
  }
  .hover\:text-pink-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-800) !important;
      }
    }
  }
  .hover\:text-pink-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-900);
      }
    }
  }
  .hover\:text-pink-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-pink-900) !important;
      }
    }
  }
  .hover\:text-purple-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-100);
      }
    }
  }
  .hover\:text-purple-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-100) !important;
      }
    }
  }
  .hover\:text-purple-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-200);
      }
    }
  }
  .hover\:text-purple-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-200) !important;
      }
    }
  }
  .hover\:text-purple-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-300);
      }
    }
  }
  .hover\:text-purple-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-300) !important;
      }
    }
  }
  .hover\:text-purple-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-400);
      }
    }
  }
  .hover\:text-purple-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-400) !important;
      }
    }
  }
  .hover\:text-purple-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-500);
      }
    }
  }
  .hover\:text-purple-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-500) !important;
      }
    }
  }
  .hover\:text-purple-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-600);
      }
    }
  }
  .hover\:text-purple-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-600) !important;
      }
    }
  }
  .hover\:text-purple-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-700);
      }
    }
  }
  .hover\:text-purple-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-700) !important;
      }
    }
  }
  .hover\:text-purple-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-800);
      }
    }
  }
  .hover\:text-purple-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-800) !important;
      }
    }
  }
  .hover\:text-purple-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-900);
      }
    }
  }
  .hover\:text-purple-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-purple-900) !important;
      }
    }
  }
  .hover\:text-red-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-100);
      }
    }
  }
  .hover\:text-red-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-100) !important;
      }
    }
  }
  .hover\:text-red-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-200);
      }
    }
  }
  .hover\:text-red-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-200) !important;
      }
    }
  }
  .hover\:text-red-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-300);
      }
    }
  }
  .hover\:text-red-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-300) !important;
      }
    }
  }
  .hover\:text-red-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-400);
      }
    }
  }
  .hover\:text-red-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-400) !important;
      }
    }
  }
  .hover\:text-red-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-500);
      }
    }
  }
  .hover\:text-red-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-500) !important;
      }
    }
  }
  .hover\:text-red-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-600);
      }
    }
  }
  .hover\:text-red-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-600) !important;
      }
    }
  }
  .hover\:text-red-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-700);
      }
    }
  }
  .hover\:text-red-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-700) !important;
      }
    }
  }
  .hover\:text-red-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-800);
      }
    }
  }
  .hover\:text-red-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-800) !important;
      }
    }
  }
  .hover\:text-red-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-900);
      }
    }
  }
  .hover\:text-red-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-900) !important;
      }
    }
  }
  .hover\:text-rose-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-100);
      }
    }
  }
  .hover\:text-rose-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-100) !important;
      }
    }
  }
  .hover\:text-rose-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-200);
      }
    }
  }
  .hover\:text-rose-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-200) !important;
      }
    }
  }
  .hover\:text-rose-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-300);
      }
    }
  }
  .hover\:text-rose-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-300) !important;
      }
    }
  }
  .hover\:text-rose-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-400);
      }
    }
  }
  .hover\:text-rose-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-400) !important;
      }
    }
  }
  .hover\:text-rose-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-500);
      }
    }
  }
  .hover\:text-rose-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-500) !important;
      }
    }
  }
  .hover\:text-rose-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-600);
      }
    }
  }
  .hover\:text-rose-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-600) !important;
      }
    }
  }
  .hover\:text-rose-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-700);
      }
    }
  }
  .hover\:text-rose-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-700) !important;
      }
    }
  }
  .hover\:text-rose-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-800);
      }
    }
  }
  .hover\:text-rose-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-800) !important;
      }
    }
  }
  .hover\:text-rose-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-900);
      }
    }
  }
  .hover\:text-rose-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-rose-900) !important;
      }
    }
  }
  .hover\:text-sky-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-100);
      }
    }
  }
  .hover\:text-sky-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-100) !important;
      }
    }
  }
  .hover\:text-sky-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-200);
      }
    }
  }
  .hover\:text-sky-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-200) !important;
      }
    }
  }
  .hover\:text-sky-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-300);
      }
    }
  }
  .hover\:text-sky-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-300) !important;
      }
    }
  }
  .hover\:text-sky-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-400);
      }
    }
  }
  .hover\:text-sky-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-400) !important;
      }
    }
  }
  .hover\:text-sky-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-500);
      }
    }
  }
  .hover\:text-sky-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-500) !important;
      }
    }
  }
  .hover\:text-sky-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-600);
      }
    }
  }
  .hover\:text-sky-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-600) !important;
      }
    }
  }
  .hover\:text-sky-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-700);
      }
    }
  }
  .hover\:text-sky-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-700) !important;
      }
    }
  }
  .hover\:text-sky-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-800);
      }
    }
  }
  .hover\:text-sky-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-800) !important;
      }
    }
  }
  .hover\:text-sky-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-900);
      }
    }
  }
  .hover\:text-sky-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-900) !important;
      }
    }
  }
  .hover\:text-slate-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-100);
      }
    }
  }
  .hover\:text-slate-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-100) !important;
      }
    }
  }
  .hover\:text-slate-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-200);
      }
    }
  }
  .hover\:text-slate-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-200) !important;
      }
    }
  }
  .hover\:text-slate-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-300);
      }
    }
  }
  .hover\:text-slate-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-300) !important;
      }
    }
  }
  .hover\:text-slate-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-400);
      }
    }
  }
  .hover\:text-slate-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-400) !important;
      }
    }
  }
  .hover\:text-slate-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-500);
      }
    }
  }
  .hover\:text-slate-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-500) !important;
      }
    }
  }
  .hover\:text-slate-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-600);
      }
    }
  }
  .hover\:text-slate-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-600) !important;
      }
    }
  }
  .hover\:text-slate-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-700);
      }
    }
  }
  .hover\:text-slate-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-700) !important;
      }
    }
  }
  .hover\:text-slate-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-800);
      }
    }
  }
  .hover\:text-slate-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-800) !important;
      }
    }
  }
  .hover\:text-slate-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-900);
      }
    }
  }
  .hover\:text-slate-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-slate-900) !important;
      }
    }
  }
  .hover\:text-stone-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-100);
      }
    }
  }
  .hover\:text-stone-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-100) !important;
      }
    }
  }
  .hover\:text-stone-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-200);
      }
    }
  }
  .hover\:text-stone-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-200) !important;
      }
    }
  }
  .hover\:text-stone-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-300);
      }
    }
  }
  .hover\:text-stone-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-300) !important;
      }
    }
  }
  .hover\:text-stone-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-400);
      }
    }
  }
  .hover\:text-stone-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-400) !important;
      }
    }
  }
  .hover\:text-stone-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-500);
      }
    }
  }
  .hover\:text-stone-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-500) !important;
      }
    }
  }
  .hover\:text-stone-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-600);
      }
    }
  }
  .hover\:text-stone-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-600) !important;
      }
    }
  }
  .hover\:text-stone-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-700);
      }
    }
  }
  .hover\:text-stone-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-700) !important;
      }
    }
  }
  .hover\:text-stone-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-800);
      }
    }
  }
  .hover\:text-stone-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-800) !important;
      }
    }
  }
  .hover\:text-stone-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-900);
      }
    }
  }
  .hover\:text-stone-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-stone-900) !important;
      }
    }
  }
  .hover\:text-teal-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-100);
      }
    }
  }
  .hover\:text-teal-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-100) !important;
      }
    }
  }
  .hover\:text-teal-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-200);
      }
    }
  }
  .hover\:text-teal-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-200) !important;
      }
    }
  }
  .hover\:text-teal-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-300);
      }
    }
  }
  .hover\:text-teal-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-300) !important;
      }
    }
  }
  .hover\:text-teal-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-400);
      }
    }
  }
  .hover\:text-teal-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-400) !important;
      }
    }
  }
  .hover\:text-teal-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-500);
      }
    }
  }
  .hover\:text-teal-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-500) !important;
      }
    }
  }
  .hover\:text-teal-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-600);
      }
    }
  }
  .hover\:text-teal-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-600) !important;
      }
    }
  }
  .hover\:text-teal-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-700);
      }
    }
  }
  .hover\:text-teal-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-700) !important;
      }
    }
  }
  .hover\:text-teal-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-800);
      }
    }
  }
  .hover\:text-teal-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-800) !important;
      }
    }
  }
  .hover\:text-teal-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-900);
      }
    }
  }
  .hover\:text-teal-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-teal-900) !important;
      }
    }
  }
  .hover\:text-violet-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-100);
      }
    }
  }
  .hover\:text-violet-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-100) !important;
      }
    }
  }
  .hover\:text-violet-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-200);
      }
    }
  }
  .hover\:text-violet-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-200) !important;
      }
    }
  }
  .hover\:text-violet-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-300);
      }
    }
  }
  .hover\:text-violet-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-300) !important;
      }
    }
  }
  .hover\:text-violet-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-400);
      }
    }
  }
  .hover\:text-violet-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-400) !important;
      }
    }
  }
  .hover\:text-violet-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-500);
      }
    }
  }
  .hover\:text-violet-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-500) !important;
      }
    }
  }
  .hover\:text-violet-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-600);
      }
    }
  }
  .hover\:text-violet-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-600) !important;
      }
    }
  }
  .hover\:text-violet-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-700);
      }
    }
  }
  .hover\:text-violet-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-700) !important;
      }
    }
  }
  .hover\:text-violet-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-800);
      }
    }
  }
  .hover\:text-violet-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-800) !important;
      }
    }
  }
  .hover\:text-violet-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-900);
      }
    }
  }
  .hover\:text-violet-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-violet-900) !important;
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:text-white\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white) !important;
      }
    }
  }
  .hover\:text-yellow-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-100);
      }
    }
  }
  .hover\:text-yellow-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-100) !important;
      }
    }
  }
  .hover\:text-yellow-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-200);
      }
    }
  }
  .hover\:text-yellow-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-200) !important;
      }
    }
  }
  .hover\:text-yellow-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-300);
      }
    }
  }
  .hover\:text-yellow-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-300) !important;
      }
    }
  }
  .hover\:text-yellow-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-400);
      }
    }
  }
  .hover\:text-yellow-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-400) !important;
      }
    }
  }
  .hover\:text-yellow-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-500);
      }
    }
  }
  .hover\:text-yellow-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-500) !important;
      }
    }
  }
  .hover\:text-yellow-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-600);
      }
    }
  }
  .hover\:text-yellow-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-600) !important;
      }
    }
  }
  .hover\:text-yellow-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-700);
      }
    }
  }
  .hover\:text-yellow-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-700) !important;
      }
    }
  }
  .hover\:text-yellow-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-800);
      }
    }
  }
  .hover\:text-yellow-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-800) !important;
      }
    }
  }
  .hover\:text-yellow-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-900);
      }
    }
  }
  .hover\:text-yellow-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-yellow-900) !important;
      }
    }
  }
  .hover\:text-zinc-100 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-100);
      }
    }
  }
  .hover\:text-zinc-100\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-100) !important;
      }
    }
  }
  .hover\:text-zinc-200 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-200);
      }
    }
  }
  .hover\:text-zinc-200\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-200) !important;
      }
    }
  }
  .hover\:text-zinc-300 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-300);
      }
    }
  }
  .hover\:text-zinc-300\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-300) !important;
      }
    }
  }
  .hover\:text-zinc-400 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-400);
      }
    }
  }
  .hover\:text-zinc-400\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-400) !important;
      }
    }
  }
  .hover\:text-zinc-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-500);
      }
    }
  }
  .hover\:text-zinc-500\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-500) !important;
      }
    }
  }
  .hover\:text-zinc-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-600);
      }
    }
  }
  .hover\:text-zinc-600\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-600) !important;
      }
    }
  }
  .hover\:text-zinc-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-700);
      }
    }
  }
  .hover\:text-zinc-700\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-700) !important;
      }
    }
  }
  .hover\:text-zinc-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-800);
      }
    }
  }
  .hover\:text-zinc-800\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-800) !important;
      }
    }
  }
  .hover\:text-zinc-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-900);
      }
    }
  }
  .hover\:text-zinc-900\! {
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-900) !important;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .focus\:border-0 {
    &:focus {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .focus\:border-none {
    &:focus {
      --tw-border-style: none;
      border-style: none;
    }
  }
  .focus\:outline-0 {
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 0px;
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .active\:cursor-grabbing {
    &:active {
      cursor: grabbing;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-4 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:min-w-\[60vw\] {
    @media (width >= 48rem) {
      min-width: 60vw;
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-5 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:min-w-\[40vw\] {
    @media (width >= 64rem) {
      min-width: 40vw;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-6 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .xl\:grid-cols-3 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .\@\[250px\]\:w-\[200px\] {
    @container (width >= 250px) {
      width: 200px;
    }
  }
  .\@\[250px\]\:flex-row {
    @container (width >= 250px) {
      flex-direction: row;
    }
  }
  .\@\[250px\]\:rounded-l-lg {
    @container (width >= 250px) {
      border-top-left-radius: var(--radius-lg);
      border-bottom-left-radius: var(--radius-lg);
    }
  }
  .\@\[250px\]\:rounded-tr-none {
    @container (width >= 250px) {
      border-top-right-radius: 0;
    }
  }
  .\@xs\:pt-\[0px\] {
    @container (width >= 475px) {
      padding-top: 0px;
    }
  }
  .\@xs\:pr-\[5px\] {
    @container (width >= 475px) {
      padding-right: 5px;
    }
  }
  .\@xs\:pb-\[0px\] {
    @container (width >= 475px) {
      padding-bottom: 0px;
    }
  }
  .\@xs\:pl-\[5px\] {
    @container (width >= 475px) {
      padding-left: 5px;
    }
  }
  .\@sm\:col-span-1 {
    @container (width >= 640px) {
      grid-column: span 1 / span 1;
    }
  }
  .\@sm\:m-0 {
    @container (width >= 640px) {
      margin: calc(var(--spacing) * 0);
    }
  }
  .\@sm\:mx-1 {
    @container (width >= 640px) {
      margin-inline: calc(var(--spacing) * 1);
    }
  }
  .\@sm\:flex {
    @container (width >= 640px) {
      display: flex;
    }
  }
  .\@sm\:grid {
    @container (width >= 640px) {
      display: grid;
    }
  }
  .\@sm\:hidden {
    @container (width >= 640px) {
      display: none;
    }
  }
  .\@sm\:self-center {
    @container (width >= 640px) {
      align-self: center;
    }
  }
  .\@sm\:justify-self-center {
    @container (width >= 640px) {
      justify-self: center;
    }
  }
  .\@sm\:rounded-none {
    @container (width >= 640px) {
      border-radius: 0;
    }
  }
  .\@sm\:border-0 {
    @container (width >= 640px) {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .\@sm\:p-0 {
    @container (width >= 640px) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\@sm\:px-1 {
    @container (width >= 640px) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .\@sm\:py-2 {
    @container (width >= 640px) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\@md\:col-span-1 {
    @container (width >= 768px) {
      grid-column: span 1 / span 1;
    }
  }
  .\@md\:m-0 {
    @container (width >= 768px) {
      margin: calc(var(--spacing) * 0);
    }
  }
  .\@md\:mx-1 {
    @container (width >= 768px) {
      margin-inline: calc(var(--spacing) * 1);
    }
  }
  .\@md\:flex {
    @container (width >= 768px) {
      display: flex;
    }
  }
  .\@md\:grid {
    @container (width >= 768px) {
      display: grid;
    }
  }
  .\@md\:hidden {
    @container (width >= 768px) {
      display: none;
    }
  }
  .\@md\:flex-1 {
    @container (width >= 768px) {
      flex: 1;
    }
  }
  .\@md\:self-center {
    @container (width >= 768px) {
      align-self: center;
    }
  }
  .\@md\:justify-self-center {
    @container (width >= 768px) {
      justify-self: center;
    }
  }
  .\@md\:rounded-none {
    @container (width >= 768px) {
      border-radius: 0;
    }
  }
  .\@md\:border-0 {
    @container (width >= 768px) {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .\@md\:p-0 {
    @container (width >= 768px) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\@md\:px-1 {
    @container (width >= 768px) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .\@md\:py-2 {
    @container (width >= 768px) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\@lg\:absolute {
    @container (width >= 1024px) {
      position: absolute;
    }
  }
  .\@lg\:relative {
    @container (width >= 1024px) {
      position: relative;
    }
  }
  .\@lg\:sticky {
    @container (width >= 1024px) {
      position: sticky;
    }
  }
  .\@lg\:top-\[0px\] {
    @container (width >= 1024px) {
      top: 0px;
    }
  }
  .\@lg\:top-\[60\%\] {
    @container (width >= 1024px) {
      top: 60%;
    }
  }
  .\@lg\:left-\[0px\] {
    @container (width >= 1024px) {
      left: 0px;
    }
  }
  .\@lg\:col-span-1 {
    @container (width >= 1024px) {
      grid-column: span 1 / span 1;
    }
  }
  .\@lg\:container {
    @container (width >= 1024px) {
      width: 100%;
      @media (width >= 475px) {
        max-width: 475px;
      }
      @media (width >= 40rem) {
        max-width: 40rem;
      }
      @media (width >= 48rem) {
        max-width: 48rem;
      }
      @media (width >= 64rem) {
        max-width: 64rem;
      }
      @media (width >= 80rem) {
        max-width: 80rem;
      }
      @media (width >= 96rem) {
        max-width: 96rem;
      }
    }
  }
  .\@lg\:m-0 {
    @container (width >= 1024px) {
      margin: calc(var(--spacing) * 0);
    }
  }
  .\@lg\:m-auto {
    @container (width >= 1024px) {
      margin: auto;
    }
  }
  .\@lg\:mx-1 {
    @container (width >= 1024px) {
      margin-inline: calc(var(--spacing) * 1);
    }
  }
  .\@lg\:flex {
    @container (width >= 1024px) {
      display: flex;
    }
  }
  .\@lg\:grid {
    @container (width >= 1024px) {
      display: grid;
    }
  }
  .\@lg\:hidden {
    @container (width >= 1024px) {
      display: none;
    }
  }
  .\@lg\:h-\[70px\] {
    @container (width >= 1024px) {
      height: 70px;
    }
  }
  .\@lg\:h-\[100vh\] {
    @container (width >= 1024px) {
      height: 100vh;
    }
  }
  .\@lg\:h-\[300px\] {
    @container (width >= 1024px) {
      height: 300px;
    }
  }
  .\@lg\:h-\[500px\] {
    @container (width >= 1024px) {
      height: 500px;
    }
  }
  .\@lg\:max-h-\[calc\(100vh-170px\)\] {
    @container (width >= 1024px) {
      max-height: calc(100vh - 170px);
    }
  }
  .\@lg\:w-\[30\%\] {
    @container (width >= 1024px) {
      width: 30%;
    }
  }
  .\@lg\:w-\[50\%\] {
    @container (width >= 1024px) {
      width: 50%;
    }
  }
  .\@lg\:w-\[1024px\] {
    @container (width >= 1024px) {
      width: 1024px;
    }
  }
  .\@lg\:flex-col {
    @container (width >= 1024px) {
      flex-direction: column;
    }
  }
  .\@lg\:flex-row {
    @container (width >= 1024px) {
      flex-direction: row;
    }
  }
  .\@lg\:items-center {
    @container (width >= 1024px) {
      align-items: center;
    }
  }
  .\@lg\:items-start {
    @container (width >= 1024px) {
      align-items: flex-start;
    }
  }
  .\@lg\:justify-between {
    @container (width >= 1024px) {
      justify-content: space-between;
    }
  }
  .\@lg\:justify-center {
    @container (width >= 1024px) {
      justify-content: center;
    }
  }
  .\@lg\:justify-start {
    @container (width >= 1024px) {
      justify-content: flex-start;
    }
  }
  .\@lg\:self-center {
    @container (width >= 1024px) {
      align-self: center;
    }
  }
  .\@lg\:justify-self-center {
    @container (width >= 1024px) {
      justify-self: center;
    }
  }
  .\@lg\:rounded-none {
    @container (width >= 1024px) {
      border-radius: 0;
    }
  }
  .\@lg\:border-0 {
    @container (width >= 1024px) {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .\@lg\:bg-white {
    @container (width >= 1024px) {
      background-color: var(--color-white);
    }
  }
  .\@lg\:from-yellow-200 {
    @container (width >= 1024px) {
      --tw-gradient-from: var(--color-yellow-200);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .\@lg\:from-20\% {
    @container (width >= 1024px) {
      --tw-gradient-from-position: 20%;
    }
  }
  .\@lg\:via-amber-400 {
    @container (width >= 1024px) {
      --tw-gradient-via: var(--color-amber-400);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .\@lg\:via-60\% {
    @container (width >= 1024px) {
      --tw-gradient-via-position: 60%;
    }
  }
  .\@lg\:to-orange-600 {
    @container (width >= 1024px) {
      --tw-gradient-to: var(--color-orange-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .\@lg\:to-100\% {
    @container (width >= 1024px) {
      --tw-gradient-to-position: 100%;
    }
  }
  .\@lg\:p-0 {
    @container (width >= 1024px) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\@lg\:px-1 {
    @container (width >= 1024px) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .\@lg\:py-2 {
    @container (width >= 1024px) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\@lg\:pt-\[0px\] {
    @container (width >= 1024px) {
      padding-top: 0px;
    }
  }
  .\@lg\:pt-\[16px\] {
    @container (width >= 1024px) {
      padding-top: 16px;
    }
  }
  .\@lg\:pb-\[16px\] {
    @container (width >= 1024px) {
      padding-bottom: 16px;
    }
  }
  .\@lg\:text-\[30px\] {
    @container (width >= 1024px) {
      font-size: 30px;
    }
  }
  .\@xl\:col-span-1 {
    @container (width >= 1280px) {
      grid-column: span 1 / span 1;
    }
  }
  .\@xl\:m-0 {
    @container (width >= 1280px) {
      margin: calc(var(--spacing) * 0);
    }
  }
  .\@xl\:mx-1 {
    @container (width >= 1280px) {
      margin-inline: calc(var(--spacing) * 1);
    }
  }
  .\@xl\:flex {
    @container (width >= 1280px) {
      display: flex;
    }
  }
  .\@xl\:grid {
    @container (width >= 1280px) {
      display: grid;
    }
  }
  .\@xl\:hidden {
    @container (width >= 1280px) {
      display: none;
    }
  }
  .\@xl\:h-\[600px\] {
    @container (width >= 1280px) {
      height: 600px;
    }
  }
  .\@xl\:self-center {
    @container (width >= 1280px) {
      align-self: center;
    }
  }
  .\@xl\:justify-self-center {
    @container (width >= 1280px) {
      justify-self: center;
    }
  }
  .\@xl\:rounded-none {
    @container (width >= 1280px) {
      border-radius: 0;
    }
  }
  .\@xl\:border-0 {
    @container (width >= 1280px) {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .\@xl\:p-0 {
    @container (width >= 1280px) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .\@xl\:px-1 {
    @container (width >= 1280px) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .\@xl\:py-2 {
    @container (width >= 1280px) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\@2xl\:h-\[700px\] {
    @container (width >= 1536px) {
      height: 700px;
    }
  }
  .\[\&_li\>\*\]\:rounded-none {
    & li>* {
      border-radius: 0;
    }
  }
  .\[required\]\:visible {
    &:is(required) {
      visibility: visible;
    }
  }
}
:root {
  --responsive-bar: 92px;
  --main-bar: 48px;
  --dev-utilites: 50px;
  --height-objects: calc(100vh-var(--responsive-bar)-var(--main-bar)-var(--dev-utilites));
  --dev-border-color-dark: #555;
  --dev-color-primary-1: #1E1E1E;
  --dev-color-primary-2: #FFFFFF;
  --dev-color-primary-3: #E6E6E6;
  --dev-tab-color-inverse: #E6E6E6;
  --dev-color-remove: #f87272;
  --dev-color-remove: #f87272;
  --shadowColor: #aaa;
  --borderColor: #dadada;
  --mainContentBG: #fefefe;
  --navBarDarkBG: #222;
  --navBarLightBG: #444;
  --navBarLighterBG: #666;
  --navBarLightererBG: #aaa;
  --navBarTextColor: #fdfdffea;
  --navBarHoveredTextColor: #fdfdff;
  --bspokeBleu: #0dd3d3;
  --borderColorSection: #9b9b9b;
  --default-font-family: 'Source Sans 3', sans-serif;
  --disabled-color: #b8b7b7;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(37.352% 0.08265 241.205);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: #fa7c7c;
  --color-error-content: oklch(25.423% 0.09152 10.368);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}
@font-face {
  font-family: 'Source Sans 3';
  src: url('/bweb/assets/fonts/SourceSans/SourceSans3-VariableFont_wght.ttf') format("truetype-variations");
}
@font-face {
  font-family: 'Source Sans 3';
  font-style: italic;
  src: url('/bweb/assets/fonts/SourceSans/SourceSans3-Italic-VariableFont_wght.ttf') format("truetype-variations");
}
body {
  font-family: 'Source Sans 3';
}
label span {
  background-color: var(--mainContentBG);
}
#drawer,
#mainContent {
  min-height: 100%;
}
#SideBarRight,
#SideBarLeft,
header,
footer {
  position: relative;
}
.relative .eraseSearch {
  cursor: pointer;
  z-index: 10;
}
[bspk="icon"] {
  &[event-onclick] i {
    cursor: pointer;
  }
  &[effectforconditionaldisplay="disabled"] i {
    color: var(--disabled-color);
    cursor: none;
  }
}
.dev {
  & .swiper-wrapper {
    padding: 50px;
  }
  &.dev-dot {
    & #mainContent {
      box-shadow: inset 0 0 2px red;
    }
    & [bspk] {
      outline: dotted 1px #00d;
      &.overed {
        outline: solid 1px var(--bspokeBleu);
      }
    }
  }
  &:not(.dev-show-hidden) .dev-hidden {
    display: none;
  }
  &.dev-show-hidden {
    & bspk.dev-hidden {
      padding: 10px;
      background: repeating-linear-gradient(45deg,
                    #E5E6E6,
                    #E5E6E6 10px,
                    #fff 10px,
                    #fff 20px) !important;
    }
  }
}
.w-screen-xs {
  width: 475px;
}
.w-screen-sm {
  width: 640px;
}
.w-screen-md {
  width: 768px;
}
.w-screen-lg {
  width: 1024px;
}
.w-screen-xl {
  width: 1280px;
}
.w-screen-2xl {
  width: 1536px;
}
.floating-label {
  &>span {
    opacity: 1;
    color: #666;
  }
  &:has(.input-md, .select-md, .textarea-md)>span .placeholder {
    color: #999;
  }
}
.floating-label {
  &:has(.ts-control) {
    >span {
      top: 0;
      translate: 0 -50%;
      scale: 1;
      top: calc(var(--size-field, 0.25rem)* 10 / 2);
      pointer-events: auto;
      z-index: 1;
      top: calc(var(--size-field, 0.25rem)* 10 / 2);
    }
  }
  &:has(.ts-control [data-value]:not([data-value=""]),.ts-control :focus-within) {
    >span {
      top: 0;
      translate: -12.5% calc(-50% - 0.125em);
      scale: 0.75;
    }
  }
}
.toggle {
  &::after {
    content: "\F62A";
    font-family: bootstrap-icons;
    position: absolute;
    top: -1px;
    left: 3px;
    width: 10px;
    height: 10px;
    color: var(--mainContentBG);
    line-height: 1.5;
    transition: left 0.13s ease-in-out;
  }
  &:checked,
    &[aria-checked="true"],
    &:has(> input:checked) {
    &::after {
      content: "\F26E";
      left: 19px;
    }
  }
}
.select {
  align-items: center;
}
.select,
.ts-wrapper {
  height: var(--size);
  display: flex;
  align-items: center;
  & .ts-control {
    border: none;
    background-color: transparent !important;
  }
  &.loading {
    background-color: transparent !important;
    mask-image: none;
  }
}
fieldset {
  border-width: 2px;
  border-style: groove;
  border-color: rgb(192, 192, 192);
  border-image: initial;
  &>legend {
    margin-inline-start: 0.5rem;
    padding: 0 0.5rem;
    border-width: initial;
    border-style: none;
    border-color: initial;
    border-image: initial;
  }
}
.colors-list {
  z-index: 50;
  padding: 0.5rem;
  background-color: hsl(0 0% 100% / 1);
  border-radius: 1rem;
  display: grid;
  gap: 0.25rem;
  grid-template-columns: repeat(22, minmax(0, 1fr));
  grid-template-rows: repeat(9, minmax(0, 1fr));
  width: 40rem;
  height: 16rem;
}
#contextMenu {
  min-width: 150px;
  & .menu {
    width: auto;
  }
  & .btn {
    text-align: left;
    justify-content: flex-start;
  }
  & summary::after {
    color: #000;
  }
}
#devParameters {
  width: 250px;
  &+#mainContent {
    margin-left: 250px;
  }
  & summary:hover,
    & a:hover {
    background-color: var(--navBarLighterBG);
  }
  & li.active {
    background-color: var(--navBarLightBG);
  }
  & li li li.active {
    background-color: var(--navBarLighterBG);
  }
  & li li li li summary:hover,
    & li li li li a:hover {
    background-color: var(--navBarLightererBG);
  }
  & li li li li.active {
    background-color: var(--navBarLightererBG);
  }
}
#devPannel {
  & hr,
    & .collapse {
    border-bottom-style: solid;
    box-sizing: border-box;
    border-style: solid;
    border-color: var(--dev-border-color-dark);
  }
  & .ts-wrapper.select,
    & .ts-control,
    & .ts-wrapper.single.input-active .ts-control {
    background-color: #686868 !important;
    color: #fff;
    border: none;
    margin: 0;
  }
  & #bspkObjectsChoice,
    & #bspkObjectsTree {
    height: var(--height-objects);
    max-height: calc(100vh - 193px);
    overflow: auto;
    & .menu {
      width: 100%;
      & summary:hover,
            & li>div:hover {
        background-color: var(--navBarLighterBG);
      }
    }
  }
  & .overed {
    outline: solid 1px var(--bspokeBleu);
  }
  & #copyrightBspoke {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 2px 10px;
    font-size: 10px;
    color: #999999;
    & a {
      color: #fff;
      text-decoration: none;
      &:hover {
        cursor: pointer;
      }
      background: rgb(89, 154, 230);
      border-radius: 50%;
      height: 14px;
      width: 14px;
      display: inline-block;
      text-align: center;
      vertical-align: middle;
      margin-left: 5px;
      margin-top: -5px;
      padding: 0px 2px 0px 0px;
    }
  }
  & .devPannel {
    background-color: var(--dev-color-primary-1);
    position: fixed;
    top: 0;
    inset-inline-end: 0px;
    width: 0.75rem;
    height: 100vh;
    overflow: hidden;
    color: #fff;
    padding-bottom: 20px;
    font-size: 13px !important;
    &:hover,
        &.pinned {
      width: 50%;
      min-width: 500px;
    }
    &.pinned>div {
      opacity: 1;
    }
    &>.tabContent {
      max-height: calc(100vh - 193px);
      overflow: auto;
      display: none;
      &.active {
        display: block !important;
      }
      &#objects {
        overflow: visible;
      }
    }
    & #paramDevTab>li>a {
      background-color: var(--dev-tab-color);
      border-color: var(--dev-tab-color-inverse);
      color: var(--dev-tab-color-inverse);
      &.active {
        background-color: var(--dev-tab-color-inverse);
        border-color: var(--dev-tab-color);
        color: var(--dev-tab-color);
      }
    }
    & #tabMenu .tab {
      color: var(--dev-tab-color-inverse);
      background-color: var(--dev-tab-color);
      &.tab-active {
        background-color: var(--dev-tab-color-inverse);
        color: var(--dev-tab-color);
      }
    }
    .tabs-box {
      padding: 0;
      background-color: var(--navBarLightBG);
      border-radius: 3px;
    }
    .tabs-box legend {
      padding: 3px 15px 0 5px;
      min-width: 270px;
    }
    .tabs-box input {
      box-shadow: none;
      background-color: var(--navBarLightBG);
      color: var(--navBarTextColor);
      border: none;
      &.lightingBreakpoint {
        border-bottom: solid 1px var(--bspokeBleu);
      }
    }
    .tabs-box input:checked {
      background-color: var(--navBarDarkBG);
      color: var(--navBarTextColor);
    }
    & label {
      background-color: transparent;
      color: #b8b7b7;
      border: none;
      & span {
        background-color: transparent;
        color: #b8b7b7;
        box-shadow: none;
        flex-shrink: 0;
      }
      & .ts-control {
        height: 30px;
      }
      &.field-select {
        background-color: var(--navBarLightBG);
        height: 30px;
        padding-left: 12px;
        & select {
          height: 30px;
          border-radius: 0;
        }
        &>span {
          height: 30px;
          padding: 0;
          margin: 0;
          border: none;
        }
      }
      &.label-fieldtext {
        background-color: var(--navBarLightBG);
        color: #b8b7b7;
        border: none;
        padding-right: 0;
        height: auto;
        min-height: 30px;
        &>span {
          padding: 0;
          margin: 0;
          border: none;
        }
        & input {
          padding: 0 10px;
          border-top-right-radius: 3px;
          border-bottom-right-radius: 3px;
          height: 30px;
        }
      }
    }
    [data-section="spacing"] {
      & .fieldtext {
        & label {
          min-height: auto;
          padding: 0 5px;
        }
        & input {
          padding: 0 5px;
        }
      }
    }
    [data-section="border"] {
      & .fieldtext {
        & label {
          min-height: auto;
          padding: 0 5px;
        }
        & input {
          padding: 0 5px;
        }
      }
      & .field-select {
        &>span {
          width: 142px;
        }
      }
    }
    [data-section="typographic"] {
      & .label-fieldtext {
        &>span {
          width: 220px;
          &:has(+[name="textSize"]) {
            width: 200px;
          }
        }
      }
      & .field-select {
        &>span {
          width: 222px;
        }
        &[for="fontFamily-ts-control"] {
          height: 35px;
          & .ts-control {
            border-radius: 0;
          }
          &>span {
            width: 200px;
          }
        }
      }
    }
    [data-section="class"],
        [data-section="boxShadow"] {
      & .label-fieldtext {
        &>span {
          width: 200px;
        }
      }
    }
    [data-section="background"] {
      & .label-fieldtext {
        & [name="backgroundColorFromPosition"],
                & [name="backgroundColorViaPosition"],
                & [name="backgroundColorToPosition"] {
          height: 52px;
        }
        &>span {
          width: 250px;
        }
      }
      & .field-select {
        &>span {
          width: 250px;
        }
        & :has([name="backgroundImageSize"]) {
          height: 52px;
        }
      }
    }
    & .collapse:has([aria-label="blocNameAccordion"]) {
      & .label-fieldtext {
        &>span {
          width: 200px;
        }
      }
    }
    & .collapse:has([aria-label="blockParameterAccordion"]) {
      & .label-fieldtext {
        &>span {
          width: 200px;
        }
      }
      & .field-select {
        &>span {
          width: 202px;
        }
      }
    }
    & .collapse:has([aria-label="searchAccordion"]) {
      & .field-select {
        &>span {
          width: 270px;
        }
      }
    }
    & .collapse:has([aria-label="blockParameterAccordion2"]) {
      & .label-fieldtext {
        &>span {
          width: 400px;
        }
      }
    }
    & .collapse:has([aria-label="Open blockParameter"]) {
      & .label-fieldtext {
        &>span {
          width: 200px;
        }
      }
    }
    [data-section="layout"] {
      & .label-fieldtext {
        &>span {
          width: 180px;
        }
      }
      & .field-select {
        &>span {
          width: 198px;
        }
      }
      label:has([name="gap"]) {
        width: 100px;
      }
      [for="gapUnit"] {
        width: 100px;
      }
    }
    & .collapse:has([aria-label="objectPropertiesAccordion"]) {
      & .label-fieldtext {
        &>span {
          width: 200px;
          &:has(+[name="vt_HowGetPk"]),
                    &:has(+[name="vt_LabelFirstOption"]) {
            width: 400px;
          }
        }
      }
      & .field-select {
        &>span {
          width: 218px;
        }
      }
    }
    & .collapse:has([aria-label="displayLineListboxAccordion"]) {
      & .label-fieldtext {
        &>span {
          width: 220px;
        }
      }
      & .field-select {
        &>span {
          width: 238px;
        }
      }
    }
    & .collapse:has(.functionArguments) {
      & .field-select {
        &>span {
          min-width: 258px;
        }
      }
      & .parameters {
        & .label-fieldtext,& .field-select {
          &>span {
            min-width: 250px;
          }
        }
      }
    }
    #displayField {
      & .label-fieldtext {
        &>span {
          width: 250px;
        }
      }
      & .field-select {
        &>span {
          width: 268px;
        }
      }
      & .field-select:has(.ts-control) {
        &>span {
          width: 252px;
        }
      }
    }
    & label.floating-label span {
      background-color: #686868;
      color: #fff;
    }
    .floating-label {
      &:not(:has(input:placeholder-shown:not([role="combobox"]), textarea:placeholder-shown, ts)) {
        >span {
          background-color: var(--dev-color-primary-1);
          color: #fff;
        }
      }
    }
    .floating-label {
      &:focus-within,
            &:not(:has(input:placeholder-shown, textarea:placeholder-shown)) {
        >span {
          background-color: var(--dev-color-primary-1);
          color: #fff;
        }
      }
    }
    .toggle::after {
      top: 2px;
      left: 5px;
    }
    .toggle:checked:after {
      left: 21px;
    }
    & select,
        & input:not(.toggle, .btn),
        & textarea,
        & .form-floating.textarea {
      background-color: #686868 !important;
      color: #fff;
      border: none;
      &:focus {
        background-color: #777;
        color: #fff;
      }
    }
    & .textarea:has(label) {
      background-color: #444;
      padding: 3px;
      & .label-fieldtext {
        min-height: 10px;
      }
    }
    & input.toggle+span.label-text,
        .text-white .label-text {
      color: #fff;
    }
    & .collapse-title {
      background-color: var(--dev-color-primary-1);
    }
    & [data-sortable-item] .collapse-title {
      padding-left: 30px;
    }
    & [data-sortable-item] {
      position: relative;
    }
    & [data-sortable-item] [draggable] {
      position: absolute;
      z-index: 999;
      top: 0;
      left: 0;
      display: flex;
      align-items: center;
      width: 30px;
      height: 60px;
    }
    & [data-sortable-item] [draggable] i {
      font-size: 30px;
    }
    & .collapse-content {
      background-color: var(--dev-color-primary-1);
      display: flex;
      flex-direction: column;
      gap: 8px;
    }
    .quill-editor {
      background-color: #fff;
      color: black;
    }
    .ql-toolbar {
      background-color: #fff;
    }
    .button {
      color: black;
    }
    & input.toggle {
      background-color: #fff;
    }
    h1,
        h2,
        h3 {
      font-size: 16px !important;
    }
  }
}
label {
  & span {
    border: none;
  }
}
label:has([type="hidden"]) {
  display: none;
}
.collapse {
  >input:is([type="checkbox"], [type="radio"]) {
    width: auto;
  }
}
.propertiesDisplayed {
  box-shadow: inset 0px 0px 5px var(--bspokeBleu) !important;
}
[bspk="accordion"].propertiesDisplayed {
  box-shadow: none !important;
}
[bspk="accordion"].propertiesDisplayed>div.join {
  box-shadow: inset 0px 0px 5px var(--bspokeBleu) !important;
}
.collapse-arrow {
  &>.collapse-title::after {
    top: 50%;
  }
}
[data-listensearch] [bspk="accordionTitle"] {
  height: 50px;
  min-height: 0px;
}
[data-listensearch] label.collapse-title {
  padding: 0;
  height: 50px;
  min-height: 0px;
}
[data-listensearch] .collapse-content {
  border-top: solid 1px rgb(212 212 212);
  align-items: start;
}
[bspk="accordion"][data-listensearch]>input {
  min-height: 0px;
}
[data-uuid="C479865535D1974597CAE07963642783"] #bspkMenu {
  height: 100%;
}
.dragging {
  opacity: .6;
  &:where(.details, i) {
    opacity: 0;
  }
  & .buttons {
    opacity: 0;
  }
}
.dropZone {
  background-color: #0d0;
  &.horizontal {
    width: 80%;
    left: 10%;
    height: 15px;
  }
  &.vertical {
    height: 80%;
    top: 10%;
    width: 5px;
  }
}
.dropShadow {
  box-shadow: inset 0 0 10px #0d0 !important;
  position: relative;
}
.dropZoneBefore {
  box-shadow: 0 -10px 2px -5px #0f0 !important;
}
.dropZoneAfter {
  box-shadow: 0 10px 2px -5px #0f0 !important;
}
.btn:disabled,
input:disabled,
select:disabled,
textarea:disabled {
  background-color: #e6e6e6 !important;
  color: #b5b5b5;
}
#filesTree .menu {
  summary:hover,
    a:hover {
    background-color: white;
    color: black;
  }
}
.menu {
  & :where(li > details > summary >  :where(div,a) ) {
    display: grid;
    gap: calc(0.25rem * 2);
    grid-auto-flow: column;
  }
}
.dropdown {
  a {
    color: #2B3440;
    background-color: white;
    &:hover {
      color: white;
      background-color: #2B3440;
    }
  }
}
[bspk="arborescence"] .selected {
  background-color: #ececff;
}
[bspk="arborescence"][event-onSelect] {
  cursor: pointer;
}
.alert-success {
  background-color: #96e3c7;
}
[bspk="menuManager"],
[bspk="menu"] {
  & li.active,
    & summary.active {
    background-color: #3f3f46;
  }
}
.navbar.menu-horizontal {
  flex-direction: row;
}
.navbar.menu-vertical {
  flex-direction: column;
  align-items: start;
  padding: 0;
}
[data-input="containerRows"] [data-page]:not([data-isloaded]) {
  background-color: #e6e6e6;
}
.loader {
  width: 48px;
  height: 48px;
  border: 5px solid #FFF;
  border-bottom-color: black;
  border-radius: 50%;
  display: inline-block;
  box-sizing: border-box;
  animation: rotation 1s linear infinite;
}
@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
[bspk="btn-menu"] {
  border: solid 1px #ccc;
  border-radius: 5px;
  padding: 5px;
  margin: 0 5px;
  cursor: pointer;
}
[bspk="btn-menu"] i {
  font-size: 20px;
  text-align: center;
}
[bspk="btn-menu"] span {
  font-size: 12px;
  text-align: center;
}
[data-input="bspkDroppable"]>div:not(:has(*)) {
  padding: 20px;
}
.dev-pannel-tab-content {
  height: var(--height-objects);
}
[useimagemodal="true"] {
  cursor: pointer;
}
input.error,
select.error,
textarea.error {
  border: 1px solid red;
}
textarea {
  height: auto;
}
.field-select {
  &:has(.tomselected) {
    padding: 0;
    & .ts-wrapper {
      padding-right: 12px;
    }
  }
}
[bspk="listbox"] {
  font-size: 12px !important;
  max-width: 100%;
  & [event-onclick] {
    position: relative;
    &:hover {
      &:after {
        content: "\F4CB";
        position: absolute;
        top: 0;
        right: 5px;
        font-family: 'bootstrap-icons';
        text-align: center;
        font-size: 10px;
      }
    }
  }
  & [data-input="navigation"] {
    [data-target] {
      cursor: pointer;
      padding: 5px;
      &:hover {
        background-color: #E6E6E6;
        border-radius: 5px;
      }
    }
    select {
      cursor: pointer;
    }
    .active {
      background-color: #555;
      border-radius: 5px;
      color: white;
    }
  }
  [data-input="selectRows"], [data-input="selectAll"] {
    height: 18px;
    width: 18px;
    border-radius: 3px;
  }
}
[bspk="listbox"] .labelgroup {
  border-color: #ccc;
  & label {
    line-height: 1;
  }
}
[id^="listbox-"].typenavigation [data-row] {
  height: 30px;
  overflow: hidden;
  white-space: nowrap;
  [data-fieldname] {
    overflow: hidden;
  }
}
[id^="listbox-"].typenavigation [data-input="pagination"] select {
  padding-left: 3px;
}
[id^="listbox-"].typefill .listboxcadre {
  overflow-y: hidden;
}
[id^="listbox-"].typefill [data-input="results"],
[id^="listbox-"].typefill .containerRows {
  overflow-y: hidden;
}
[data-input="results"] {
  overflow-x: hidden;
}
[data-sortorder] i.bi-caret-up-fill,
[data-sortorder] i.bi-caret-down-fill {
  display: block;
  color: rgba(85, 85, 85, 0.2);
}
[data-sortorder="ASC"] i.bi-caret-up-fill {
  color: rgba(85, 85, 85);
}
[data-sortorder="DESC"] i.bi-caret-down-fill {
  color: rgba(85, 85, 85);
}
.collapse {
  &>input:is([type="checkbox"], [type="radio"]) {
    padding: 0;
  }
}
.select {
  &:focus,
    &:focus-within {
    z-index: 10;
  }
}
.collapse-content {
  overflow: visible !important;
  z-index: 1000;
}
.collapse-content:not(#devPannel .collapse-content) {
  min-width: 0;
}
.collapse-content select:focus,
.collapse-content .ts-wrapper.focus {
  position: relative;
  z-index: 1001;
}
.collapse:has(select:focus),
.collapse:has(.ts-wrapper.focus) {
  overflow: visible !important;
  z-index: 1000;
  & .collapse-content {
    overflow: visible !important;
    z-index: 1000;
  }
  & select {
    z-index: 1001;
  }
}
.collapse-content .ts-wrapper {
  & .ts-dropdown {
    z-index: 1002;
  }
}
.ts-wrapper {
  & .ts-control {
    &>input {
      min-width: 1rem;
    }
  }
  & [data-selectable] {
    min-height: 24px;
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(.modal-start, .modal-end) {
    scrollbar-gutter: stable;
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-content: "";
      --tw-outline-style: solid;
    }
  }
} 